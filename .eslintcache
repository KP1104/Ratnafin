[{"D:\\PROJECTS\\Ratnafin\\src\\index.tsx":"1","D:\\PROJECTS\\Ratnafin\\src\\serviceWorker.ts":"2","D:\\PROJECTS\\Ratnafin\\src\\mock\\index.ts":"3","D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\index.tsx":"4","D:\\PROJECTS\\Ratnafin\\src\\app\\los\\index.tsx":"5","D:\\PROJECTS\\Ratnafin\\src\\mock\\retailsLoan.ts":"6","D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\app.tsx":"7","D:\\PROJECTS\\Ratnafin\\src\\app\\los\\app.tsx":"8","D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\theme.ts":"9","D:\\PROJECTS\\Ratnafin\\src\\app\\los\\theme.ts":"10","D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\sdk.ts":"11","D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\index.ts":"12","D:\\PROJECTS\\Ratnafin\\src\\registry\\yup\\index.ts":"13","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\index.tsx":"14","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\index.tsx":"15","D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\others.ts":"16","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\lead.js":"17","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\api.js":"18","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\style.ts":"19","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js":"20","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx":"21","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\index.ts":"22","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\index.ts":"23","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts":"24","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts":"25","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts":"26","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts":"27","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\index.tsx":"28","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\index.tsx":"29","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\index.tsx":"30","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx":"31","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\content\\index.tsx":"32","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js":"33","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx":"34","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\style.ts":"35","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx":"36","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts":"37","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx":"38","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\content\\style.ts":"39","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\style.ts":"40","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts":"41","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx":"42","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx":"43","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx":"44","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx":"45","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\header.tsx":"46","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\home.tsx":"47","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx":"48","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\renderer.tsx":"49","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js":"50","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\style.ts":"51","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\style.ts":"52","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\types.ts":"53","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts":"54","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts":"55","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts":"56","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts":"57","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts":"58","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts":"59","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts":"60","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts":"61","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts":"62","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\style.ts":"63","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\style.ts":"64","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx":"65","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx":"66","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts":"67","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx":"68","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx":"69","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx":"70","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx":"71","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx":"72","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx":"73","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\metaData.ts":"74","D:\\PROJECTS\\Ratnafin\\src\\assets\\icons\\productIcons.tsx":"75","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\renderer.tsx":"76","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts":"77","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts":"78","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts":"79","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx":"80","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts":"81","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts":"82","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts":"83","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts":"84","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts":"85","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts":"86","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts":"87","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx":"88","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts":"89","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts":"90","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts":"91","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts":"92","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts":"93","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts":"94","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts":"95","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx":"96","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx":"97","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx":"98","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx":"99","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts":"100","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx":"101","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx":"102","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx":"103","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\style.ts":"104","D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx":"105","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts":"106","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts":"107","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\index.ts":"108","D:\\PROJECTS\\Ratnafin\\src\\registry\\rulesEngine\\index.ts":"109","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\context.ts":"110","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\types.ts":"111","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts":"112","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\util.ts":"113","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\field.ts":"114","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\form.ts":"115","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\atoms.ts":"116","D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\observer.tsx":"117","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx":"118","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts":"119","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\spacer\\index.ts":"120","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts":"121","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\slider\\index.ts":"122","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\rating\\index.ts":"123","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\radio\\index.ts":"124","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\select\\index.ts":"125","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\textField\\index.ts":"126","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\index.ts":"127","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\index.ts":"128","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\index.ts":"129","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts":"130","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts":"131","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts":"132","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx":"133","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts":"134","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx":"135","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx":"136","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx":"137","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx":"138","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx":"139","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\switch.tsx":"140","D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx":"141","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx":"142","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx":"143","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx":"144","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\textField\\textField.tsx":"145","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\select\\select.tsx":"146","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\radio\\radio.tsx":"147","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\rating\\rating.tsx":"148","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx":"149","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx":"150","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\slider\\slider.tsx":"151","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx":"152","D:\\PROJECTS\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx":"153","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts":"154","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts":"155","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts":"156","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts":"157","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\index.ts":"158","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts":"159","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts":"160","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts":"161","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts":"162","D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts":"163","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx":"164","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx":"165","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx":"166","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\index.tsx":"167","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts":"168","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\index.ts":"169","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx":"170","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx":"171","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx":"172","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\grid.tsx":"173","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx":"174","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx":"175","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx":"176","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx":"177","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx":"178","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx":"179","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\test.tsx":"180","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts":"181","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts":"182","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx":"183","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx":"184","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\gridController.tsx":"185","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx":"186","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx":"187","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx":"188","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx":"189","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx":"190","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx":"191","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx":"192","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts":"193","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx":"194","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts":"195","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx":"196","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx":"197","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts":"198","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx":"199","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\textColumnFilter.tsx":"200","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts":"201","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx":"202","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx":"203","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx":"204","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx":"205","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx":"206","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx":"207","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts":"208","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx":"209"},{"size":974,"mtime":1607349155429,"results":"210","hashOfConfig":"211"},{"size":5444,"mtime":1607348162787,"results":"212","hashOfConfig":"211"},{"size":949,"mtime":1607348204891,"results":"213","hashOfConfig":"211"},{"size":41,"mtime":1607348204818,"results":"214","hashOfConfig":"211"},{"size":41,"mtime":1607348204821,"results":"215","hashOfConfig":"211"},{"size":10241,"mtime":1607348204892,"results":"216","hashOfConfig":"211"},{"size":681,"mtime":1607348204817,"results":"217","hashOfConfig":"211"},{"size":603,"mtime":1607348204820,"results":"218","hashOfConfig":"211"},{"size":4463,"mtime":1608017191977,"results":"219","hashOfConfig":"211"},{"size":3780,"mtime":1608034980823,"results":"220","hashOfConfig":"211"},{"size":19029,"mtime":1608709024398,"results":"221","hashOfConfig":"211"},{"size":3164,"mtime":1607940195502,"results":"222","hashOfConfig":"211"},{"size":426,"mtime":1607348204988,"results":"223","hashOfConfig":"211"},{"size":305,"mtime":1607348204911,"results":"224","hashOfConfig":"211"},{"size":2625,"mtime":1608709043128,"results":"225","hashOfConfig":"211"},{"size":6736,"mtime":1607940195503,"results":"226","hashOfConfig":"211"},{"size":20718,"mtime":1608199754384,"results":"227","hashOfConfig":"211"},{"size":1584,"mtime":1607348204953,"results":"228","hashOfConfig":"211"},{"size":154,"mtime":1607348204981,"results":"229","hashOfConfig":"211"},{"size":51,"mtime":1607348204968,"results":"230","hashOfConfig":"211"},{"size":3663,"mtime":1608709042979,"results":"231","hashOfConfig":"211"},{"size":47,"mtime":1607348204902,"results":"232","hashOfConfig":"211"},{"size":48,"mtime":1607348204950,"results":"233","hashOfConfig":"211"},{"size":53,"mtime":1607348204956,"results":"234","hashOfConfig":"211"},{"size":90,"mtime":1608709042991,"results":"235","hashOfConfig":"211"},{"size":45,"mtime":1607348204971,"results":"236","hashOfConfig":"211"},{"size":49,"mtime":1607348204961,"results":"237","hashOfConfig":"211"},{"size":51,"mtime":1607348204906,"results":"238","hashOfConfig":"211"},{"size":1984,"mtime":1608709024288,"results":"239","hashOfConfig":"211"},{"size":48,"mtime":1607348204945,"results":"240","hashOfConfig":"211"},{"size":480,"mtime":1607348204978,"results":"241","hashOfConfig":"211"},{"size":457,"mtime":1607348204947,"results":"242","hashOfConfig":"211"},{"size":6469,"mtime":1607348204969,"results":"243","hashOfConfig":"211"},{"size":6800,"mtime":1607348204901,"results":"244","hashOfConfig":"211"},{"size":907,"mtime":1607348204937,"results":"245","hashOfConfig":"211"},{"size":975,"mtime":1607348204949,"results":"246","hashOfConfig":"211"},{"size":6189,"mtime":1607348204979,"results":"247","hashOfConfig":"211"},{"size":396,"mtime":1607348204856,"results":"248","hashOfConfig":"211"},{"size":333,"mtime":1607348204948,"results":"249","hashOfConfig":"211"},{"size":1741,"mtime":1607348204980,"results":"250","hashOfConfig":"211"},{"size":586,"mtime":1607348204977,"results":"251","hashOfConfig":"211"},{"size":5752,"mtime":1608709042976,"results":"252","hashOfConfig":"211"},{"size":9950,"mtime":1608709042994,"results":"253","hashOfConfig":"211"},{"size":6886,"mtime":1608709024334,"results":"254","hashOfConfig":"211"},{"size":2999,"mtime":1608199754462,"results":"255","hashOfConfig":"211"},{"size":2728,"mtime":1607348204905,"results":"256","hashOfConfig":"211"},{"size":600,"mtime":1607348204922,"results":"257","hashOfConfig":"211"},{"size":5175,"mtime":1607348204944,"results":"258","hashOfConfig":"211"},{"size":4822,"mtime":1607348204980,"results":"259","hashOfConfig":"211"},{"size":7071,"mtime":1607940195498,"results":"260","hashOfConfig":"211"},{"size":952,"mtime":1607348204903,"results":"261","hashOfConfig":"211"},{"size":1024,"mtime":1607348204951,"results":"262","hashOfConfig":"211"},{"size":4672,"mtime":1608709024279,"results":"263","hashOfConfig":"211"},{"size":1739,"mtime":1607348204976,"results":"264","hashOfConfig":"211"},{"size":1698,"mtime":1607940206842,"results":"265","hashOfConfig":"211"},{"size":2136,"mtime":1607502786504,"results":"266","hashOfConfig":"211"},{"size":1611,"mtime":1607348204869,"results":"267","hashOfConfig":"211"},{"size":45,"mtime":1607348204928,"results":"268","hashOfConfig":"211"},{"size":51,"mtime":1607348204939,"results":"269","hashOfConfig":"211"},{"size":55,"mtime":1607348204932,"results":"270","hashOfConfig":"211"},{"size":66,"mtime":1607348204925,"results":"271","hashOfConfig":"211"},{"size":107,"mtime":1607348204915,"results":"272","hashOfConfig":"211"},{"size":1131,"mtime":1607348204909,"results":"273","hashOfConfig":"211"},{"size":2641,"mtime":1607348204946,"results":"274","hashOfConfig":"211"},{"size":917,"mtime":1607348204958,"results":"275","hashOfConfig":"211"},{"size":2775,"mtime":1608709042988,"results":"276","hashOfConfig":"211"},{"size":47,"mtime":1607348204964,"results":"277","hashOfConfig":"211"},{"size":1470,"mtime":1607348204913,"results":"278","hashOfConfig":"211"},{"size":1733,"mtime":1607348204914,"results":"279","hashOfConfig":"211"},{"size":2790,"mtime":1608709024290,"results":"280","hashOfConfig":"211"},{"size":1159,"mtime":1607348204933,"results":"281","hashOfConfig":"211"},{"size":1903,"mtime":1607348204941,"results":"282","hashOfConfig":"211"},{"size":15741,"mtime":1608709024293,"results":"283","hashOfConfig":"211"},{"size":13501,"mtime":1608709024283,"results":"284","hashOfConfig":"211"},{"size":48907,"mtime":1607348204824,"results":"285","hashOfConfig":"211"},{"size":7190,"mtime":1607940195486,"results":"286","hashOfConfig":"211"},{"size":5947,"mtime":1607348204863,"results":"287","hashOfConfig":"211"},{"size":855,"mtime":1607348162735,"results":"288","hashOfConfig":"211"},{"size":49,"mtime":1607348204885,"results":"289","hashOfConfig":"211"},{"size":3044,"mtime":1607348204854,"results":"290","hashOfConfig":"211"},{"size":53,"mtime":1607348162746,"results":"291","hashOfConfig":"211"},{"size":16605,"mtime":1608709024286,"results":"292","hashOfConfig":"211"},{"size":1427,"mtime":1607348204917,"results":"293","hashOfConfig":"211"},{"size":196,"mtime":1607348204926,"results":"294","hashOfConfig":"211"},{"size":736,"mtime":1607348204934,"results":"295","hashOfConfig":"211"},{"size":1205,"mtime":1607348204940,"results":"296","hashOfConfig":"211"},{"size":1404,"mtime":1607348204930,"results":"297","hashOfConfig":"211"},{"size":5410,"mtime":1608709042985,"results":"298","hashOfConfig":"211"},{"size":59,"mtime":1607348204919,"results":"299","hashOfConfig":"211"},{"size":1658,"mtime":1607348204869,"results":"300","hashOfConfig":"211"},{"size":4872,"mtime":1607940195476,"results":"301","hashOfConfig":"211"},{"size":1137,"mtime":1607348204865,"results":"302","hashOfConfig":"211"},{"size":453,"mtime":1607348204867,"results":"303","hashOfConfig":"211"},{"size":2024,"mtime":1608709024281,"results":"304","hashOfConfig":"211"},{"size":697,"mtime":1607348162733,"results":"305","hashOfConfig":"211"},{"size":550,"mtime":1607348204887,"results":"306","hashOfConfig":"211"},{"size":2020,"mtime":1607348204856,"results":"307","hashOfConfig":"211"},{"size":6510,"mtime":1607348204857,"results":"308","hashOfConfig":"211"},{"size":2255,"mtime":1607348204868,"results":"309","hashOfConfig":"211"},{"size":1734,"mtime":1607508220917,"results":"310","hashOfConfig":"211"},{"size":5095,"mtime":1608709042983,"results":"311","hashOfConfig":"211"},{"size":1596,"mtime":1607348204918,"results":"312","hashOfConfig":"211"},{"size":4493,"mtime":1608544161936,"results":"313","hashOfConfig":"211"},{"size":1197,"mtime":1607348204859,"results":"314","hashOfConfig":"211"},{"size":4518,"mtime":1607348204866,"results":"315","hashOfConfig":"211"},{"size":1867,"mtime":1607348204921,"results":"316","hashOfConfig":"211"},{"size":2232,"mtime":1607348204920,"results":"317","hashOfConfig":"211"},{"size":248,"mtime":1607348162755,"results":"318","hashOfConfig":"211"},{"size":568,"mtime":1607348204987,"results":"319","hashOfConfig":"211"},{"size":300,"mtime":1607348162757,"results":"320","hashOfConfig":"211"},{"size":3482,"mtime":1607348204898,"results":"321","hashOfConfig":"211"},{"size":13996,"mtime":1607348162758,"results":"322","hashOfConfig":"211"},{"size":2891,"mtime":1607348162763,"results":"323","hashOfConfig":"211"},{"size":21507,"mtime":1607348204894,"results":"324","hashOfConfig":"211"},{"size":12221,"mtime":1607348204896,"results":"325","hashOfConfig":"211"},{"size":7199,"mtime":1607348162756,"results":"326","hashOfConfig":"211"},{"size":1100,"mtime":1607348162761,"results":"327","hashOfConfig":"211"},{"size":1458,"mtime":1607348204884,"results":"328","hashOfConfig":"211"},{"size":1438,"mtime":1608709024295,"results":"329","hashOfConfig":"211"},{"size":102,"mtime":1607348162711,"results":"330","hashOfConfig":"211"},{"size":177,"mtime":1607348162718,"results":"331","hashOfConfig":"211"},{"size":120,"mtime":1607348162709,"results":"332","hashOfConfig":"211"},{"size":120,"mtime":1607348162705,"results":"333","hashOfConfig":"211"},{"size":117,"mtime":1607348162704,"results":"334","hashOfConfig":"211"},{"size":122,"mtime":1607348162707,"results":"335","hashOfConfig":"211"},{"size":134,"mtime":1607348162715,"results":"336","hashOfConfig":"211"},{"size":423,"mtime":1607348162701,"results":"337","hashOfConfig":"211"},{"size":251,"mtime":1607348162712,"results":"338","hashOfConfig":"211"},{"size":271,"mtime":1607348162697,"results":"339","hashOfConfig":"211"},{"size":173,"mtime":1607348162721,"results":"340","hashOfConfig":"211"},{"size":181,"mtime":1607348162723,"results":"341","hashOfConfig":"211"},{"size":160,"mtime":1607348162725,"results":"342","hashOfConfig":"211"},{"size":152,"mtime":1607348204831,"results":"343","hashOfConfig":"211"},{"size":77,"mtime":1607348204935,"results":"344","hashOfConfig":"211"},{"size":1214,"mtime":1607348162725,"results":"345","hashOfConfig":"211"},{"size":1090,"mtime":1607348162722,"results":"346","hashOfConfig":"211"},{"size":2941,"mtime":1607348204832,"results":"347","hashOfConfig":"211"},{"size":3676,"mtime":1607348204833,"results":"348","hashOfConfig":"211"},{"size":3551,"mtime":1607348204846,"results":"349","hashOfConfig":"211"},{"size":2848,"mtime":1607348204845,"results":"350","hashOfConfig":"211"},{"size":1200,"mtime":1607348162724,"results":"351","hashOfConfig":"211"},{"size":2496,"mtime":1607348204835,"results":"352","hashOfConfig":"211"},{"size":2510,"mtime":1607348204836,"results":"353","hashOfConfig":"211"},{"size":2920,"mtime":1607348204834,"results":"354","hashOfConfig":"211"},{"size":4683,"mtime":1608374030612,"results":"355","hashOfConfig":"211"},{"size":7840,"mtime":1607348204841,"results":"356","hashOfConfig":"211"},{"size":3428,"mtime":1607348204839,"results":"357","hashOfConfig":"211"},{"size":2540,"mtime":1607348204840,"results":"358","hashOfConfig":"211"},{"size":9187,"mtime":1607348204831,"results":"359","hashOfConfig":"211"},{"size":3748,"mtime":1607940195494,"results":"360","hashOfConfig":"211"},{"size":2739,"mtime":1607348204843,"results":"361","hashOfConfig":"211"},{"size":3203,"mtime":1607348204848,"results":"362","hashOfConfig":"211"},{"size":535,"mtime":1607348162711,"results":"363","hashOfConfig":"211"},{"size":197,"mtime":1607348162744,"results":"364","hashOfConfig":"211"},{"size":60,"mtime":1607668317978,"results":"365","hashOfConfig":"211"},{"size":288,"mtime":1607348162743,"results":"366","hashOfConfig":"211"},{"size":268,"mtime":1607348204874,"results":"367","hashOfConfig":"211"},{"size":30,"mtime":1607348162745,"results":"368","hashOfConfig":"211"},{"size":358,"mtime":1607348204871,"results":"369","hashOfConfig":"211"},{"size":272,"mtime":1607348162742,"results":"370","hashOfConfig":"211"},{"size":917,"mtime":1607348204873,"results":"371","hashOfConfig":"211"},{"size":69,"mtime":1607348162748,"results":"372","hashOfConfig":"211"},{"size":1179,"mtime":1607348162748,"results":"373","hashOfConfig":"211"},{"size":912,"mtime":1607940206835,"results":"374","hashOfConfig":"211"},{"size":4633,"mtime":1608709024325,"results":"375","hashOfConfig":"211"},{"size":3230,"mtime":1607940195488,"results":"376","hashOfConfig":"211"},{"size":2485,"mtime":1608709024263,"results":"377","hashOfConfig":"211"},{"size":9761,"mtime":1608709024274,"results":"378","hashOfConfig":"211"},{"size":155,"mtime":1608709024257,"results":"379","hashOfConfig":"211"},{"size":842,"mtime":1607940195460,"results":"380","hashOfConfig":"211"},{"size":269,"mtime":1607940195458,"results":"381","hashOfConfig":"211"},{"size":3078,"mtime":1608709024243,"results":"382","hashOfConfig":"211"},{"size":6801,"mtime":1608709024259,"results":"383","hashOfConfig":"211"},{"size":421,"mtime":1607940195470,"results":"384","hashOfConfig":"211"},{"size":2221,"mtime":1607940195474,"results":"385","hashOfConfig":"211"},{"size":1945,"mtime":1608202413169,"results":"386","hashOfConfig":"211"},{"size":278,"mtime":1607940195455,"results":"387","hashOfConfig":"211"},{"size":765,"mtime":1608280213359,"results":"388","hashOfConfig":"211"},{"size":725,"mtime":1608280213343,"results":"389","hashOfConfig":"211"},{"size":3695,"mtime":1608709303079,"results":"390","hashOfConfig":"211"},{"size":131,"mtime":1608709024247,"results":"391","hashOfConfig":"211"},{"size":1599,"mtime":1608709042973,"results":"392","hashOfConfig":"211"},{"size":814,"mtime":1608709024245,"results":"393","hashOfConfig":"211"},{"size":1813,"mtime":1608709024254,"results":"394","hashOfConfig":"211"},{"size":3956,"mtime":1608709024260,"results":"395","hashOfConfig":"211"},{"size":510,"mtime":1608709024258,"results":"396","hashOfConfig":"211"},{"size":4912,"mtime":1608709024249,"results":"397","hashOfConfig":"211"},{"size":5310,"mtime":1608709024248,"results":"398","hashOfConfig":"211"},{"size":2331,"mtime":1608709024255,"results":"399","hashOfConfig":"211"},{"size":202,"mtime":1608709024251,"results":"400","hashOfConfig":"211"},{"size":3406,"mtime":1608709024265,"results":"401","hashOfConfig":"211"},{"size":307,"mtime":1608709024264,"results":"402","hashOfConfig":"211"},{"size":59,"mtime":1608709043001,"results":"403","hashOfConfig":"211"},{"size":3199,"mtime":1608709043004,"results":"404","hashOfConfig":"211"},{"size":1676,"mtime":1608709043002,"results":"405","hashOfConfig":"211"},{"size":151,"mtime":1608709042997,"results":"406","hashOfConfig":"211"},{"size":149,"mtime":1608709042999,"results":"407","hashOfConfig":"211"},{"size":47,"mtime":1608709043013,"results":"408","hashOfConfig":"211"},{"size":3432,"mtime":1608709043020,"results":"409","hashOfConfig":"211"},{"size":2471,"mtime":1608709043148,"results":"410","hashOfConfig":"211"},{"size":394,"mtime":1608709043015,"results":"411","hashOfConfig":"211"},{"size":720,"mtime":1608709043016,"results":"412","hashOfConfig":"211"},{"size":699,"mtime":1608709043018,"results":"413","hashOfConfig":"211"},{"size":1363,"mtime":1608709043006,"results":"414","hashOfConfig":"211"},{"size":3035,"mtime":1608709043025,"results":"415","hashOfConfig":"211"},{"size":1426,"mtime":1608709043027,"results":"416","hashOfConfig":"211"},{"size":1571,"mtime":1608709043008,"results":"417","hashOfConfig":"211"},{"size":1640,"mtime":1608709043029,"results":"418","hashOfConfig":"211"},{"size":912,"mtime":1608709043010,"results":"419","hashOfConfig":"211"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},"1oeud43",{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"422"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"475","messages":"476","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"481","usedDeprecatedRules":"422"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"490","usedDeprecatedRules":"456"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"513","usedDeprecatedRules":"422"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"456"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"422"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"563","usedDeprecatedRules":"422"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"422"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"583","messages":"584","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"422"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"760","usedDeprecatedRules":"422"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"422"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"766","usedDeprecatedRules":"422"},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"422"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"422"},"D:\\PROJECTS\\Ratnafin\\src\\index.tsx",[],["851","852"],"D:\\PROJECTS\\Ratnafin\\src\\serviceWorker.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\mock\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\los\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\mock\\retailsLoan.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\app.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\los\\app.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\crm\\theme.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\app\\los\\theme.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\sdk.ts",["853","854","855"],"import { OptionsProps } from \"components/common/types\";\r\nimport { osName } from \"react-device-detect\";\r\n\r\ninterface CommonFetcherResponse {\r\n  data: any;\r\n  status: \"success\" | \"failure\";\r\n}\r\ntype ExternalResponse = any;\r\n\r\ninterface sessionObjType {\r\n  baseURL?: URL;\r\n  loginStatus: boolean;\r\n  token?: any;\r\n}\r\n\r\nconst isBroswer = new Function(\r\n  \"try {return this===window;}catch(e){ return false;}\"\r\n);\r\n\r\nconst RaatnaFinAPI = () => {\r\n  let sessionObj: sessionObjType = {\r\n    loginStatus: false,\r\n    token: {},\r\n  };\r\n  let sessionToken;\r\n  const createSession = async (APIURL: string) => {\r\n    sessionObj.baseURL = new URL(APIURL);\r\n    var formdata = new FormData();\r\n    let existingSession = \"\";\r\n    if (isBroswer()) {\r\n      existingSession = localStorage.getItem(\"currentAccessToken\") ?? \"\";\r\n    }\r\n    formdata.append(\"tokenId\", existingSession);\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n    const url = new URL(\"./Login\", sessionObj.baseURL);\r\n    sessionToken = fetch(\r\n      url.href,\r\n      //@ts-ignore\r\n      requestOptions\r\n    );\r\n    sessionToken\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        verifyRequest(result);\r\n      });\r\n    sessionToken.catch((error) => {\r\n      verifyRequest(error);\r\n    });\r\n  };\r\n  const verifyRequest = (data) => {\r\n    if (data[\"access_token\"] && data[\"refresh_token\"]) {\r\n      sessionObj.loginStatus = true;\r\n      sessionObj.token = data;\r\n      if (isBroswer()) {\r\n        localStorage.setItem(\r\n          \"currentAccessToken\",\r\n          sessionObj?.token?.access_token ?? \"\"\r\n        );\r\n      }\r\n    } else {\r\n      sessionObj.loginStatus = false;\r\n    }\r\n  };\r\n  const loginStatus = () => {\r\n    return sessionObj.loginStatus;\r\n  };\r\n\r\n  const externalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<ExternalResponse> => {\r\n    try {\r\n      let response = await fetch(url, payload);\r\n      let data = await response.json();\r\n      return data;\r\n    } catch (e) {\r\n      return new Error(`Error fetching data-${e.message}`);\r\n    }\r\n  };\r\n  const getPincode = async (\r\n    pincode: string\r\n  ): Promise<{ options: OptionsProps[]; others: any }> => {\r\n    const data = await externalFetcher(\r\n      `https://api.postalpincode.in/pincode/${pincode}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n      }\r\n    );\r\n    if (Array.isArray(data) && data.length === 1) {\r\n      let result = data[0];\r\n      if (String(result.Status).toLowerCase() === \"success\") {\r\n        let areaArray = result.PostOffice.map((dtl) => ({\r\n          value: dtl?.Name,\r\n          label: dtl?.Name,\r\n        }));\r\n        areaArray = [{ label: \"Select option\", value: \"00\" }, ...areaArray];\r\n        const otherValues = result.PostOffice.reduce((accumlator, current) => {\r\n          const val = {\r\n            city: current.Block,\r\n            district: current.District,\r\n            state: current.State,\r\n            country: current.Country,\r\n          };\r\n          accumlator[current.Name] = val;\r\n          return accumlator;\r\n        }, {});\r\n        return { options: areaArray, others: otherValues };\r\n      }\r\n    }\r\n    return {\r\n      options: [{ label: \"Error fetching pincode\", value: \"0\" }],\r\n      others: null,\r\n    };\r\n  };\r\n\r\n  const internalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<CommonFetcherResponse> => {\r\n    try {\r\n      await sessionToken;\r\n      await wait(); //wait of 1ms to execute code in next event loop cycle to make sure sessionToken has time to update sessionObj\r\n      if (sessionObj.loginStatus === false) {\r\n        return {\r\n          status: \"failure\",\r\n          data: new Error(\"session expired\"),\r\n        };\r\n      }\r\n      let response = await fetch(new URL(url, sessionObj.baseURL).href, {\r\n        method: \"POST\",\r\n        ...payload,\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${sessionObj?.token?.access_token}`,\r\n        }),\r\n      });\r\n      if (String(response.status) === \"200\") {\r\n        let data = await response.json();\r\n        return {\r\n          status: String(data.status) === \"0\" ? \"success\" : \"failure\",\r\n          data: data,\r\n        };\r\n      } else {\r\n        return {\r\n          status: \"failure\",\r\n          data: \"\",\r\n        };\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        status: \"failure\",\r\n        data: e,\r\n      };\r\n    }\r\n  };\r\n\r\n  const getProductType = async (\r\n    _: any,\r\n    productCode: string\r\n  ): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/get_sub_product\", {\r\n      body: JSON.stringify({\r\n        action: \"get_sub_product\",\r\n        request_data: {\r\n          code: productCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.sub_prod_code,\r\n        label: one?.sub_prod_desc,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getPropertyCity = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\r\n      \"./users/get_property_city\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_property_city\",\r\n          request_data: {\r\n            property_city: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getBankList = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/getBankList\", {\r\n      body: JSON.stringify({\r\n        action: \"get_bank_list\",\r\n        request_data: {\r\n          get_bank_list: \"\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.bank_cd,\r\n        label: one?.bank_name,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const getMiscVal = (categCode: string) => async (): Promise<\r\n    OptionsProps[]\r\n  > => {\r\n    const { status, data } = await internalFetcher(\"./users/getmiscval\", {\r\n      body: JSON.stringify({\r\n        action: \"get_misc_val\",\r\n        request_data: {\r\n          category_nm: categCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const requestForOTP = async (phoneNumber: string) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPSent\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPSent\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: \"\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const handleverifyOtp = async (mobileNumber: string, otp: string) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPVerify\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPVerify\",\r\n        request_data: {\r\n          mobile_number: mobileNumber,\r\n          otp: otp,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const handleverifyPwd = async (password: string, phoneNumber: string) => {\r\n    const { data, status } = await internalFetcher(\"./users/customer_login\", {\r\n      body: JSON.stringify({\r\n        action: \"customer_login\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: password,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getMetaData = async (state) => {\r\n    const { prodCode, empCode } = state;\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"render_form\",\r\n        request_data: {\r\n          main_prod_cd: `${prodCode}`,\r\n          empl_cd: `${empCode}`,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n  const pushFormData = async (\r\n    submitAction?: string,\r\n    formData?: any,\r\n    navigationProps?: any\r\n  ) => {\r\n    //rename prodCode to formCode since backend uses prodCode as FormCode\r\n    const { prodCode, ...others } = navigationProps;\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: submitAction,\r\n        request_data: { ...formData, ...others, formCode: prodCode },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n  //remove this function after migration\r\n  const getAccessToken = async () => {\r\n    await sessionToken;\r\n    if (sessionObj?.token[\"access_token\"]) {\r\n      return `Bearer ${sessionObj?.token[\"access_token\"]}`;\r\n    }\r\n    return \"Bearer not_valid_token\";\r\n  };\r\n\r\n  const getsubProductDtl = async (fieldData) => {\r\n    if (fieldData.value.length !== 0) {\r\n      let codes = await getProductType(null, fieldData.value);\r\n      return {\r\n        subProductType: {\r\n          options: codes,\r\n          value: \"00\",\r\n        },\r\n      };\r\n    } else if (fieldData.value === \"\") {\r\n      return {\r\n        subProductType: {\r\n          options: [],\r\n          value: \"\",\r\n        },\r\n      };\r\n    }\r\n  };\r\n  const getDashboardEmployeeDataList = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"get_inquiry_data\",\r\n        request_data: {\r\n          status: \"P\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getDashdoardDisplayEmpDetails = async (inquiryCode: string) => {\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/getInquiryDetails\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_inquiry_details\",\r\n          request_data: {\r\n            inquiry_code: inquiryCode,\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const submitBecomePartnerData = async (submitAction, formData?: any) => {\r\n    const { data, status } = await internalFetcher(\"./users/become_partner\", {\r\n      body: JSON.stringify({\r\n        action: \"become_partner\",\r\n        request_data: { ...formData },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n\r\n  const validatePanNumber = async (currentField) => {\r\n    const { data, status } = await internalFetcher(\"./users/panvalidator\", {\r\n      body: JSON.stringify({\r\n        action: \"panvalidator\",\r\n        request_data: { doc_number: currentField?.value ?? \"INVALID_PAN\" },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return \"\";\r\n    } else {\r\n      return \"invalid pan number\";\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberExists = async (phoneNumber) => {\r\n    const { data, status } = await internalFetcher(\"./users/verify_user\", {\r\n      body: JSON.stringify({\r\n        action: \"verify_user\",\r\n        request_data: { mobile: phoneNumber },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const updateUserPassword = async (\r\n    confirmPassword: string,\r\n    phoneNumber: string\r\n  ) => {\r\n    const { data, status } = await internalFetcher(\"./users/set_password\", {\r\n      body: JSON.stringify({\r\n        action: \"set_password\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: confirmPassword,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const initiateAadharValidation = async (tranCode) => {\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/aadharUniqueURLReq\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"aadharUniqueURLReq\",\r\n          request_data: { inquiryID: tranCode },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatus = async (aadharRequestID) => {\r\n    //console.log(refIdForAadhar);\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/fetchaadharstatus\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"aadharstatus\",\r\n          request_data: {\r\n            transactionID: aadharRequestID,\r\n            updateStatus: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridMetaData = async (gridCode) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"grid_form_data\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridData = async (gridCode, fromNo, toNo, sortBy) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"inquiry_data_pagewise\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n          from_row: fromNo,\r\n          to_row: toNo,\r\n          orderby_columns: sortBy,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatusEventSource = async (\r\n    aadharRequestID\r\n  ): Promise<CommonFetcherResponse> => {\r\n    var urlEndPoint = `https://digix.aiplsolution.in/ratnaafin/users/getaadharstatus?transactionId=${aadharRequestID}`;\r\n    var eventSource = new EventSource(urlEndPoint);\r\n    return new Promise((res) => {\r\n      //@ts-ignore\r\n      eventSource.addEventListener(\"transactionId\", ({ data: eventData }) => {\r\n        eventData = JSON.parse(eventData);\r\n        console.log(eventData);\r\n        let response: CommonFetcherResponse = { status: \"failure\", data: \"\" };\r\n        if (eventData.status === \"0\") {\r\n          response.status = \"success\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        } else {\r\n          response.status = \"failure\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        }\r\n        eventSource.close();\r\n      });\r\n    });\r\n  };\r\n\r\n  return {\r\n    createSession,\r\n    loginStatus,\r\n    getPincode,\r\n    getProductType,\r\n    getPropertyCity,\r\n    getBankList,\r\n    getMiscVal,\r\n    getAccessToken,\r\n    requestForOTP,\r\n    getMetaData,\r\n    pushFormData,\r\n    handleverifyOtp,\r\n    handleverifyPwd,\r\n    getsubProductDtl,\r\n    getDashboardEmployeeDataList,\r\n    getDashdoardDisplayEmpDetails,\r\n    submitBecomePartnerData,\r\n    validatePanNumber,\r\n    checkPhoneNumberExists,\r\n    updateUserPassword,\r\n    initiateAadharValidation,\r\n    fetchAadharRequestStatus,\r\n    fetchAadharRequestStatusEventSource,\r\n    fetchGridMetaData,\r\n    fetchGridData,\r\n  };\r\n};\r\n\r\nexport const APISDK = RaatnaFinAPI();\r\n\r\nexport const wait = () => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => res(true), 1);\r\n  });\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\registry\\yup\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\index.tsx",["856"],"D:\\PROJECTS\\Ratnafin\\src\\registry\\fns\\others.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\lead.js",[],["857","858"],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\api.js",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\index.tsx",["859"],"import { Routes, Route } from \"react-router-dom\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useStyles } from \"./style\";\r\nimport Home from \"./home\";\r\nimport Login from \"./login\";\r\nimport ThankYouPage from \"./thankyou\";\r\nimport NotFoundPage from \"./notFound\";\r\nimport InquiryForms from \"./inquiryForms\";\r\nimport { BecomePartnerFormWrapper } from \"./becomePartner\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport AadharVerificationIFrame from \"./aadharVerification/aadharVerificationIFrame\";\r\n\r\nconst Index = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<Home />} />\r\n      <Route path=\"login\" element={<Login />} />\r\n      <Route\r\n        path=\"form/becomePartner\"\r\n        element={\r\n          <Box width={1} display=\"flex\" className={classes.wrapper}>\r\n            <div className={classes.paper}>\r\n              <BecomePartnerFormWrapper />\r\n            </div>\r\n          </Box>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"form/:formName\"\r\n        element={\r\n          <Box width={1} display=\"flex\" className={classes.wrapper}>\r\n            <div className={classes.paper}>\r\n              <InquiryForms />\r\n            </div>\r\n          </Box>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"aadharVerificationIFrame\"\r\n        element={\r\n          <Box width={1} display=\"flex\" className={classes.wrapper}>\r\n            <div className={classes.paper}>\r\n              <AadharVerificationIFrame />\r\n            </div>\r\n          </Box>\r\n        }\r\n      />\r\n      <Route path=\"thankyou\" element={<ThankYouPage />} />\r\n      <Route path=\"*\" element={<NotFoundPage />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\content\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js",["860"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\n\r\nimport { DisplayData } from \"./displayData\";\r\nimport { Tooltip as LightTooltip } from \"components/styledComponent/tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    color: \"#26A456\",\r\n    cursor: \"pointer\",\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background:\r\n      \"linear-gradient(-90deg, rgba(94,231,131,1) 0%, rgba(74,205,159,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 36,\r\n    padding: \"0 1rem\",\r\n    fontSize: \"1.2rem\",\r\n    \"&:hover\": {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(94,231,131,1) 0%, rgba(74,204,160,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    },\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n})(Button);\r\n\r\nexport const EmployeeLead = () => {\r\n  const classes = useStyles();\r\n  const [InquiryDetailsList, setInquiryDetailsList] = useState([]);\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n  const currentInqCode = useRef(\"\");\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClickOpen = (event, currenIndex) => {\r\n    event.preventDefault();\r\n    setCurrentRow(InquiryDetailsList[currenIndex]);\r\n    currentInqCode.current = InquiryDetailsList[currenIndex][0];\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setOpenDetails(false);\r\n  };\r\n\r\n  //get user inquiry details\r\n\r\n  useEffect(() => {\r\n    const fetcher = async () => {\r\n      const result = await APISDK.getDashboardEmployeeDataList();\r\n      // console.log(\"result\", result);\r\n      try {\r\n        setLoading(true);\r\n        if (result.status === \"success\") {\r\n          let dataNew = result.data.map((x) => {\r\n            return [\r\n              x.inquiry_code,\r\n              x.inquiry_date,\r\n              x.product_type,\r\n              x.customer_name,\r\n              x.mobile_no,\r\n              x.email_id,\r\n              x.inquiry_status,\r\n              x.lead_generaate,\r\n              x.questionaaries + \"/\" + x.health_score,\r\n            ];\r\n          });\r\n          setInquiryDetailsList(dataNew);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    };\r\n    fetcher();\r\n  }, [InquiryDetailsList]);\r\n\r\n  const columns = [\r\n    {\r\n      label: \"Inquiry ID\",\r\n      name: \"InquiryId\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Date\",\r\n      name: \"InquiryDate\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Product Type\",\r\n      name: \"ProductType\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Customer Name\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Mobile No.\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Status\",\r\n      name: \"\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Lead Generated\",\r\n      name: \"Generate_lead\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Questionaries / Health Check Score\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Action\",\r\n      name: \"Action\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        download: false,\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          return (\r\n            <div>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"View\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={handleClickOpen}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <VisibilityIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Edit\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={(e) => handleClickOpen(e, dataIndex)}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <EditIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Delete\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <DeleteIcon />\r\n                </span>\r\n              </LightTooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\r\n        <StyledButton>Generate New Lead</StyledButton>\r\n      </Box>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={12} className=\"table-cover\">\r\n          {loading ? <CircularProgress size={20} /> : null}\r\n          <MUIDataTable\r\n            title=\"Lead Management\"\r\n            data={InquiryDetailsList}\r\n            columns={columns}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              filter: false,\r\n              viewColumns: false,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        {openDetails ? (\r\n          <DisplayData\r\n            onClose={handleCloseDetails}\r\n            open={openDetails}\r\n            row={currentInqCode.current}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\content\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx",["861","862","863","864"],"import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logoImg from \"assets/images/logo.svg\";\r\nimport { makeStyles, Theme } from \"@material-ui/core/styles\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const [otp, setotp] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [otpVerifydivShowing, setotpVerifydivShowing] = useState(false);\r\n  const [showPwddiv, setshowPwddiv] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [id, setid] = useState(\"\");\r\n  const [expiryOtpTime, setexpiryOtpTime] = useState(\"\");\r\n\r\n  const requestOtp = async () => {\r\n    if (phoneNumber !== \"\" && phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.requestForOTP(phoneNumber);\r\n        // console.log(\"result\", result);\r\n        if (result.status === \"success\") {\r\n          setid(result?.data?.id);\r\n          setexpiryOtpTime(result?.data?.sdatetime);\r\n          setotpVerifydivShowing(true);\r\n          setLoading(false);\r\n        } else {\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setError(\"mobile number should be 10 digits\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await APISDK.handleverifyOtp(phoneNumber, otp);\r\n      if (result.status === \"success\") {\r\n        setLoading(false);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        setError(result?.data?.error_msg);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(\"in catch\");\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const verifyPwd = async () => {\r\n    if (password.length !== 0 || password !== \"\") {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.handleverifyPwd(password, phoneNumber);\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          // console.log(\"in else\", result?.data?.error_msg);\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      console.log(\"Password should not be empty\");\r\n    }\r\n  };\r\n\r\n  const showPassDiv = () => {\r\n    if (error === \"\") {\r\n      setshowPwddiv(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginEmp}\r\n      >\r\n        <img src={logoImg} alt=\"Ratnaafin\" className={classes.logo} />\r\n        <h2>Employee Login</h2>\r\n        <div className=\"text\">\r\n          Login with your registered mobile number to access your Ratnaafin\r\n          account.\r\n        </div>\r\n\r\n        {showPwddiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Password for verification\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n\r\n            <Button\r\n              onClick={verifyPwd}\r\n              disabled={password !== \"\" ? false : true}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : otpVerifydivShowing === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"OTP\"\r\n              placeholder=\"OTP for verification\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setotp(e.target.value)}\r\n              autoComplete=\"off\"\r\n              inputProps={{ maxLength: 6 }}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              disabled={otp.length !== 6 ? true : false}\r\n              onClick={verifyOtp}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">+91</InputAdornment>\r\n                ),\r\n              }}\r\n              placeholder=\"Enter mobile number\"\r\n              fullWidth\r\n              className=\"mobileNumber\"\r\n              type=\"number\"\r\n              name=\"phoneNumber\"\r\n              autoComplete=\"off\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setphoneNumber(e.target.value)}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              onClick={requestOtp}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With OTP\r\n            </Button>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n              <div className=\"text\">\r\n                <b>Or</b>\r\n              </div>\r\n            </Box>\r\n\r\n            <Button onClick={showPassDiv} className={classes.loginBtn}>\r\n              Login With Password\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\header.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\home.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\sideBar\\renderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\footer\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\drawer\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\types.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\appBar\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx",["865","866"],"import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { useStyles } from \"./style\";\n\nexport const ChangePassword = () => {\n  const classes = useStyles();\n  const [OpenDialog, setOpenDialog] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  return (\n    <>\n      <DialogTitle id=\"form-dialog-title\">\n        Change Password fsdfdsffs\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Password must be 8-16 characters and include both numbers and letters.\n        </DialogContentText>\n\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={12} md={12}>\n            <TextField\n              label=\"Current Password\"\n              required\n              fullWidth\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Current Password\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              autoComplete=\"off\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <TextField\n              label=\"New Password\"\n              required\n              fullWidth\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"New Password\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              autoComplete=\"off\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={12} md={12}>\n            <TextField\n              label=\"Confirm Password\"\n              required\n              fullWidth\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n              autoComplete=\"off\"\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions className=\"mb-30\">\n        <Button\n          onClick={handleCloseDialog}\n          color=\"primary\"\n          className={classes.backBtn}\n        >\n          Cancel\n        </Button>\n        <Button\n          onClick={handleCloseDialog}\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Submit\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx",["867"],"import { memo, Fragment, FC } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport FormWrapper, {\r\n  isMetaDataValid,\r\n  MetaDataType,\r\n} from \"components/dyanmicForm\";\r\nimport { InitialValuesType } from \"packages/form\";\r\nimport { becomePartnerMetaData } from \"./metaData\";\r\n\r\nconst MemoizedFormWrapper = memo(FormWrapper);\r\n\r\ninterface BecomePartnerFormProps {\r\n  metaData: MetaDataType;\r\n  initialValues?: InitialValuesType;\r\n}\r\n\r\nconst BecomePartnerForm: FC<BecomePartnerFormProps> = ({\r\n  metaData,\r\n  initialValues,\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmitHandler = async (values, submitEnd) => {\r\n    const data = await APISDK.submitBecomePartnerData(\r\n      metaData.form.submitAction ?? \"\",\r\n      values\r\n    );\r\n    if (data.status === \"success\") {\r\n      submitEnd(true);\r\n      navigate(\"/thankyou\");\r\n    } else {\r\n      //Todo: Need to set server error received in API\r\n      submitEnd(false, \"Error submitting form\");\r\n    }\r\n  };\r\n  const result = /*!isMetaDataValid(metaData)*/ !true ? (\r\n    <span>Error loading form</span>\r\n  ) : (\r\n    <Fragment>\r\n      <MemoizedFormWrapper\r\n        metaData={metaData}\r\n        initialValues={initialValues}\r\n        onSubmitHandler={onSubmitHandler}\r\n      />\r\n    </Fragment>\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\nexport const BecomePartnerFormWrapper = () => {\r\n  return <BecomePartnerForm metaData={becomePartnerMetaData} />;\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx",["868","869","870","871"],"import React, { useEffect, useState, useReducer } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginImg from \"assets/images/login.svg\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { useStyles } from \"./style\";\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [fields, setFields] = useState({\r\n    phoneNumber: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    createPassword: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    commonError: \"\",\r\n    passworderror: \"\",\r\n  });\r\n  const [otpVerifydivShowing, setotpVerifydivShowing] = useState(false);\r\n  const [showPwddiv, setshowPwddiv] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [expiryOtpTime, setexpiryOtpTime] = useState(\"\");\r\n  const [time, setTime] = useState(0);\r\n  const [passwordGenerateDiv, setpasswordGenerateDiv] = useState(false);\r\n\r\n  let expiryTime = 60;\r\n\r\n  const handleChange = (input) => ({ target: { value } }) => {\r\n    setFields({ ...fields, [input]: value });\r\n\r\n    switch (input) {\r\n      case \"phoneNumber\":\r\n        return { value };\r\n      case \"otp\":\r\n        return { value };\r\n      case \"password\":\r\n        return { value };\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const requestOtp = async (toVerifyUser) => {\r\n    if (fields.phoneNumber !== \"\" && fields.phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.requestForOTP(fields.phoneNumber);\r\n        // console.log(\"result request otp\", result);\r\n        if (result.status === \"success\") {\r\n          setErrors({ ...errors, commonError: result?.data?.error_msg });\r\n          setexpiryOtpTime(result?.data?.sdatetime);\r\n          setotpVerifydivShowing(true);\r\n          setLoading(false);\r\n          displayIntervale();\r\n        } else {\r\n          setErrors({ ...errors, commonError: result?.data?.error_msg });\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setErrors({\r\n        ...errors,\r\n        commonError: \"mobile number should be 10 digits\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayIntervale = () => {\r\n    const timerId = setInterval(() => {\r\n      setTime((time) => {\r\n        if (time === expiryTime) {\r\n          clearInterval(timerId);\r\n          return time;\r\n        } else {\r\n          return time + 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const formatTime = (time) =>\r\n    `${String(Math.floor(time / 60)).padStart(2, \"0\")}:${String(\r\n      time % 60\r\n    ).padStart(2, \"0\")}`;\r\n\r\n  const Timer = ({ time }) => {\r\n    const timeRemain = expiryTime - (time % expiryTime);\r\n    return (\r\n      <>\r\n        <div className={classes.OTPTimer}>\r\n          {time === expiryTime ? (\r\n            <div onClick={requestOtp} className={classes.resendLink}>\r\n              Resend OTP\r\n            </div>\r\n          ) : (\r\n            formatTime(timeRemain)\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const verifyOtp = async (toVerifyUser) => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await APISDK.handleverifyOtp(\r\n        fields.phoneNumber,\r\n        fields.otp\r\n      );\r\n      // console.log(\"result verify otp\", result);\r\n      if (result.status === \"success\") {\r\n        setLoading(false);\r\n        if (toVerifyUser === \"Yes\") {\r\n          setshowPwddiv(false);\r\n          setpasswordGenerateDiv(true);\r\n        } else {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      } else {\r\n        setErrors({ ...errors, commonError: result?.data?.error_msg });\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(\"in catch\");\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const verifyPwd = async () => {\r\n    if (fields.password.length !== 0 || fields.password !== \"\") {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.handleverifyPwd(\r\n          fields.password,\r\n          fields.phoneNumber\r\n        );\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          // console.log(\"in else\", result?.data?.error_msg);\r\n          setErrors({ ...errors, commonError: result?.data?.error_msg });\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      console.log(\"Password should not be empty\");\r\n    }\r\n  };\r\n\r\n  const showPassDiv = () => {\r\n    if (errors.commonError === \"\" && fields.phoneNumber.length === 10) {\r\n      setshowPwddiv(true);\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    if (\r\n      fields.createPassword !== \"\" &&\r\n      fields.confirmPassword !== \"\" &&\r\n      fields.createPassword === fields.confirmPassword\r\n    ) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.updateUserPassword(\r\n          fields.password,\r\n          fields.phoneNumber\r\n        );\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          setErrors({ ...errors, passworderror: result?.data?.error_msg });\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      if (fields.createPassword === \"\" && fields.confirmPassword === \"\") {\r\n        setErrors({ ...errors, passworderror: \"Password should not be empty\" });\r\n      } else {\r\n        setErrors({ ...errors, passworderror: \"Password not matched\" });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkUserNumberAndPasswordExist = async () => {\r\n    if (errors.commonError === \"\" && fields.phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.checkPhoneNumberExists(fields.phoneNumber);\r\n        console.log(\"checkUserNumberAndPasswordExist\", result);\r\n        if (result.status === \"success\") {\r\n          if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"N\"\r\n          ) {\r\n            var toVerifyUser = \"Yes\";\r\n            setLoading(false);\r\n            requestOtp(toVerifyUser);\r\n            // setshowPwddiv(false);\r\n            // setpasswordGenerateDiv(true);\r\n          } else if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"Y\"\r\n          ) {\r\n            setshowPwddiv(true);\r\n            setLoading(false);\r\n          }\r\n          setLoading(false);\r\n        } else {\r\n          if (result?.data?.error_cd === \"-999\") {\r\n            setErrors({ ...errors, commonError: result?.data?.error_msg });\r\n            setLoading(false);\r\n          }\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      setErrors({ ...errors, commonError: \"Please enter valid mobile number\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginLeft}\r\n      >\r\n        <img alt=\"\" src={loginImg} className={classes.loginImg} />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginRight}\r\n      >\r\n        <h2>Cutomer Login</h2>\r\n        <div className=\"text\">\r\n          Login with your registered mobile number to access your Ratnaafin\r\n          account.\r\n        </div>\r\n\r\n        {showPwddiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Password for verification\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={fields.password}\r\n              onChange={handleChange(\"password\")}\r\n              // onChange={(e) => setpassword(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={errors.commonError ? errors.commonError : \"\"}\r\n              error={errors.commonError ? true : false}\r\n              onBlur={() => setErrors({ ...errors, commonError: \"\" })}\r\n            />\r\n\r\n            <Button\r\n              onClick={verifyPwd}\r\n              disabled={fields.password !== \"\" ? false : true}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : otpVerifydivShowing === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"OTP\"\r\n              placeholder=\"OTP for verification\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"otp\"\r\n              value={fields.otp}\r\n              onChange={handleChange(\"otp\")}\r\n              inputProps={{ maxLength: 6 }}\r\n              error={Boolean(errors.commonError)}\r\n              helperText={\r\n                Boolean(errors.commonError) ? errors.commonError : null\r\n              }\r\n              onBlur={() => setErrors({ ...errors, commonError: \"\" })}\r\n              InputProps={{\r\n                inputComponent: InputMaskCustom,\r\n                inputProps: {\r\n                  MaskProps: {\r\n                    mask: \"0 0 0 0 0 0\",\r\n                  },\r\n                },\r\n              }}\r\n            />\r\n            <Timer time={time} />\r\n            <Button\r\n              disabled={fields.otp.length !== 6 ? true : false}\r\n              onClick={verifyOtp}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : passwordGenerateDiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"New Password\"\r\n              placeholder=\"Enter new password\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"createPassword\"\r\n              value={fields.createPassword}\r\n              onChange={handleChange(\"createPassword\")}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={errors.passworderror ? errors.passworderror : \"\"}\r\n              error={errors.passworderror ? true : false}\r\n              onBlur={() => setErrors({ ...errors, passworderror: \"\" })}\r\n            />\r\n\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              placeholder=\"Enter confirm password\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n              value={fields.confirmPassword}\r\n              onChange={handleChange(\"confirmPassword\")}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={errors.passworderror ? errors.passworderror : \"\"}\r\n              error={errors.passworderror ? true : false}\r\n              onBlur={() => setErrors({ ...errors, passworderror: \"\" })}\r\n            />\r\n\r\n            <Button\r\n              onClick={updateNewPassword}\r\n              disabled={\r\n                fields.createPassword !== \"\" || fields.confirmPassword !== \"\"\r\n                  ? false\r\n                  : true\r\n              }\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              placeholder=\"Enter mobile number\"\r\n              fullWidth\r\n              className=\"mobileNumber\"\r\n              type=\"email\"\r\n              name=\"phoneNumber\"\r\n              value={fields.phoneNumber}\r\n              onChange={handleChange(\"phoneNumber\")}\r\n              error={Boolean(errors.commonError)}\r\n              helperText={\r\n                Boolean(errors.commonError) ? errors.commonError : null\r\n              }\r\n              onBlur={() => setErrors({ ...errors, commonError: \"\" })}\r\n              InputProps={{\r\n                inputComponent: InputMaskCustom,\r\n                inputProps: {\r\n                  MaskProps: {\r\n                    mask: \"0000000000\",\r\n                  },\r\n                },\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">+91</InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <Button\r\n              onClick={requestOtp}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With OTP\r\n            </Button>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n              <div className=\"text text-center\">Or</div>\r\n            </Box>\r\n\r\n            <Button\r\n              onClick={checkUserNumberAndPasswordExist}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With Password\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\metaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\assets\\icons\\productIcons.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\header\\renderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\registry\\rulesEngine\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\context.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\types.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\util.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\field.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\form.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\atoms.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\packages\\form\\src\\observer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\spacer\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\slider\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\rating\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\radio\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\select\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\textField\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\switch\\switch.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\textField\\textField.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\select\\select.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\radio\\radio.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\rating\\rating.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\slider\\slider.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx",["872"],"import { Editor } from \"@tinymce/tinymce-react\";\r\n\r\nexport const TextEditor = () => {\r\n  const handleEditorChange = (content, editor) => {};\r\n\r\n  return (\r\n    <Editor\r\n      initialValue=\"<p>This is the initial content of the editor</p>\"\r\n      apiKey=\"pc8b933js2e6hly9nkp1ha2nuyak0anqgq47c31y2kontd64\"\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          \"advlist autolink lists link image charmap print preview anchor\",\r\n          \"searchreplace visualblocks code fullscreen\",\r\n          \"insertdatetime media table paste code help wordcount\",\r\n        ],\r\n        toolbar:\r\n          \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | insertdatetime | table | help\",\r\n      }}\r\n      onEditorChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx",["873","874"],"import { useState, Fragment, useEffect, useRef } from \"react\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function EmployeeDashboard() {\r\n  const [IFrameVisible, setIFrameVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [aadharParams, setAadharParams] = useState({\r\n    transactionID: \"\",\r\n    URL: \"\",\r\n  });\r\n  const [userMessage, setUserMessage] = useState(\"\");\r\n  const [failure, setFailure] = useState(false);\r\n  const timeoutDuration = 5 * 60 * 1000;\r\n  const poolingInterval = 10 * 1000;\r\n  let timeout, interval;\r\n\r\n  const handleAadharInitiation = async (inquiryCode) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(inquiryCode);\r\n      setLoading(false);\r\n      if (result.status === \"success\") {\r\n        const { transactionId, url } = result.data;\r\n        setAadharParams({\r\n          transactionID: transactionId,\r\n          URL: url,\r\n        });\r\n        setIFrameVisible(true);\r\n        //startPooling({ transactionID: transactionId, URL: url });\r\n        waitForRequestStatus({ transactionID: transactionId, URL: url });\r\n        return aadharParams;\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRequestID = useRef(0);\r\n  const waitForRequestStatus = async (data) => {\r\n    const resp = await APISDK.fetchAadharRequestStatusEventSource(\r\n      data.transactionID\r\n    );\r\n    if (resp.status === \"success\") {\r\n      if (\r\n        resp.data.requestStatus === \"success\" ||\r\n        resp.data.requestStatus === \"failed\"\r\n      ) {\r\n        if (resp.data.requestStatus === \"failed\") {\r\n          setFailure(true);\r\n        }\r\n        setIFrameVisible(false);\r\n        setUserMessage(resp.data.message);\r\n      }\r\n    } else {\r\n      setIFrameVisible(false);\r\n      //TODO: Set proper error coming from response\r\n      setUserMessage(\"Unknown error occured\");\r\n      setFailure(true);\r\n    }\r\n  };\r\n  const startPooling = (data) => {\r\n    interval = setInterval(() => {\r\n      const currentFetchRequestID = ++fetchRequestID.current;\r\n      APISDK.fetchAadharRequestStatus(data.transactionID).then((resp) => {\r\n        console.log(currentFetchRequestID, fetchRequestID.current);\r\n        if (currentFetchRequestID === fetchRequestID.current) {\r\n          if (resp.status === \"success\") {\r\n            if (\r\n              resp.data.requestStatus === \"success\" ||\r\n              resp.data.requestStatus === \"failed\"\r\n            ) {\r\n              if (resp.data.requestStatus === \"failed\") {\r\n                setFailure(true);\r\n              }\r\n              setIFrameVisible(false);\r\n              setUserMessage(resp.data.message);\r\n              clearInterval(interval);\r\n              clearTimeout(timeout);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeout = setTimeout(() => {\r\n      clearInterval(interval);\r\n      setIFrameVisible(false);\r\n      setUserMessage(\"Request Time out\");\r\n      setFailure(true);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"mounted\");\r\n    return () => {\r\n      console.log(\"unmounted\");\r\n      clearTimeout(timeout);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!IFrameVisible ? (\r\n        <button\r\n          onClick={() => {\r\n            handleAadharInitiation(1001);\r\n          }}\r\n          disabled={loading}\r\n        >\r\n          Start Aadhar Verification\r\n        </button>\r\n      ) : (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={aadharParams.URL}\r\n          width=\"100%\"\r\n          height=\"700px\"\r\n        />\r\n      )}\r\n      {!IFrameVisible && Boolean(userMessage) ? (\r\n        <Alert severity={failure ? \"error\" : \"success\"}>{userMessage}</Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\PROJECTS\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx",["875"],"import { useState, Fragment, useEffect, useRef } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\n\r\nexport default function AadharVerificationIFrame() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { state: naviationState } = location;\r\n  const [IFrameVisible, setIFrameVisible] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [aadharParams, setAadharParams] = useState({\r\n    transactionID: \"\",\r\n    URL: \"\",\r\n  });\r\n  const timeoutDuration = 5 * 60 * 1000;\r\n  const poolingInterval = 5 * 1000;\r\n  let timeout, interval;\r\n\r\n  const handleAadharInitiation = async (inquiryCode) => {\r\n    setLoading(true);\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(inquiryCode);\r\n      setLoading(false);\r\n      if (result.status === \"success\") {\r\n        const { transactionId, url } = result.data;\r\n        setAadharParams({\r\n          transactionID: transactionId,\r\n          URL: url,\r\n        });\r\n        setIFrameVisible(true);\r\n        startPooling({ transactionID: transactionId, URL: url });\r\n        //waitForRequestStatus({ transactionID: transactionId, URL: url })\r\n        return aadharParams;\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchRequestID = useRef(0);\r\n  // const waitForRequestStatus = (data) => {\r\n  //   var urlEndPoint = `http://10.55.6.63:8081/users/subscribe?transactionId=${data.transactionID}`;\r\n  //   var eventSource = new EventSource(urlEndPoint);\r\n  //   eventSource.addEventListener(\"transactionDtl\", function (event) {\r\n  //     console.log(event.data);\r\n  //     eventSource.close();\r\n  //   });\r\n  // };\r\n  const startPooling = (data) => {\r\n    interval = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(data.transactionID).then((data) => {\r\n        if (currentFetchRequestID === fetchRequestID.current) {\r\n          console.log(currentFetchRequestID, data);\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeout = setTimeout(() => {\r\n      clearInterval(interval);\r\n      console.log(\"aadhar request timedout\");\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"mounted\");\r\n    // return () => {\r\n    //   console.log(\"unmounted\");\r\n    clearTimeout(timeout);\r\n    clearInterval(interval);\r\n    // };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      {!IFrameVisible ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ??</span>\r\n          <button\r\n            onClick={() => {\r\n              handleAadharInitiation(1001);\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"/thankyou\", {\r\n                state: naviationState,\r\n              });\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={aadharParams.URL}\r\n          width=\"100%\"\r\n          height=\"700px\"\r\n        />\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\index.tsx",["876","877","878","879","880","881","882"],"import { FC, useEffect, useState, useMemo, useCallback, useRef } from \"react\";\r\nimport {\r\n  GridMetaDataType,\r\n  GridTransformedMetaDataType,\r\n  TransformedGridColumnType,\r\n} from \"./types\";\r\nimport {\r\n  attachComponentsToMetaData,\r\n  attachFilterComponentToMetaData,\r\n  attachAlignmentProps,\r\n  extractHiddenColumns,\r\n  sortColumnsBySequence,\r\n} from \"./utils\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { DefaultHeaderColumnRenderer } from \"./components\";\r\nimport { DataGrid } from \"./grid\";\r\n\r\n/*code to delete*/\r\nimport { makeData } from \"./makeData\";\r\nconst TotalRecords = 75;\r\nconst serverData = makeData(TotalRecords);\r\n\r\nexport const GridWrapper: FC<{ metaData: GridTransformedMetaDataType }> = ({\r\n  metaData,\r\n}) => {\r\n  const columns = useMemo(() => metaData.columns, []);\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      width: 150,\r\n      maxWidth: 400,\r\n      minWidth: 50,\r\n      Header: DefaultHeaderColumnRenderer,\r\n    }),\r\n    []\r\n  );\r\n  const getRowId = useCallback(\r\n    (row) => row[metaData.gridConfig.rowIdColumn],\r\n    []\r\n  );\r\n  console.log(columns, defaultColumn, getRowId);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const fetchIdRef = useRef(0);\r\n  const prevFilters = useRef(null);\r\n  const resetPaginationAndSorting = useRef(false);\r\n\r\n  useEffect(() => {\r\n    resetPaginationAndSorting.current = false;\r\n  }, [data]);\r\n\r\n  const fetchData = useCallback(\r\n    ({ pageSize, pageIndex, sortBy, filters }) => {\r\n      if (prevFilters.current !== filters) {\r\n        resetPaginationAndSorting.current = true;\r\n      }\r\n\r\n      const fetchId = ++fetchIdRef.current;\r\n      setLoading(true);\r\n      setTimeout(() => {\r\n        if (fetchId === fetchIdRef.current) {\r\n          const startRow = pageSize * pageIndex;\r\n          const endRow = startRow + pageSize;\r\n          setData(serverData.slice(startRow, endRow));\r\n          setPageCount(Math.ceil(serverData.length / pageSize));\r\n        }\r\n        setTotalRecords(serverData.length);\r\n        setLoading(false);\r\n        prevFilters.current = filters;\r\n      }, 1000);\r\n    },\r\n    [setTotalRecords, setLoading, setData]\r\n  );\r\n\r\n  console.log(columns);\r\n\r\n  return (\r\n    <DataGrid\r\n      label={metaData.gridConfig?.gridLabel ?? \"NO_NAME\"}\r\n      dense={metaData.gridConfig?.dense ?? true}\r\n      getRowId={getRowId}\r\n      columns={columns}\r\n      defaultColumn={defaultColumn}\r\n      loading={loading}\r\n      data={[]}\r\n      pageCount={pageCount}\r\n      totalRecords={totalRecords}\r\n      resetPaginationAndSorting={resetPaginationAndSorting.current}\r\n      filterOptions={{\r\n        columnId: [],\r\n      }}\r\n      onFetchData={fetchData}\r\n    />\r\n  );\r\n};\r\n\r\nexport const ParentGridWrapper = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [data, setData] = useState({});\r\n  useEffect(() => {\r\n    const runEffect = async () => {\r\n      setLoading(true);\r\n      let result = await APISDK.fetchGridMetaData(\"trn/001\");\r\n      console.log(result);\r\n      if (result.status === \"success\") {\r\n        setData(result.data);\r\n        setError(false);\r\n        setLoading(false);\r\n      } else {\r\n        setData(result.data);\r\n        setError(true);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    runEffect();\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nconst transformMetaData = (\r\n  metaData: GridMetaDataType\r\n): GridTransformedMetaDataType => {\r\n  let columns = metaData.columns as any;\r\n  columns = attachComponentsToMetaData(columns);\r\n  columns = attachFilterComponentToMetaData(columns);\r\n  columns = attachAlignmentProps(columns);\r\n  columns = sortColumnsBySequence(columns);\r\n  const hiddenColumns = extractHiddenColumns(columns);\r\n  return {\r\n    columns: columns,\r\n    gridConfig: metaData.gridConfig,\r\n    hiddenColumns: hiddenColumns,\r\n  };\r\n};\r\n","D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\grid.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\test.tsx",["883","884","885","886","887","888","889","890"],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\gridController.tsx",["891","892","893"],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx",["894"],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx",["895"],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\components\\dataTable\\components\\filters\\textColumnFilter.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts",[],"D:\\PROJECTS\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx",["896"],{"ruleId":"897","replacedBy":"898"},{"ruleId":"899","replacedBy":"900"},{"ruleId":"901","severity":1,"message":"902","line":2,"column":10,"nodeType":"903","messageId":"904","endLine":2,"endColumn":16},{"ruleId":"905","severity":1,"message":"906","line":16,"column":19,"nodeType":"907","messageId":"908","endLine":18,"endColumn":2},{"ruleId":"901","severity":1,"message":"909","line":440,"column":13,"nodeType":"903","messageId":"904","endLine":440,"endColumn":17},{"ruleId":"901","severity":1,"message":"910","line":20,"column":10,"nodeType":"903","messageId":"904","endLine":20,"endColumn":18},{"ruleId":"897","replacedBy":"898"},{"ruleId":"899","replacedBy":"900"},{"ruleId":"901","severity":1,"message":"911","line":10,"column":10,"nodeType":"903","messageId":"904","endLine":10,"endColumn":18},{"ruleId":"912","severity":1,"message":"913","line":49,"column":10,"nodeType":"903","messageId":"904","endLine":49,"endColumn":20},{"ruleId":"901","severity":1,"message":"914","line":10,"column":10,"nodeType":"903","messageId":"904","endLine":10,"endColumn":20},{"ruleId":"901","severity":1,"message":"915","line":10,"column":22,"nodeType":"903","messageId":"904","endLine":10,"endColumn":27},{"ruleId":"901","severity":1,"message":"916","line":32,"column":10,"nodeType":"903","messageId":"904","endLine":32,"endColumn":12},{"ruleId":"901","severity":1,"message":"917","line":33,"column":10,"nodeType":"903","messageId":"904","endLine":33,"endColumn":23},{"ruleId":"901","severity":1,"message":"918","line":13,"column":10,"nodeType":"903","messageId":"904","endLine":13,"endColumn":20},{"ruleId":"901","severity":1,"message":"919","line":15,"column":9,"nodeType":"903","messageId":"904","endLine":15,"endColumn":24},{"ruleId":"901","severity":1,"message":"920","line":5,"column":3,"nodeType":"903","messageId":"904","endLine":5,"endColumn":18},{"ruleId":"901","severity":1,"message":"921","line":1,"column":17,"nodeType":"903","messageId":"904","endLine":1,"endColumn":26},{"ruleId":"901","severity":1,"message":"922","line":1,"column":38,"nodeType":"903","messageId":"904","endLine":1,"endColumn":48},{"ruleId":"901","severity":1,"message":"917","line":35,"column":10,"nodeType":"903","messageId":"904","endLine":35,"endColumn":23},{"ruleId":"901","severity":1,"message":"923","line":173,"column":9,"nodeType":"903","messageId":"904","endLine":173,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":19,"column":11,"nodeType":"926","messageId":"927","endLine":21,"endColumn":92},{"ruleId":"901","severity":1,"message":"928","line":62,"column":9,"nodeType":"903","messageId":"904","endLine":62,"endColumn":21},{"ruleId":"929","severity":1,"message":"930","line":100,"column":6,"nodeType":"931","endLine":100,"endColumn":8,"suggestions":"932"},{"ruleId":"929","severity":1,"message":"930","line":71,"column":6,"nodeType":"931","endLine":71,"endColumn":8,"suggestions":"933"},{"ruleId":"901","severity":1,"message":"934","line":5,"column":3,"nodeType":"903","messageId":"904","endLine":5,"endColumn":28},{"ruleId":"929","severity":1,"message":"935","line":26,"column":51,"nodeType":"931","endLine":26,"endColumn":53,"suggestions":"936"},{"ruleId":"929","severity":1,"message":"937","line":38,"column":5,"nodeType":"931","endLine":38,"endColumn":7,"suggestions":"938"},{"ruleId":"901","severity":1,"message":"939","line":99,"column":10,"nodeType":"903","messageId":"904","endLine":99,"endColumn":17},{"ruleId":"901","severity":1,"message":"940","line":100,"column":10,"nodeType":"903","messageId":"904","endLine":100,"endColumn":15},{"ruleId":"901","severity":1,"message":"909","line":101,"column":10,"nodeType":"903","messageId":"904","endLine":101,"endColumn":14},{"ruleId":"901","severity":1,"message":"941","line":123,"column":7,"nodeType":"903","messageId":"904","endLine":123,"endColumn":24},{"ruleId":"901","severity":1,"message":"942","line":1,"column":10,"nodeType":"903","messageId":"904","endLine":1,"endColumn":17},{"ruleId":"901","severity":1,"message":"943","line":1,"column":19,"nodeType":"903","messageId":"904","endLine":1,"endColumn":27},{"ruleId":"901","severity":1,"message":"944","line":1,"column":29,"nodeType":"903","messageId":"904","endLine":1,"endColumn":35},{"ruleId":"901","severity":1,"message":"945","line":1,"column":37,"nodeType":"903","messageId":"904","endLine":1,"endColumn":48},{"ruleId":"901","severity":1,"message":"921","line":1,"column":50,"nodeType":"903","messageId":"904","endLine":1,"endColumn":59},{"ruleId":"901","severity":1,"message":"946","line":2,"column":10,"nodeType":"903","messageId":"904","endLine":2,"endColumn":18},{"ruleId":"901","severity":1,"message":"947","line":4,"column":3,"nodeType":"903","messageId":"904","endLine":4,"endColumn":25},{"ruleId":"901","severity":1,"message":"948","line":5,"column":3,"nodeType":"903","messageId":"904","endLine":5,"endColumn":30},{"ruleId":"929","severity":1,"message":"935","line":19,"column":51,"nodeType":"931","endLine":19,"endColumn":53,"suggestions":"949"},{"ruleId":"929","severity":1,"message":"937","line":31,"column":5,"nodeType":"931","endLine":31,"endColumn":7,"suggestions":"950"},{"ruleId":"929","severity":1,"message":"951","line":92,"column":5,"nodeType":"931","endLine":92,"endColumn":62,"suggestions":"952"},{"ruleId":"929","severity":1,"message":"953","line":63,"column":6,"nodeType":"931","endLine":63,"endColumn":8,"suggestions":"954"},{"ruleId":"929","severity":1,"message":"955","line":78,"column":6,"nodeType":"931","endLine":78,"endColumn":13,"suggestions":"956"},{"ruleId":"924","severity":1,"message":"925","line":19,"column":11,"nodeType":"926","messageId":"927","endLine":21,"endColumn":92},"no-native-reassign",["957"],"no-negated-in-lhs",["958"],"@typescript-eslint/no-unused-vars","'osName' is defined but never used.","Identifier","unusedVar","no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","'data' is assigned a value but never used.","'DataGrid' is defined but never used.","'isMobile' is defined but never used.","no-unused-vars","'currentRow' is assigned a value but never used.","'makeStyles' is defined but never used.","'Theme' is defined but never used.","'id' is assigned a value but never used.","'expiryOtpTime' is assigned a value but never used.","'OpenDialog' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'isMetaDataValid' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'showPassDiv' is assigned a value but never used.","no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'startPooling' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'interval' and 'timeout'. Either include them or remove the dependency array.","ArrayExpression",["959"],["960"],"'TransformedGridColumnType' is defined but never used.","React Hook useMemo has a missing dependency: 'metaData.columns'. Either include it or remove the dependency array.",["961"],"React Hook useCallback has a missing dependency: 'metaData.gridConfig.rowIdColumn'. Either include it or remove the dependency array.",["962"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'transformMetaData' is assigned a value but never used.","'useMemo' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'makeData' is defined but never used.","'DefaultRowCellRenderer' is defined but never used.","'DefaultHeaderColumnRenderer' is defined but never used.",["963"],["964"],"React Hook useCallback has a missing dependency: 'gridCode'. Either include it or remove the dependency array.",["965"],"React Hook useEffect has missing dependencies: 'gridCode', 'headerFilterState', 'id', and 'localFilterManager'. Either include them or remove the dependency array.",["966"],"React Hook useEffect has missing dependencies: 'accessor', 'handleResetGridState', 'headerFilterManager', and 'isSingle'. Either include them or remove the dependency array. If 'handleResetGridState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["967"],"no-global-assign","no-unsafe-negation",{"desc":"968","fix":"969"},{"desc":"968","fix":"970"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"971","fix":"975"},{"desc":"973","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},"Update the dependencies array to be: [interval, timeout]",{"range":"983","text":"984"},{"range":"985","text":"984"},"Update the dependencies array to be: [metaData.columns]",{"range":"986","text":"987"},"Update the dependencies array to be: [metaData.gridConfig.rowIdColumn]",{"range":"988","text":"989"},{"range":"990","text":"987"},{"range":"991","text":"989"},"Update the dependencies array to be: [headerFilterState, gridCode]",{"range":"992","text":"993"},"Update the dependencies array to be: [gridCode, headerFilterState, id, localFilterManager]",{"range":"994","text":"995"},"Update the dependencies array to be: [accessor, handleResetGridState, headerFilterManager, isSingle, value]",{"range":"996","text":"997"},[3268,3270],"[interval, timeout]",[2441,2443],[789,791],"[metaData.columns]",[1061,1063],"[metaData.gridConfig.rowIdColumn]",[612,614],[884,886],[3048,3105],"[headerFilterState, gridCode]",[2098,2100],"[gridCode, headerFilterState, id, localFilterManager]",[2220,2227],"[accessor, handleResetGridState, headerFilterManager, isSingle, value]"]
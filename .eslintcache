[{"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx":"1","D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts":"2","D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts":"3","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx":"4","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx":"5","D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts":"6","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx":"7","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx":"8","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts":"9","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts":"10","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts":"11","D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts":"12","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts":"13","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx":"14","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx":"15","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts":"16","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js":"17","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js":"18","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts":"19","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx":"20","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx":"21","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js":"22","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts":"23","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts":"24","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts":"25","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts":"26","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts":"27","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts":"28","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts":"29","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx":"30","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx":"31","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx":"32","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx":"33","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx":"34","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx":"35","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx":"36","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx":"37","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js":"38","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx":"39","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts":"40","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts":"41","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx":"42","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx":"43","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx":"44","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx":"45","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx":"46","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx":"47","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx":"48","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts":"49","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx":"50","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx":"51","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx":"52","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts":"53","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx":"54","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx":"55","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js":"56","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts":"57","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts":"58","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts":"59","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts":"60","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts":"61","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts":"62","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts":"63","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts":"64","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts":"65","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts":"66","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts":"67","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts":"68","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts":"69","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts":"70","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx":"71","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts":"72","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts":"73","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx":"74","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\sideBarNavigation.tsx":"75","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts":"76","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts":"77","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx":"78","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts":"79","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx":"80","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx":"81","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx":"82","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx":"83","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx":"84","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\style.ts":"85","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts":"86","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts":"87","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts":"88","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts":"89","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts":"90","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx":"91","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx":"92","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx":"93","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx":"94","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx":"95","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx":"96","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx":"97","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts":"98","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts":"99","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts":"100","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx":"101","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts":"102","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts":"103","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts":"104","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts":"105","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts":"106","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts":"107","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx":"108","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\index.ts":"109","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx":"110","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx":"111","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx":"112","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx":"113","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx":"114","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\index.ts":"115","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts":"116","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts":"117","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts":"118","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts":"119","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts":"120","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts":"121","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts":"122","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts":"123","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts":"124","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\confirmationBox.tsx":"125","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts":"126","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx":"127","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts":"128","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts":"129","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx":"130","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx":"131","D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx":"132","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx":"133","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx":"134","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx":"135","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx":"136","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx":"137","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\types.ts":"138","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts":"139","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts":"140","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts":"141","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx":"142","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx":"143","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\tabsForm.tsx":"144","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts":"145","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts":"146","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx":"147","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx":"148","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts":"149","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx":"150","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx":"151","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx":"152","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx":"153","D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts":"154","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts":"155","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts":"156","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts":"157","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts":"158","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts":"159","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts":"160","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts":"161","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts":"162","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx":"163","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx":"164","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx":"165","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts":"166","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts":"167","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts":"168","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts":"169","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts":"170","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts":"171","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts":"172","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts":"173","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts":"174","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts":"175","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts":"176","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts":"177","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx":"178","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx":"179","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts":"180","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx":"181","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx":"182","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts":"183","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx":"184","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx":"185","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx":"186","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx":"187","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx":"188","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx":"189","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx":"190","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx":"191","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx":"192","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx":"193","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx":"194","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx":"195","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx":"196","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx":"197","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx":"198","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx":"199","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx":"200","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx":"201","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx":"202","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\index.ts":"203","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts":"204","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\optionsFetcher.ts":"205","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\utils.ts":"206","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts":"207","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts":"208","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts":"209","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts":"210","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts":"211","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts":"212","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts":"213","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts":"214","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts":"215","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx":"216","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\wrapper.tsx":"217","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx":"218","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx":"219","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx":"220","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\bootstrapNavigation.tsx":"221","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts":"222","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx":"223","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx":"224","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx":"225","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx":"226","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\simpleView.tsx":"227","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\groupedView.tsx":"228","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx":"229","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts":"230","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx":"231","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx":"232","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx":"233","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx":"234","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\generateLead.tsx":"235","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\index.tsx":"236","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\inquiryFormView.tsx":"237","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\inquiryFormEdit.tsx":"238","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\questionnaireFormActions\\questionnaireFormView.tsx":"239","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\questionnaireFormActions\\questionnaireFormEdit.tsx":"240"},{"size":1247,"mtime":1609499185681,"results":"241","hashOfConfig":"242"},{"size":5444,"mtime":1607405262874,"results":"243","hashOfConfig":"242"},{"size":949,"mtime":1607405288783,"results":"244","hashOfConfig":"242"},{"size":41,"mtime":1607405288738,"results":"245","hashOfConfig":"242"},{"size":41,"mtime":1607405288733,"results":"246","hashOfConfig":"242"},{"size":10241,"mtime":1607405288784,"results":"247","hashOfConfig":"242"},{"size":418,"mtime":1609499185681,"results":"248","hashOfConfig":"242"},{"size":496,"mtime":1609499185680,"results":"249","hashOfConfig":"242"},{"size":3780,"mtime":1607405288739,"results":"250","hashOfConfig":"242"},{"size":4463,"mtime":1607405288734,"results":"251","hashOfConfig":"242"},{"size":22232,"mtime":1609853831171,"results":"252","hashOfConfig":"242"},{"size":426,"mtime":1607405288835,"results":"253","hashOfConfig":"242"},{"size":3100,"mtime":1609396193877,"results":"254","hashOfConfig":"242"},{"size":305,"mtime":1607405288794,"results":"255","hashOfConfig":"242"},{"size":2715,"mtime":1609499185697,"results":"256","hashOfConfig":"242"},{"size":6736,"mtime":1607931442330,"results":"257","hashOfConfig":"242"},{"size":1584,"mtime":1607405288815,"results":"258","hashOfConfig":"242"},{"size":21576,"mtime":1608269099646,"results":"259","hashOfConfig":"242"},{"size":154,"mtime":1607405288831,"results":"260","hashOfConfig":"242"},{"size":4633,"mtime":1608353808958,"results":"261","hashOfConfig":"242"},{"size":2060,"mtime":1609410227256,"results":"262","hashOfConfig":"242"},{"size":51,"mtime":1607405288825,"results":"263","hashOfConfig":"242"},{"size":47,"mtime":1607405288787,"results":"264","hashOfConfig":"242"},{"size":48,"mtime":1607405288813,"results":"265","hashOfConfig":"242"},{"size":53,"mtime":1607405288816,"results":"266","hashOfConfig":"242"},{"size":49,"mtime":1607405288818,"results":"267","hashOfConfig":"242"},{"size":45,"mtime":1607405288826,"results":"268","hashOfConfig":"242"},{"size":63,"mtime":1608785324729,"results":"269","hashOfConfig":"242"},{"size":59,"mtime":1608785324729,"results":"270","hashOfConfig":"242"},{"size":3663,"mtime":1608785324726,"results":"271","hashOfConfig":"242"},{"size":3935,"mtime":1609840789318,"results":"272","hashOfConfig":"242"},{"size":47,"mtime":1609499185681,"results":"273","hashOfConfig":"242"},{"size":48,"mtime":1607405288811,"results":"274","hashOfConfig":"242"},{"size":457,"mtime":1607405288812,"results":"275","hashOfConfig":"242"},{"size":422,"mtime":1609499185697,"results":"276","hashOfConfig":"242"},{"size":30226,"mtime":1609410211909,"results":"277","hashOfConfig":"242"},{"size":46623,"mtime":1609326530999,"results":"278","hashOfConfig":"242"},{"size":6469,"mtime":1607606816949,"results":"279","hashOfConfig":"242"},{"size":6800,"mtime":1607405288787,"results":"280","hashOfConfig":"242"},{"size":907,"mtime":1607405288808,"results":"281","hashOfConfig":"242"},{"size":333,"mtime":1607405288812,"results":"282","hashOfConfig":"242"},{"size":5752,"mtime":1608785324710,"results":"283","hashOfConfig":"242"},{"size":9950,"mtime":1608785324729,"results":"284","hashOfConfig":"242"},{"size":2775,"mtime":1608785324729,"results":"285","hashOfConfig":"242"},{"size":6881,"mtime":1609235367044,"results":"286","hashOfConfig":"242"},{"size":1183,"mtime":1609499185697,"results":"287","hashOfConfig":"242"},{"size":3113,"mtime":1608269099646,"results":"288","hashOfConfig":"242"},{"size":3199,"mtime":1608785324729,"results":"289","hashOfConfig":"242"},{"size":586,"mtime":1607405288829,"results":"290","hashOfConfig":"242"},{"size":421,"mtime":1609419526680,"results":"291","hashOfConfig":"242"},{"size":2654,"mtime":1609848567889,"results":"292","hashOfConfig":"242"},{"size":600,"mtime":1608268975469,"results":"293","hashOfConfig":"242"},{"size":6220,"mtime":1609499185697,"results":"294","hashOfConfig":"242"},{"size":4372,"mtime":1609499185681,"results":"295","hashOfConfig":"242"},{"size":5315,"mtime":1609499185697,"results":"296","hashOfConfig":"242"},{"size":6897,"mtime":1609849023904,"results":"297","hashOfConfig":"242"},{"size":1056,"mtime":1609326530999,"results":"298","hashOfConfig":"242"},{"size":952,"mtime":1607405288787,"results":"299","hashOfConfig":"242"},{"size":1739,"mtime":1607405288828,"results":"300","hashOfConfig":"242"},{"size":51,"mtime":1607405288809,"results":"301","hashOfConfig":"242"},{"size":55,"mtime":1607405288806,"results":"302","hashOfConfig":"242"},{"size":45,"mtime":1607405288803,"results":"303","hashOfConfig":"242"},{"size":66,"mtime":1607405288801,"results":"304","hashOfConfig":"242"},{"size":107,"mtime":1607405288797,"results":"305","hashOfConfig":"242"},{"size":77,"mtime":1609235367029,"results":"306","hashOfConfig":"242"},{"size":75,"mtime":1608785324710,"results":"307","hashOfConfig":"242"},{"size":49,"mtime":1609235367029,"results":"308","hashOfConfig":"242"},{"size":1698,"mtime":1607941458203,"results":"309","hashOfConfig":"242"},{"size":1024,"mtime":1607405288814,"results":"310","hashOfConfig":"242"},{"size":1676,"mtime":1608785324729,"results":"311","hashOfConfig":"242"},{"size":917,"mtime":1607405288816,"results":"312","hashOfConfig":"242"},{"size":2641,"mtime":1607405288812,"results":"313","hashOfConfig":"242"},{"size":778,"mtime":1609499185681,"results":"314","hashOfConfig":"242"},{"size":3837,"mtime":1609496509301,"results":"315","hashOfConfig":"242"},{"size":4840,"mtime":1609499185681,"results":"316","hashOfConfig":"242"},{"size":13554,"mtime":1609499185681,"results":"317","hashOfConfig":"242"},{"size":47,"mtime":1607405288819,"results":"318","hashOfConfig":"242"},{"size":1947,"mtime":1609419181912,"results":"319","hashOfConfig":"242"},{"size":59,"mtime":1607405288799,"results":"320","hashOfConfig":"242"},{"size":6322,"mtime":1609499185697,"results":"321","hashOfConfig":"242"},{"size":8155,"mtime":1609499080214,"results":"322","hashOfConfig":"242"},{"size":5927,"mtime":1609499185681,"results":"323","hashOfConfig":"242"},{"size":1449,"mtime":1609499185697,"results":"324","hashOfConfig":"242"},{"size":1734,"mtime":1609499185697,"results":"325","hashOfConfig":"242"},{"size":2835,"mtime":1609499185681,"results":"326","hashOfConfig":"242"},{"size":49,"mtime":1607405288781,"results":"327","hashOfConfig":"242"},{"size":4951,"mtime":1609419526681,"results":"328","hashOfConfig":"242"},{"size":1611,"mtime":1608785324710,"results":"329","hashOfConfig":"242"},{"size":855,"mtime":1607405262852,"results":"330","hashOfConfig":"242"},{"size":5970,"mtime":1609396193845,"results":"331","hashOfConfig":"242"},{"size":6664,"mtime":1609830576298,"results":"332","hashOfConfig":"242"},{"size":15728,"mtime":1609402510956,"results":"333","hashOfConfig":"242"},{"size":1857,"mtime":1609235367044,"results":"334","hashOfConfig":"242"},{"size":1159,"mtime":1607405288807,"results":"335","hashOfConfig":"242"},{"size":3520,"mtime":1609419526680,"results":"336","hashOfConfig":"242"},{"size":172,"mtime":1608785324729,"results":"337","hashOfConfig":"242"},{"size":151,"mtime":1608785324729,"results":"338","hashOfConfig":"242"},{"size":2136,"mtime":1607405288816,"results":"339","hashOfConfig":"242"},{"size":9414,"mtime":1608709316821,"results":"340","hashOfConfig":"242"},{"size":701,"mtime":1609235367029,"results":"341","hashOfConfig":"242"},{"size":1596,"mtime":1607405288798,"results":"342","hashOfConfig":"242"},{"size":670,"mtime":1609235367044,"results":"343","hashOfConfig":"242"},{"size":1843,"mtime":1609499185697,"results":"344","hashOfConfig":"242"},{"size":151,"mtime":1608709316537,"results":"345","hashOfConfig":"242"},{"size":127,"mtime":1608709316326,"results":"346","hashOfConfig":"242"},{"size":1427,"mtime":1607405288798,"results":"347","hashOfConfig":"242"},{"size":16605,"mtime":1608550454317,"results":"348","hashOfConfig":"242"},{"size":765,"mtime":1607931597531,"results":"349","hashOfConfig":"242"},{"size":104,"mtime":1609499185681,"results":"350","hashOfConfig":"242"},{"size":725,"mtime":1607931597528,"results":"351","hashOfConfig":"242"},{"size":278,"mtime":1607931597522,"results":"352","hashOfConfig":"242"},{"size":421,"mtime":1607931597530,"results":"353","hashOfConfig":"242"},{"size":2221,"mtime":1607931597533,"results":"354","hashOfConfig":"242"},{"size":550,"mtime":1607405288782,"results":"355","hashOfConfig":"242"},{"size":28,"mtime":1609419526683,"results":"356","hashOfConfig":"242"},{"size":1404,"mtime":1607405288804,"results":"357","hashOfConfig":"242"},{"size":1658,"mtime":1607405288777,"results":"358","hashOfConfig":"242"},{"size":1205,"mtime":1607405288809,"results":"359","hashOfConfig":"242"},{"size":196,"mtime":1607405288802,"results":"360","hashOfConfig":"242"},{"size":736,"mtime":1607405288807,"results":"361","hashOfConfig":"242"},{"size":4916,"mtime":1608709413338,"results":"362","hashOfConfig":"242"},{"size":453,"mtime":1607405288776,"results":"363","hashOfConfig":"242"},{"size":2024,"mtime":1608353808887,"results":"364","hashOfConfig":"242"},{"size":1165,"mtime":1609396193846,"results":"365","hashOfConfig":"242"},{"size":906,"mtime":1609419526686,"results":"366","hashOfConfig":"242"},{"size":697,"mtime":1607405262851,"results":"367","hashOfConfig":"242"},{"size":2020,"mtime":1607405288771,"results":"368","hashOfConfig":"242"},{"size":1867,"mtime":1607405288800,"results":"369","hashOfConfig":"242"},{"size":2232,"mtime":1607405288799,"results":"370","hashOfConfig":"242"},{"size":2490,"mtime":1609824324616,"results":"371","hashOfConfig":"242"},{"size":5172,"mtime":1609499185681,"results":"372","hashOfConfig":"242"},{"size":48907,"mtime":1607405288741,"results":"373","hashOfConfig":"242"},{"size":195,"mtime":1608709316466,"results":"374","hashOfConfig":"242"},{"size":484,"mtime":1608709316547,"results":"375","hashOfConfig":"242"},{"size":2468,"mtime":1609396193826,"results":"376","hashOfConfig":"242"},{"size":5138,"mtime":1608709316385,"results":"377","hashOfConfig":"242"},{"size":4716,"mtime":1608709316456,"results":"378","hashOfConfig":"242"},{"size":852,"mtime":1609499185681,"results":"379","hashOfConfig":"242"},{"size":47,"mtime":1608785324729,"results":"380","hashOfConfig":"242"},{"size":53,"mtime":1607405262858,"results":"381","hashOfConfig":"242"},{"size":1382,"mtime":1609396193838,"results":"382","hashOfConfig":"242"},{"size":4415,"mtime":1609235367029,"results":"383","hashOfConfig":"242"},{"size":1369,"mtime":1609235367029,"results":"384","hashOfConfig":"242"},{"size":1365,"mtime":1609499185681,"results":"385","hashOfConfig":"242"},{"size":2010,"mtime":1609396193823,"results":"386","hashOfConfig":"242"},{"size":173,"mtime":1607405262816,"results":"387","hashOfConfig":"242"},{"size":814,"mtime":1609396193816,"results":"388","hashOfConfig":"242"},{"size":1736,"mtime":1608709316505,"results":"389","hashOfConfig":"242"},{"size":248,"mtime":1607405262863,"results":"390","hashOfConfig":"242"},{"size":1458,"mtime":1607405288781,"results":"391","hashOfConfig":"242"},{"size":3975,"mtime":1609841769477,"results":"392","hashOfConfig":"242"},{"size":2290,"mtime":1609499185681,"results":"393","hashOfConfig":"242"},{"size":1090,"mtime":1607405262817,"results":"394","hashOfConfig":"242"},{"size":568,"mtime":1607405288834,"results":"395","hashOfConfig":"242"},{"size":318,"mtime":1609396193858,"results":"396","hashOfConfig":"242"},{"size":2891,"mtime":1607405262866,"results":"397","hashOfConfig":"242"},{"size":13996,"mtime":1607405262864,"results":"398","hashOfConfig":"242"},{"size":12863,"mtime":1609396193872,"results":"399","hashOfConfig":"242"},{"size":7222,"mtime":1609396193856,"results":"400","hashOfConfig":"242"},{"size":23396,"mtime":1609396193867,"results":"401","hashOfConfig":"242"},{"size":3660,"mtime":1609396193874,"results":"402","hashOfConfig":"242"},{"size":394,"mtime":1608785324729,"results":"403","hashOfConfig":"242"},{"size":1100,"mtime":1607405262865,"results":"404","hashOfConfig":"242"},{"size":720,"mtime":1608785324729,"results":"405","hashOfConfig":"242"},{"size":699,"mtime":1608785324729,"results":"406","hashOfConfig":"242"},{"size":160,"mtime":1607405262823,"results":"407","hashOfConfig":"242"},{"size":181,"mtime":1607405262820,"results":"408","hashOfConfig":"242"},{"size":177,"mtime":1607405262810,"results":"409","hashOfConfig":"242"},{"size":102,"mtime":1607405262798,"results":"410","hashOfConfig":"242"},{"size":120,"mtime":1607405262795,"results":"411","hashOfConfig":"242"},{"size":117,"mtime":1607405262742,"results":"412","hashOfConfig":"242"},{"size":120,"mtime":1607405262743,"results":"413","hashOfConfig":"242"},{"size":122,"mtime":1607405262791,"results":"414","hashOfConfig":"242"},{"size":134,"mtime":1607405262806,"results":"415","hashOfConfig":"242"},{"size":423,"mtime":1607405262739,"results":"416","hashOfConfig":"242"},{"size":64,"mtime":1609235367019,"results":"417","hashOfConfig":"242"},{"size":251,"mtime":1607405262801,"results":"418","hashOfConfig":"242"},{"size":1363,"mtime":1608785324729,"results":"419","hashOfConfig":"242"},{"size":3035,"mtime":1608785324729,"results":"420","hashOfConfig":"242"},{"size":271,"mtime":1607405262736,"results":"421","hashOfConfig":"242"},{"size":152,"mtime":1607405288749,"results":"422","hashOfConfig":"242"},{"size":1426,"mtime":1608785324842,"results":"423","hashOfConfig":"242"},{"size":1640,"mtime":1608785324843,"results":"424","hashOfConfig":"242"},{"size":1214,"mtime":1607405262823,"results":"425","hashOfConfig":"242"},{"size":1320,"mtime":1609396193827,"results":"426","hashOfConfig":"242"},{"size":3203,"mtime":1607405288765,"results":"427","hashOfConfig":"242"},{"size":5021,"mtime":1609396193801,"results":"428","hashOfConfig":"242"},{"size":944,"mtime":1609396193815,"results":"429","hashOfConfig":"242"},{"size":2848,"mtime":1607405288763,"results":"430","hashOfConfig":"242"},{"size":2496,"mtime":1607405288753,"results":"431","hashOfConfig":"242"},{"size":2510,"mtime":1607405288756,"results":"432","hashOfConfig":"242"},{"size":2920,"mtime":1607405288752,"results":"433","hashOfConfig":"242"},{"size":5667,"mtime":1609396193796,"results":"434","hashOfConfig":"242"},{"size":2739,"mtime":1607405288762,"results":"435","hashOfConfig":"242"},{"size":2540,"mtime":1607405288759,"results":"436","hashOfConfig":"242"},{"size":4864,"mtime":1609396193802,"results":"437","hashOfConfig":"242"},{"size":535,"mtime":1607405262799,"results":"438","hashOfConfig":"242"},{"size":4882,"mtime":1609396193791,"results":"439","hashOfConfig":"242"},{"size":912,"mtime":1608785324729,"results":"440","hashOfConfig":"242"},{"size":7142,"mtime":1609396193787,"results":"441","hashOfConfig":"242"},{"size":5189,"mtime":1609396193790,"results":"442","hashOfConfig":"242"},{"size":2941,"mtime":1607405288750,"results":"443","hashOfConfig":"242"},{"size":61,"mtime":1609396193803,"results":"444","hashOfConfig":"242"},{"size":30,"mtime":1607405262857,"results":"445","hashOfConfig":"242"},{"size":2918,"mtime":1609396193813,"results":"446","hashOfConfig":"242"},{"size":559,"mtime":1609396193814,"results":"447","hashOfConfig":"242"},{"size":60,"mtime":1607405288779,"results":"448","hashOfConfig":"242"},{"size":197,"mtime":1607405262856,"results":"449","hashOfConfig":"242"},{"size":69,"mtime":1607405262859,"results":"450","hashOfConfig":"242"},{"size":288,"mtime":1607405262856,"results":"451","hashOfConfig":"242"},{"size":268,"mtime":1607405288781,"results":"452","hashOfConfig":"242"},{"size":272,"mtime":1607405262856,"results":"453","hashOfConfig":"242"},{"size":1179,"mtime":1607405262859,"results":"454","hashOfConfig":"242"},{"size":358,"mtime":1607405288779,"results":"455","hashOfConfig":"242"},{"size":917,"mtime":1607405288780,"results":"456","hashOfConfig":"242"},{"size":1571,"mtime":1608785324729,"results":"457","hashOfConfig":"242"},{"size":2495,"mtime":1609419526685,"results":"458","hashOfConfig":"242"},{"size":842,"mtime":1607931597527,"results":"459","hashOfConfig":"242"},{"size":4186,"mtime":1609235367022,"results":"460","hashOfConfig":"242"},{"size":269,"mtime":1607931597526,"results":"461","hashOfConfig":"242"},{"size":7067,"mtime":1609499185681,"results":"462","hashOfConfig":"242"},{"size":446,"mtime":1609235367029,"results":"463","hashOfConfig":"242"},{"size":295,"mtime":1608709316669,"results":"464","hashOfConfig":"242"},{"size":715,"mtime":1609235367022,"results":"465","hashOfConfig":"242"},{"size":3283,"mtime":1608709316704,"results":"466","hashOfConfig":"242"},{"size":3119,"mtime":1609844237846,"results":"467","hashOfConfig":"242"},{"size":894,"mtime":1609419526683,"results":"468","hashOfConfig":"242"},{"size":1275,"mtime":1609419526682,"results":"469","hashOfConfig":"242"},{"size":5410,"mtime":1608785324727,"results":"470","hashOfConfig":"242"},{"size":1734,"mtime":1607662158056,"results":"471","hashOfConfig":"242"},{"size":2306,"mtime":1609235367020,"results":"472","hashOfConfig":"242"},{"size":5095,"mtime":1608785324726,"results":"473","hashOfConfig":"242"},{"size":4493,"mtime":1608269099646,"results":"474","hashOfConfig":"242"},{"size":912,"mtime":1607941458199,"results":"475","hashOfConfig":"242"},{"size":8235,"mtime":1609848885685,"results":"476","hashOfConfig":"242"},{"size":133,"mtime":1609831284329,"results":"477","hashOfConfig":"242"},{"size":1561,"mtime":1609852602935,"results":"478","hashOfConfig":"242"},{"size":1612,"mtime":1609852250173,"results":"479","hashOfConfig":"242"},{"size":1616,"mtime":1609851171378,"results":"480","hashOfConfig":"242"},{"size":1583,"mtime":1609851240105,"results":"481","hashOfConfig":"242"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},"ce6smt",{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"484"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"484"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"519"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"519"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"484"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"484"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"519"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"484"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"519"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"484"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"484"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"584","usedDeprecatedRules":"484"},{"filePath":"585","messages":"586","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"484"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"484"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"519"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"484"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"484"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"484"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"484"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"484"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"758"},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"761","messages":"762","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"763","usedDeprecatedRules":"484"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"484"},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"809","messages":"810","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"871","messages":"872","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"881","messages":"882","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"889","usedDeprecatedRules":"484"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"484"},{"filePath":"903","messages":"904","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"905","usedDeprecatedRules":"484"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"916","usedDeprecatedRules":"484"},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"941","usedDeprecatedRules":"484"},{"filePath":"942","messages":"943","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"944","messages":"945","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"946","messages":"947","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"948","messages":"949","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"950","messages":"951","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"956","messages":"957","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"958","usedDeprecatedRules":"484"},{"filePath":"959","messages":"960","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"961","messages":"962","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"963","messages":"964","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"965","messages":"966","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"967","messages":"968","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"969","messages":"970","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"971","messages":"972","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"973","messages":"974","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"975","messages":"976","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"902","usedDeprecatedRules":"484"},{"filePath":"977","messages":"978","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"979","usedDeprecatedRules":"484"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"484"},"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx",[],["990","991"],"D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts",["992","993"],"import { OptionsProps } from \"components/common/types\";\r\n\r\ninterface CommonFetcherResponse {\r\n  data: any;\r\n  status: \"success\" | \"failure\";\r\n}\r\ntype ExternalResponse = any;\r\n\r\ninterface sessionObjType {\r\n  baseURL?: URL;\r\n  loginStatus: boolean;\r\n  token?: any;\r\n}\r\n\r\nconst isBroswer = new Function(\r\n  \"try {return this===window;}catch(e){ return false;}\"\r\n);\r\n\r\nconst RaatnaFinAPI = () => {\r\n  let sessionObj: sessionObjType = {\r\n    loginStatus: false,\r\n    token: {},\r\n  };\r\n  let sessionToken;\r\n  const createSession = async (APIURL: string) => {\r\n    sessionObj.baseURL = new URL(APIURL);\r\n    var formdata = new FormData();\r\n    let existingSession = \"\";\r\n    if (isBroswer()) {\r\n      existingSession = localStorage.getItem(\"currentAccessToken\") ?? \"\";\r\n    }\r\n    formdata.append(\"tokenId\", existingSession);\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n    const url = new URL(\"./Login\", sessionObj.baseURL);\r\n    sessionToken = fetch(\r\n      url.href,\r\n      //@ts-ignore\r\n      requestOptions\r\n    );\r\n    sessionToken\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        verifyRequest(result);\r\n      });\r\n    sessionToken.catch((error) => {\r\n      verifyRequest(error);\r\n    });\r\n  };\r\n  const verifyRequest = (data) => {\r\n    if (data[\"access_token\"] && data[\"refresh_token\"]) {\r\n      sessionObj.loginStatus = true;\r\n      sessionObj.token = data;\r\n      if (isBroswer()) {\r\n        localStorage.setItem(\r\n          \"currentAccessToken\",\r\n          sessionObj?.token?.access_token ?? \"\"\r\n        );\r\n      }\r\n    } else {\r\n      sessionObj.loginStatus = false;\r\n    }\r\n  };\r\n  const loginStatus = () => {\r\n    return sessionObj.loginStatus;\r\n  };\r\n\r\n  const externalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<ExternalResponse> => {\r\n    try {\r\n      let response = await fetch(url, payload);\r\n      let data = await response.json();\r\n      return data;\r\n    } catch (e) {\r\n      return new Error(`Error fetching data-${e.message}`);\r\n    }\r\n  };\r\n  const getPincode = async (\r\n    pincode: string\r\n  ): Promise<{ options: OptionsProps[]; others: any }> => {\r\n    const data = await externalFetcher(\r\n      `https://api.postalpincode.in/pincode/${pincode}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n      }\r\n    );\r\n    if (Array.isArray(data) && data.length === 1) {\r\n      let result = data[0];\r\n      if (String(result.Status).toLowerCase() === \"success\") {\r\n        let areaArray = result.PostOffice.map((dtl) => ({\r\n          value: dtl?.Name,\r\n          label: dtl?.Name,\r\n        }));\r\n        areaArray = [{ label: \"Select option\", value: \"00\" }, ...areaArray];\r\n        const otherValues = result.PostOffice.reduce((accumlator, current) => {\r\n          const val = {\r\n            city: current.Block,\r\n            district: current.District,\r\n            state: current.State,\r\n            country: current.Country,\r\n          };\r\n          accumlator[current.Name] = val;\r\n          return accumlator;\r\n        }, {});\r\n        return { options: areaArray, others: otherValues };\r\n      }\r\n    }\r\n    return {\r\n      options: [{ label: \"Error fetching pincode\", value: \"0\" }],\r\n      others: null,\r\n    };\r\n  };\r\n\r\n  const internalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<CommonFetcherResponse> => {\r\n    try {\r\n      await sessionToken;\r\n      await wait(); //wait of 1ms to execute code in next event loop cycle to make sure sessionToken has time to update sessionObj\r\n      if (sessionObj.loginStatus === false) {\r\n        return {\r\n          status: \"failure\",\r\n          data: new Error(\"session expired\"),\r\n        };\r\n      }\r\n      let response = await fetch(new URL(url, sessionObj.baseURL).href, {\r\n        method: \"POST\",\r\n        ...payload,\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${sessionObj?.token?.access_token}`,\r\n        }),\r\n      });\r\n      if (String(response.status) === \"200\") {\r\n        let data = await response.json();\r\n        return {\r\n          status: String(data.status) === \"0\" ? \"success\" : \"failure\",\r\n          data: data,\r\n        };\r\n      } else {\r\n        return {\r\n          status: \"failure\",\r\n          data: \"\",\r\n        };\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        status: \"failure\",\r\n        data: e,\r\n      };\r\n    }\r\n  };\r\n\r\n  const getProductType = async (\r\n    _: any,\r\n    formState: any\r\n  ): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/get_sub_product\", {\r\n      body: JSON.stringify({\r\n        action: \"get_sub_product\",\r\n        request_data: {\r\n          code: formState?.formCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.sub_prod_code,\r\n        label: one?.sub_prod_desc,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getPropertyCity = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\r\n      \"./users/get_property_city\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_property_city\",\r\n          request_data: {\r\n            property_city: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getBankList = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/getBankList\", {\r\n      body: JSON.stringify({\r\n        action: \"get_bank_list\",\r\n        request_data: {\r\n          get_bank_list: \"\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.bank_cd,\r\n        label: one?.bank_name,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const getMiscVal = (categCode: string) => async (): Promise<\r\n    OptionsProps[]\r\n  > => {\r\n    const { status, data } = await internalFetcher(\"./users/getmiscval\", {\r\n      body: JSON.stringify({\r\n        action: \"get_misc_val\",\r\n        request_data: {\r\n          category_nm: categCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const requestOTP = async (refID: number | string) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPRequest\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPRequest\",\r\n        request_data: {\r\n          refID: refID,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async (\r\n    refID: string,\r\n    transactionID: string,\r\n    otp: string\r\n  ) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPVerify\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPVerify\",\r\n        request_data: {\r\n          refID: refID,\r\n          transaction_id: transactionID,\r\n          otp: otp,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const handleverifyPwd = async (password: string, phoneNumber: string) => {\r\n    const { data, status } = await internalFetcher(\"./users/customer_login\", {\r\n      body: JSON.stringify({\r\n        action: \"customer_login\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: password,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getMetaData = async (state) => {\r\n    const { action, ...others } = state;\r\n\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: action,\r\n        request_data: others,\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n  const pushFormData = async (\r\n    submitAction?: string,\r\n    formData?: any,\r\n    navigationProps?: any,\r\n    refID?: any\r\n  ) => {\r\n    //rename prodCode to formCode since backend uses prodCode as FormCode\r\n\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: submitAction,\r\n        request_data: { refID: refID, ...formData, ...navigationProps },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n  //remove this function after migration\r\n  const getAccessToken = async () => {\r\n    await sessionToken;\r\n    if (sessionObj?.token[\"access_token\"]) {\r\n      return `Bearer ${sessionObj?.token[\"access_token\"]}`;\r\n    }\r\n    return \"Bearer not_valid_token\";\r\n  };\r\n\r\n  const getsubProductDtl = async (fieldData) => {\r\n    if (fieldData.value.length !== 0) {\r\n      let codes = await getProductType(null, fieldData.value);\r\n      return {\r\n        subProductType: {\r\n          options: codes,\r\n          value: \"00\",\r\n        },\r\n      };\r\n    } else if (fieldData.value === \"\") {\r\n      return {\r\n        subProductType: {\r\n          options: [],\r\n          value: \"\",\r\n        },\r\n      };\r\n    }\r\n  };\r\n  const getDashboardEmployeeDataList = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"get_inquiry_data\",\r\n        request_data: {\r\n          status: \"P\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getInquiryDataToConvertIntoLead = async (refID) => {\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"crm_inquiry_view\",\r\n        request_data: {\r\n          refID: refID,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const submitBecomePartnerData = async (submitAction, formData?: any) => {\r\n    const { data, status } = await internalFetcher(\"./users/become_partner\", {\r\n      body: JSON.stringify({\r\n        action: \"become_partner\",\r\n        request_data: { ...formData },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n\r\n  const validatePanNumber = async (currentField) => {\r\n    const { data, status } = await internalFetcher(\"./users/panvalidator\", {\r\n      body: JSON.stringify({\r\n        action: \"panvalidator\",\r\n        request_data: { doc_number: currentField?.value ?? \"INVALID_PAN\" },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return \"\";\r\n    } else {\r\n      return \"invalid pan number\";\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberExists = async (phoneNumber) => {\r\n    const { data, status } = await internalFetcher(\"./users/verify_user\", {\r\n      body: JSON.stringify({\r\n        action: \"verify_user\",\r\n        request_data: { mobile: phoneNumber },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const updateUserPassword = async (\r\n    confirmPassword: string,\r\n    phoneNumber: string\r\n  ) => {\r\n    const { data, status } = await internalFetcher(\"./users/set_password\", {\r\n      body: JSON.stringify({\r\n        action: \"set_password\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: confirmPassword,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const initiateAadharValidation = async (refID) => {\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/initiateaadharreq\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"initiateaadharreq\",\r\n          request_data: { refID: refID, sms: \"0\" },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatus = async (aadharRequestID) => {\r\n    //console.log(refIdForAadhar);\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/fetchaadharstatus\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"aadharstatus\",\r\n          request_data: {\r\n            transactionID: aadharRequestID,\r\n            updateStatus: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridMetaData = async (gridCode) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"grid_form_data\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridData = async (gridCode, fromNo, toNo, sortBy, filterBy) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"inquiry_data_pagewise\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n          from_row: fromNo,\r\n          to_row: toNo,\r\n          orderby_columns: sortBy,\r\n          filter_conditions: filterBy,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridColumnFilterProps = async (gridCode, options) => {\r\n    /*\r\n    ...options = {accessor:'column_id',result_type:'getGroups|getRange',filter_conditions:[]}\r\n    */\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"grid_column_options\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n          ...options,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatusEventSource = async (\r\n    aadharRequestID\r\n  ): Promise<CommonFetcherResponse> => {\r\n    var urlEndPoint = `https://digix.aiplsolution.in/ratnaafin/users/getaadharstatus?transactionId=${aadharRequestID}`;\r\n    var eventSource = new EventSource(urlEndPoint);\r\n    return new Promise((res) => {\r\n      //@ts-ignore\r\n      eventSource.addEventListener(\"transactionId\", ({ data: eventData }) => {\r\n        eventData = JSON.parse(eventData);\r\n        console.log(eventData);\r\n        let response: CommonFetcherResponse = { status: \"failure\", data: \"\" };\r\n        if (eventData.status === \"0\") {\r\n          response.status = \"success\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        } else {\r\n          response.status = \"failure\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        }\r\n        eventSource.close();\r\n      });\r\n    });\r\n  };\r\n\r\n  const getTeamLeaList = async () => {\r\n    const { data, status } = await internalFetcher(\r\n      \"http://10.55.6.72:8081/users/getTeamLeadList\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_team_lead_list\",\r\n          request_data: {\r\n            product_code: \"12300001\",\r\n          },\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getInquiryFormDataForView = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: \"crm_inquiry_view\",\r\n        request_data: {\r\n          refID: \"1113\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getInquiryFormMetaDataForViewOnly = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"render_inquiry_form\",\r\n        request_data: {\r\n          productID: \"12300001\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getInquiryFormDataForEdit = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: \"crm_inquiry_edit\",\r\n        request_data: {\r\n          refID: \"1097\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getInquiryFormMetaDataForEditOnly = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"render_inquiry_form_edit\",\r\n        request_data: {\r\n          productID: \"12300001\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getQuestionnairesFormDataForView = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: \"crm_questionnaire_view\",\r\n        request_data: {\r\n          refID: \"862\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getQuestionnaireFormMetaDataForViewOnly = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"render_questionnaire_form\",\r\n        request_data: {\r\n          refID: \"1113\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const getQuestionnairesFormDataForEdit = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: \"crm_questionnaire_edit\",\r\n        request_data: {\r\n          refID: \"862\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getQuestannaiareFormMetaDataForEditOnly = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: \"render_questionnaire_form_edit\",\r\n        request_data: {\r\n          refID: \"1113\",\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n\r\n  return {\r\n    createSession,\r\n    loginStatus,\r\n    getPincode,\r\n    getProductType,\r\n    getPropertyCity,\r\n    getBankList,\r\n    getMiscVal,\r\n    getAccessToken,\r\n    getMetaData,\r\n    pushFormData,\r\n    handleverifyPwd,\r\n    getsubProductDtl,\r\n    getDashboardEmployeeDataList,\r\n    getInquiryDataToConvertIntoLead,\r\n    submitBecomePartnerData,\r\n    validatePanNumber,\r\n    checkPhoneNumberExists,\r\n    updateUserPassword,\r\n    initiateAadharValidation,\r\n    fetchAadharRequestStatus,\r\n    fetchAadharRequestStatusEventSource,\r\n    fetchGridMetaData,\r\n    fetchGridColumnFilterProps,\r\n    fetchGridData,\r\n    requestOTP,\r\n    verifyOTP,\r\n    getTeamLeaList,\r\n\r\n    //remove this later\r\n    getInquiryFormDataForView,\r\n    getInquiryFormMetaDataForViewOnly,\r\n    getInquiryFormDataForEdit,\r\n    getInquiryFormMetaDataForEditOnly,\r\n\r\n    getQuestionnairesFormDataForView,\r\n    getQuestionnaireFormMetaDataForViewOnly,\r\n    getQuestionnairesFormDataForEdit,\r\n    getQuestannaiareFormMetaDataForEditOnly,\r\n  };\r\n};\r\n\r\nexport const APISDK = RaatnaFinAPI();\r\n\r\nexport const wait = () => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => res(true), 1);\r\n  });\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx",["994"],"import { useState, Fragment } from \"react\";\r\nimport { Routes, Route, useParams, useNavigate } from \"react-router-dom\";\r\nimport { AppBar } from \"./appBar\";\r\nimport { MySideBar } from \"./sideBar\";\r\nimport { Drawer } from \"./drawer\";\r\nimport { Content } from \"./content\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport Lead from \"./pages/lead\";\r\nimport { Profile } from \"./pages/profile\";\r\nimport Iframe from \"./pages/iframe\";\r\nimport { ParentGridWrapper } from \"components/dataTable\";\r\nimport { APITest } from \"./pages/api\";\r\nimport Login from \"./pages/login\";\r\nimport DynamicLead from \"./pages/leads\";\r\nimport LeadAction from \"./pages/leadaction\";\r\nimport View from \"./pages/tabView\";\r\nimport { useStyles } from \"./style\";\r\nimport { CC_ODFormWrapper } from \"./pages/CAM/SMELoans/CC_OD/CC_ODFormWrapper\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst DashbordPages = () => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerState] = useState(true);\r\n  const handleDrawerOpen = () => setDrawerState(true);\r\n  const handleDrawerClose = () => setDrawerState(false);\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.root}>\r\n        <AppBar open={drawerOpen} handleDrawerOpen={handleDrawerOpen} />\r\n        <Drawer open={drawerOpen} handleDrawerClose={handleDrawerClose}>\r\n          <MySideBar handleDrawerOpen={handleDrawerOpen} open={drawerOpen} />\r\n        </Drawer>\r\n        <Content>\r\n          <Routes>\r\n            <Route path=\"/\" element={<RedirectComponent />} />\r\n            <Route path=\"/dashboard\" element={<Dashboard />} />\r\n            <Route path=\"/leads\" element={<Lead />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route path=\"/iframe\" element={<Iframe />} />\r\n            <Route path=\"/dgrid\" element={<ParentGridWrapper />} />\r\n            <Route path=\"/cam\" element={<CC_ODFormWrapper />} />\r\n            <Route path=\"/api\" element={<APITest />} />\r\n            <Route path=\"/cam\" element={<DynamicLead />} />\r\n            <Route path=\"/pages/:id\" element={<Dummy />} />\r\n            <Route path=\"/leadAction\" element={<LeadAction />} />\r\n            <Route path=\"/view\" element={<View />} />\r\n            <Route path=\"/auth\" element={<Login />} />\r\n          </Routes>\r\n        </Content>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DashbordPages;\r\n\r\nconst RedirectComponent = () => {\r\n  const navigate = useNavigate();\r\n  setTimeout(() => navigate(\"./dashboard\"), 1);\r\n  return null;\r\n};\r\n\r\nfunction Dummy() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n  let { id } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h3>ID: {id}</h3>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js",[],["995","996"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx",["997"],"import { Fragment, useEffect, useRef, useReducer } from \"react\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function EmployeeDashboard() {\r\n  const timeoutDuration = 5 * 60 * 1000;\r\n  const poolingInterval = 10 * 1000;\r\n  let timeout, interval;\r\n\r\n  const initialState = {\r\n    currentScreen: \"inititateAadharValidation\",\r\n    loading: false,\r\n    apiResult: \"\",\r\n    apiResultStatus: \"\",\r\n    aadharTransactionID: \"\",\r\n    aadharAuthenticationURL: \"\",\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"startInititateAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"inititateAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          currentScreen: \"aadharValidation\",\r\n          apiResult: action.payload.status,\r\n          apiResultStatus: action.payload.status,\r\n          aadharTransactionID: action.payload.data.transactionId,\r\n          aadharAuthenticationURL: action.payload.data.url,\r\n        };\r\n      case \"endAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n          currentScreen: \"aadharValidationResult\",\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const handleAadharInitiation = async (transCode) => {\r\n    dispatch({\r\n      type: \"startInititateAadharValidation\",\r\n    });\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(1001);\r\n      if (result.status === \"success\") {\r\n        const { aadharTransactionID, aadharAuthenticationURL } = result.data;\r\n        dispatch({\r\n          type: \"inititateAadharValidation\",\r\n          payload: result,\r\n        });\r\n        startPooling({\r\n          aadharTransactionID: aadharTransactionID,\r\n          aadharAuthenticationURL: aadharAuthenticationURL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"endAadharValidation\",\r\n        apiResult: \"error\",\r\n        apiResultStatus: err,\r\n      });\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchRequestID = useRef(0);\r\n\r\n  const startPooling = (data) => {\r\n    interval = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(data.aadharTransactionID).then((resp) => {\r\n        if (currentFetchRequestID === fetchRequestID.current) {\r\n          if (resp.status === \"success\") {\r\n            if (\r\n              resp.data.requestStatus === \"success\" ||\r\n              resp.data.requestStatus === \"failed\"\r\n            ) {\r\n              if (resp.data.requestStatus === \"failed\") {\r\n                dispatch({\r\n                  type: \"endAadharValidation\",\r\n                  apiResult: resp.status,\r\n                  apiResultStatus: resp.data.requestStatus,\r\n                });\r\n              }\r\n              dispatch({\r\n                type: \"endAadharValidation\",\r\n                apiResult: resp.status,\r\n                apiResultStatus: resp.data.requestStatus,\r\n              });\r\n              clearInterval(interval);\r\n              clearTimeout(timeout);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeout = setTimeout(() => {\r\n      dispatch({\r\n        type: \"endAadharValidation\",\r\n        apiResult: \"error\",\r\n        apiResultStatus: \"Request Time out\",\r\n      });\r\n      clearInterval(interval);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeout);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <Fragment>\r\n      {state.currentScreen === \"inititateAadharValidation\" ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ??</span>\r\n          <button\r\n            disabled={state.loading ? true : false}\r\n            onClick={() => {\r\n              handleAadharInitiation(1001);\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button>No</button>\r\n        </div>\r\n      ) : state.currentScreen === \"aadharValidation\" ? (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={state.aadharAuthenticationURL}\r\n          width=\"100%\"\r\n          height=\"700px\"\r\n        />\r\n      ) : state.currentScreen === \"aadharValidationResult\" ? (\r\n        <Alert severity={state.apiResult ? \"error\" : \"success\"}>\r\n          {state.apiResultStatus}\r\n        </Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx",["998","999","1000","1001","1002","1003","1004","1005","1006","1007"],"import { memo, Fragment, FC, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport FormWrapper, {\r\n  ViewFormWrapper,\r\n  isMetaDataValid,\r\n  MetaDataType,\r\n} from \"components/dyanmicForm\";\r\nimport { InitialValuesType } from \"packages/form\";\r\nimport { CC_ODMetaData } from \"./CC_ODMetaData\";\r\nimport { CAMFormPreviewPage } from \"./formPreview\";\r\n\r\nconst MemoizedFormWrapper = memo(FormWrapper);\r\n\r\ninterface TabFormProps {\r\n  metaData: MetaDataType;\r\n  initialValues?: InitialValuesType;\r\n}\r\n\r\nconst CC_ODForm: FC<TabFormProps> = ({ metaData, initialValues }) => {\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [showDialog, setShowDialog] = useState(false);\r\n  const [submitProps, setSubmitProps] = useState({});\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const onSubmitHandlerNew = (values, submitEnd) => {\r\n    setFormData(values);\r\n    setShowDialog(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setShowDialog(false);\r\n  };\r\n\r\n  const onSubmitHandler = async (values, submitEnd) => {\r\n    setSubmitProps(() => ({\r\n      values: values,\r\n      submitEnd: submitEnd,\r\n    }));\r\n    setShowDialog(true);\r\n  };\r\n  const result = /*!isMetaDataValid(metaData)*/ !true ? (\r\n    <span>Error loading form</span>\r\n  ) : (\r\n    <Fragment>\r\n      <MemoizedFormWrapper\r\n        metaData={metaData}\r\n        initialValues={initialValues}\r\n        onSubmitHandler={onSubmitHandler}\r\n        // onSubmitHandler={onSubmitHandlerNew}\r\n        hidden={showDialog === true}\r\n      />\r\n      {/* {showDialog ? (\r\n        <ViewFormWrapper metaData={metaData} formData={formData} />\r\n      ) : null} */}\r\n      {showDialog ? (\r\n        <CAMFormPreviewPage\r\n          onClose={handleCloseDetails}\r\n          isOpen={showDialog}\r\n          row={submitProps}\r\n        />\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\nexport const CC_ODFormWrapper = () => {\r\n  return <CC_ODForm metaData={CC_ODMetaData} />;\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx",["1008","1009"],"import { useState, useEffect } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ReactReadMoreReadLess from \"react-read-more-read-less\";\r\nimport { useStyles } from \"./style\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\n\r\nexport const CAMFormPreviewPage = ({ onClose, isOpen, row }) => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const [previewDetailsList, setPreviewDetailsList] = useState<any[]>([]);\r\n  let temp = row.values;\r\n\r\n  useEffect(() => {\r\n    const getCAMDatapreview = async () => {\r\n      let toStoreData: any = [];\r\n      toStoreData.push({\r\n        udhyamAadharNumber: temp.udhyamAadharNumber,\r\n        incorporationDate: temp.incorporationDate,\r\n        proposedBusiness: temp.proposedBusiness,\r\n        externalCreditRating: temp.externalCreditRating,\r\n        msme: temp.msme,\r\n        promotersDirectorsName: temp.promotersDirectorsName,\r\n        loanAmount: temp.loanAmount,\r\n        loanDetails: temp.loanDetails,\r\n        natureOfFacility: temp.natureOfFacility,\r\n        bankName: temp.bankName,\r\n        outstandingAmount: temp.outstandingAmount,\r\n        rateOfInterest: temp.rateOfInterest,\r\n        newTakeover: temp.newTakeover,\r\n        requestedROI: temp.requestedROI,\r\n        proposedAmount: temp.proposedAmount,\r\n        presentProposedLoancomments: temp.presentProposedLoancomments,\r\n        loanPurpose: temp.loanPurpose,\r\n        chequeBounce: temp.chequeBounce,\r\n        companyHistory: temp.companyHistory,\r\n        existingProducts: temp.existingProducts,\r\n        productEndUse: temp.productEndUse,\r\n        majorSuppliers: temp.majorSuppliers,\r\n        paymenttermSupplier: temp.paymenttermSupplier,\r\n\r\n        acr: temp.acr,\r\n        addOffice: temp.addOffice,\r\n        age: temp.age,\r\n        associateCompanies: temp.associateCompanies,\r\n        awardRecognitionreceived: temp.awardRecognitionreceived,\r\n      });\r\n      setPreviewDetailsList(toStoreData);\r\n    };\r\n    getCAMDatapreview();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Dialog maxWidth=\"md\" open={isOpen} aria-labelledby=\"Details\">\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {previewDetailsList.map((data) => {\r\n              return (\r\n                <Grid style={{ padding: \"5px\" }}>\r\n                  <h3 className={classes.heading}>General Details </h3>\r\n                  <Grid container spacing={2}>\r\n                    <Grid xs={12} sm={12} md={12}>\r\n                      <Paper>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of the Unit:\r\n                          </Box>\r\n                          <Box width=\"60%\">Amp</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Constitution of Business:\r\n                          </Box>\r\n                          <Box width=\"60%\">{}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Registered Address:\r\n                          </Box>\r\n                          <Box width=\"60%\">{}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Work Address:\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.addOffice}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Ownership of Factory / Business Premises:\r\n                          </Box>\r\n                          <Box width=\"60%\">{}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Date of incorporation:\r\n                          </Box>\r\n                          <Box width=\"60%\">15/12/2005</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Existing Type of Industry:\r\n                          </Box>\r\n                          <Box width=\"60%\">{}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Nature of Existing Business :\r\n                          </Box>\r\n                          <Box width=\"60%\">{}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Proposed business:\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.proposedBusiness}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            External credit rating:\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.externalCreditRating}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Micro, Small or Medium\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.msme}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            PAN No:\r\n                          </Box>\r\n                          <Box width=\"60%\">AAFCK4589C</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Udhyam No:\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.udhyamAadharNumber}</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            CMR Ranking :\r\n                          </Box>\r\n                          <Box width=\"60%\">Self Employee</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            RF Rating :\r\n                          </Box>\r\n                          <Box width=\"60%\">Self Employee</Box>\r\n                        </Box>\r\n                        <Box className={classes.box}>\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Promoters / Directors\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.promotersDirectorsName}</Box>\r\n                        </Box>\r\n\r\n                        <Grid\r\n                          container\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                          direction=\"row\"\r\n                        >\r\n                          <Grid\r\n                            container\r\n                            style={{ borderBottom: \"solid 1px\" }}\r\n                            direction=\"row\"\r\n                          >\r\n                            <Grid\r\n                              item\r\n                              xs={2}\r\n                              className={classes.gridWithRightBorder}\r\n                            >\r\n                              <h5>Banking Arrangements</h5>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={2}\r\n                              className={classes.gridWithRightBorder}\r\n                            >\r\n                              <Box>\r\n                                <div className={classes.fontTitle}>\r\n                                  Name of Bank:\r\n                                </div>\r\n                                <div>Federal Bank</div>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={2}\r\n                              className={classes.gridWithRightBorder}\r\n                            >\r\n                              <Box>\r\n                                <div className={classes.fontTitle}>Branch:</div>\r\n                                <div>Shivranjani</div>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={2}\r\n                              className={classes.gridWithRightBorder}\r\n                            >\r\n                              <Box>\r\n                                <div className={classes.fontTitle}>\r\n                                  Current A/C No:\r\n                                </div>\r\n                                <div>12345678912345</div>\r\n                              </Box>\r\n                            </Grid>\r\n                            <Grid\r\n                              item\r\n                              xs={3}\r\n                              md={4}\r\n                              className={classes.gridWithRightBorder}\r\n                            >\r\n                              <Box>\r\n                                <div className={classes.fontTitle}>\r\n                                  Average Bank Balance:\r\n                                </div>\r\n                                <div>{\"₹\"}10,000</div>\r\n                              </Box>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid container style={{ borderBottom: \"solid 1px\" }}>\r\n                          <Grid\r\n                            xs={2}\r\n                            direction={\"column\"}\r\n                            style={{\r\n                              height: \"200px\",\r\n                              borderRight: \"1px solid\",\r\n                            }}\r\n                          >\r\n                            <Box\r\n                              display=\"flex\"\r\n                              flexDirection=\"column\"\r\n                              style={{\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                              <div className={classes.fontTitle}>\r\n                                Loan amount (Rs.):\r\n                              </div>\r\n                              <div>{\"₹\"}30,000</div>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid xs={10}>\r\n                            <Grid\r\n                              container\r\n                              direction={\"row\"}\r\n                              style={{\r\n                                height: \"100px\",\r\n                                borderBottom: \"solid 1px\",\r\n                              }}\r\n                            >\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <div className={classes.fontTitle}>\r\n                                  Present:\r\n                                </div>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    Nature of Facility\r\n                                  </Box>\r\n                                  <Box>{data.natureOfFacility}</Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    Name of Bank\r\n                                  </Box>\r\n                                  <Box>{data.bankName}</Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    O/s Amount as on(In Lacs)\r\n                                  </Box>\r\n                                  <Box>\r\n                                    {\"₹\"}\r\n                                    {data.outstandingAmount}\r\n                                  </Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  padding: \"10px\",\r\n                                }}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    Rate of Interest\r\n                                  </Box>\r\n                                  <Box>{data.rateOfInterest}</Box>\r\n                                </Box>\r\n                              </Grid>\r\n                            </Grid>\r\n\r\n                            <Grid\r\n                              container\r\n                              direction={\"row\"}\r\n                              style={{ height: \"100px\" }}\r\n                            >\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <div className={classes.fontTitle}>\r\n                                  Proposed:\r\n                                </div>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    Nature of Facility\r\n                                  </Box>\r\n                                  <Box>{data.natureOfFacility}</Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    New / Takeover\r\n                                  </Box>\r\n                                  <Box>{data.newTakeover}</Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                className={classes.gridWithRightBorder}\r\n                              >\r\n                                <Box>\r\n                                  <Box className={classes.fontTitle}>\r\n                                    Requested ROI\r\n                                  </Box>\r\n                                  <Box>\r\n                                    {\"₹\"}\r\n                                    {data.requestedROI}\r\n                                  </Box>\r\n                                </Box>\r\n                              </Grid>\r\n                              <Grid\r\n                                item\r\n                                xs={2}\r\n                                style={{\r\n                                  alignItems: \"center\",\r\n                                  padding: \"10px\",\r\n                                }}\r\n                              >\r\n                                <Box>\r\n                                  <div className={classes.fontTitle}>\r\n                                    Amount\r\n                                  </div>\r\n                                  <div>{data.proposedAmount}</div>\r\n                                </Box>\r\n                              </Grid>\r\n                            </Grid>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                  ;<h3 className={classes.heading}>Business Details </h3>\r\n                  <Grid container spacing={2}>\r\n                    <Grid xs={12} sm={12} md={12}>\r\n                      <Paper>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Brief history of the Company\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            <ReactReadMoreReadLess\r\n                              charLimit={80}\r\n                              readMoreText={\"Read more ▼\"}\r\n                              readLessText={\"Read less ▲\"}\r\n                              readMoreClassName={classes.readMoreReadLess}\r\n                              readLessClassName={classes.readMoreReadLess}\r\n                            >\r\n                              Kravour Foods Pvt. Ltd. is incorporated since 2014\r\n                              for the manufacturing and Trading of Wafer\r\n                              Biscuits. The Companies manufacturing plant is\r\n                              located at Vasna Chacharavadi, on land having area\r\n                              of approx. 1853 Sq. Meter.\r\n                            </ReactReadMoreReadLess>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Existing Products / Services of the company\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            <ReactReadMoreReadLess\r\n                              charLimit={80}\r\n                              readMoreText={\"Read more ▼\"}\r\n                              readLessText={\"Read less ▲\"}\r\n                              readMoreClassName={classes.readMoreReadLess}\r\n                              readLessClassName={classes.readMoreReadLess}\r\n                            >\r\n                              Wafer Biscuits in different Flavors like vanilla,\r\n                              strawberry, pineapple, banana, mango, mixed\r\n                              fruits, chocolate, orange and many more\r\n                            </ReactReadMoreReadLess>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            End Use of the Products\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            <ReactReadMoreReadLess\r\n                              charLimit={80}\r\n                              readMoreText={\"Read more ▼\"}\r\n                              readLessText={\"Read less ▲\"}\r\n                              readMoreClassName={classes.readMoreReadLess}\r\n                              readLessClassName={classes.readMoreReadLess}\r\n                            >\r\n                              Wafer Biscuits in different Flavors like vanilla,\r\n                              strawberry, pineapple, banana, mango, mixed\r\n                              fruits, chocolate, orange and many more\r\n                            </ReactReadMoreReadLess>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Raw Materials\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            Ingredient1, Ingredient2, Ingredient3,Ingredient4\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Major Suppliers\r\n                          </Box>\r\n                          <Box width=\"60%\">Kravour Foods</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Payment Terms with Suppliers\r\n                          </Box>\r\n                          <Box width=\"60%\">Self Employee</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Major Customers\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            TATA, Amazon, Spencer, Grofers, Big Baskete\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Payment terms with Customers\r\n                          </Box>\r\n                          <Box width=\"60%\">Use clear communication</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Current Order Book Position\r\n                          </Box>\r\n                          <Box width=\"60%\">Buyer’s side and seller’s side</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Marketing & Distribution Policy/Strategy\r\n                          </Box>\r\n                          <Box width=\"60%\">Kinds of channels</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Competitors\r\n                          </Box>\r\n                          <Box width=\"60%\">TATA, Amazon</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of Major Countries where Exporting\r\n                          </Box>\r\n                          <Box width=\"60%\">UAE, Taiwan, Iraq</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Domestic and export sales ratio\r\n                          </Box>\r\n                          <Box width=\"60%\">25</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            No. of Employees\r\n                          </Box>\r\n                          <Box width=\"60%\">350</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Other Industry specific approvals / license\r\n                          </Box>\r\n                          <Box width=\"60%\">Gallops Motors Pvt. Ltd.</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          flexDirection=\"row\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Any awards / Recognition received\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.awardRecognitionreceived}</Box>\r\n                        </Box>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <h3 className={classes.heading}>Management Details </h3>\r\n                  <Grid container spacing={2}>\r\n                    <Grid xs={12} sm={12} md={12}>\r\n                      <Paper>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Name of the Partner/Director\r\n                          </Box>\r\n                          <Box width=\"60%\">Mr. Prasan Surana</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            PAN No.\r\n                          </Box>\r\n                          <Box width=\"60%\">AAFCK4589C</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Aadhar No.\r\n                          </Box>\r\n                          <Box width=\"60%\">UDYAM-GJ-01-0016416</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            DIN / LLPIN No.\r\n                          </Box>\r\n                          <Box width=\"60%\">24AAFCK4589C1ZJ</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Age\r\n                          </Box>\r\n                          <Box width=\"60%\">50+</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Educational Qualification\r\n                          </Box>\r\n                          <Box width=\"60%\">B.Tech</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Experience\r\n                          </Box>\r\n                          <Box width=\"60%\">15+ Years</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Associate Companies\r\n                          </Box>\r\n                          <Box width=\"60%\">Acute Informatics PVT.LTD</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Profit Sharing / Shareholding %\r\n                          </Box>\r\n                          <Box width=\"60%\">50%</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Net Worth\r\n                          </Box>\r\n                          <Box width=\"60%\">{\"₹\"} 440.00 Lakhs</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Resposnibilities Handled in the Comapany\r\n                          </Box>\r\n                          <Box width=\"60%\">\r\n                            <li>Managemnet</li>\r\n                            <li>Export & Import</li>\r\n                          </Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Credit Score\r\n                          </Box>\r\n                          <Box width=\"60%\">700</Box>\r\n                        </Box>\r\n\r\n                        <Grid container style={{ borderBottom: \"solid 1px\" }}>\r\n                          <Grid item xs={2}>\r\n                            <h6\r\n                              style={{\r\n                                borderRight: \"solid 1px\",\r\n                                padding: \"5px\",\r\n                              }}\r\n                            >\r\n                              Last three years Income Summary\r\n                            </h6>\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Box\r\n                              flexDirection=\"row\"\r\n                              style={{\r\n                                borderRight: \"solid 1px\",\r\n                                padding: \"5px\",\r\n                              }}\r\n                            >\r\n                              <Box className={classes.fontTitle}>\r\n                                First Year Summary\r\n                              </Box>\r\n                              <Box>1369.49</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Box\r\n                              flexDirection=\"row\"\r\n                              style={{\r\n                                borderRight: \"solid 1px\",\r\n                                padding: \"5px\",\r\n                              }}\r\n                            >\r\n                              <Box className={classes.fontTitle}>\r\n                                Second Year Summary\r\n                              </Box>\r\n                              <Box>1287.83</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={2}>\r\n                            <Box\r\n                              flexDirection=\"row\"\r\n                              style={{\r\n                                borderRight: \"solid 1px\",\r\n                                padding: \"5px\",\r\n                              }}\r\n                            >\r\n                              <Box className={classes.fontTitle}>\r\n                                Third Year Summary\r\n                              </Box>\r\n                              <Box>632.84</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <h3 className={classes.heading}>Collateral Details </h3>\r\n                  <Grid container spacing={2}>\r\n                    <Grid xs={12} sm={12} md={12}>\r\n                      <Paper>\r\n                        <h6\r\n                          style={{\r\n                            borderBottom: \"solid 1px\",\r\n                            fontWeight: 700,\r\n                          }}\r\n                        >\r\n                          PRIMARY SECURITY\r\n                        </h6>\r\n\r\n                        <Grid container style={{ borderBottom: \"solid 1px\" }}>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{ borderRight: \"solid 1px\" }}\r\n                          >\r\n                            <Box\r\n                              style={{\r\n                                padding: \"5px\",\r\n                                fontWeight: 600,\r\n                              }}\r\n                            >\r\n                              Address of the Property\r\n                            </Box>\r\n                            <Box>\r\n                              Block No. 103b Paiki, And 105 Paiki Nr Kravour\r\n                              Foods Opp Pradip Overseas Co\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>\r\n                                Area of the Property\r\n                              </Box>\r\n                              <Box>1853 Sq. Mtrs</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>Owner</Box>\r\n                              <Box>Mr. Prasan Surana </Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={2} style={{ padding: \"5px\" }}>\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>\r\n                                Market Value (Rs. In Crore)\r\n                              </Box>\r\n                              <Box>{\"₹\"}150.00</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <h6\r\n                          style={{\r\n                            borderBottom: \"solid 1px\",\r\n                            fontWeight: 700,\r\n                          }}\r\n                        >\r\n                          COLLATERAL SECURITY\r\n                        </h6>\r\n                        <Grid container style={{ borderBottom: \"solid 1px\" }}>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{ borderRight: \"solid 1px\" }}\r\n                          >\r\n                            <Box\r\n                              style={{\r\n                                padding: \"5px\",\r\n                                fontWeight: 600,\r\n                              }}\r\n                            >\r\n                              Address of the Property\r\n                            </Box>\r\n                            <Box>\r\n                              Block No. 103b Paiki, And 105 Paiki Nr Kravour\r\n                              Foods Opp Pradip Overseas Co\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>\r\n                                Area of the Property\r\n                              </Box>\r\n                              <Box>1853 Sq. Mtrs</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>Owner</Box>\r\n                              <Box>Mr. Prasan Surana </Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid item xs={2} style={{ padding: \"5px\" }}>\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>\r\n                                Market Value (Rs. In Crore)\r\n                              </Box>\r\n                              <Box>{\"₹\"}150.00</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            Collateral Coverage\r\n                          </Box>\r\n                          <Box width=\"60%\">80%</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            FACR\r\n                          </Box>\r\n                          <Box width=\"60%\">22.25%</Box>\r\n                        </Box>\r\n                        <Box\r\n                          display=\"flex\"\r\n                          style={{ borderBottom: \"solid 1px\" }}\r\n                        >\r\n                          <Box width=\"40%\" className={classes.fontTitle}>\r\n                            ACR\r\n                          </Box>\r\n                          <Box width=\"60%\">{data.acr}</Box>\r\n                        </Box>\r\n\r\n                        <h6\r\n                          style={{\r\n                            borderBottom: \"solid 1px\",\r\n                            fontWeight: 700,\r\n                          }}\r\n                        >\r\n                          PERSONAL GUARANTE\r\n                        </h6>\r\n                        <Grid container style={{ borderBottom: \"solid 1px\" }}>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>\r\n                                Name of Guarantor\r\n                              </Box>\r\n                              <Box>Mr.Ankur P Surana</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>PAN No.</Box>\r\n                              <Box>AAFCK4589C</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                          <Grid\r\n                            item\r\n                            xs={2}\r\n                            style={{\r\n                              borderRight: \"solid 1px\",\r\n                              padding: \"5px\",\r\n                            }}\r\n                          >\r\n                            <Box flexDirection=\"row\">\r\n                              <Box className={classes.fontTitle}>Net Worth</Box>\r\n                              <Box>{\"₹\"}91.47</Box>\r\n                            </Box>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Paper>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"mb-30\">\r\n          <Button\r\n            autoFocus\r\n            className={classes.submit}\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => navigate(\"/thankyou\")}\r\n            color=\"primary\"\r\n            autoFocus\r\n            className={classes.submit}\r\n          >\r\n            Verify & Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js",["1010"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\n\r\nimport { DisplayData } from \"./displayData\";\r\nimport { Tooltip as LightTooltip } from \"components/styledComponent/tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    color: \"#26A456\",\r\n    cursor: \"pointer\",\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background:\r\n      \"linear-gradient(-90deg, rgba(94,231,131,1) 0%, rgba(74,205,159,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 36,\r\n    padding: \"0 1rem\",\r\n    fontSize: \"1.2rem\",\r\n    \"&:hover\": {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(94,231,131,1) 0%, rgba(74,204,160,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    },\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n})(Button);\r\n\r\nexport const EmployeeLead = () => {\r\n  const classes = useStyles();\r\n  const [InquiryDetailsList, setInquiryDetailsList] = useState([]);\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n  const currentInqCode = useRef(\"\");\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClickOpen = (event, currenIndex) => {\r\n    event.preventDefault();\r\n    setCurrentRow(InquiryDetailsList[currenIndex]);\r\n    currentInqCode.current = InquiryDetailsList[currenIndex][0];\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setOpenDetails(false);\r\n  };\r\n\r\n  //get user inquiry details\r\n\r\n  useEffect(() => {\r\n    const fetcher = async () => {\r\n      const result = await APISDK.getDashboardEmployeeDataList();\r\n      // console.log(\"result\", result);\r\n      try {\r\n        setLoading(true);\r\n        if (result.status === \"success\") {\r\n          let dataNew = result.data.map((x) => {\r\n            return [\r\n              x.inquiry_code,\r\n              x.inquiry_date,\r\n              x.product_type,\r\n              x.customer_name,\r\n              x.mobile_no,\r\n              x.email_id,\r\n              x.inquiry_status,\r\n              x.lead_generaate,\r\n              x.questionaaries + \"/\" + x.health_score,\r\n            ];\r\n          });\r\n          setInquiryDetailsList(dataNew);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    };\r\n    fetcher();\r\n  }, [InquiryDetailsList]);\r\n\r\n  const columns = [\r\n    {\r\n      label: \"Inquiry ID\",\r\n      name: \"InquiryId\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Date\",\r\n      name: \"InquiryDate\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Product Type\",\r\n      name: \"ProductType\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Customer Name\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Mobile No.\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Status\",\r\n      name: \"\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Lead Generated\",\r\n      name: \"Generate_lead\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Questionaries / Health Check Score\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Action\",\r\n      name: \"Action\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        download: false,\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          return (\r\n            <div>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"View\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={handleClickOpen}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <VisibilityIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Edit\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={(e) => handleClickOpen(e, dataIndex)}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <EditIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Delete\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <DeleteIcon />\r\n                </span>\r\n              </LightTooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\r\n        <StyledButton>Generate New Lead</StyledButton>\r\n      </Box>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={12} className=\"table-cover\">\r\n          {loading ? <CircularProgress size={20} /> : null}\r\n          <MUIDataTable\r\n            title=\"Lead Management\"\r\n            data={InquiryDetailsList}\r\n            columns={columns}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              filter: false,\r\n              viewColumns: false,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        {openDetails ? (\r\n          <DisplayData\r\n            onClose={handleCloseDetails}\r\n            open={openDetails}\r\n            row={currentInqCode.current}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx",["1011","1012"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const [OpenDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Change Password fsdfdsffs\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Password must be 8-16 characters and include both numbers and letters.\r\n        </DialogContentText>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Current Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Current Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"New Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions className=\"mb-30\">\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.backBtn}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx",["1013","1014"],"import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logoImg from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const [otp, setotp] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [otpVerifydivShowing, setotpVerifydivShowing] = useState(false);\r\n  const [showPwddiv, setshowPwddiv] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [id, setid] = useState(\"\");\r\n  const [expiryOtpTime, setexpiryOtpTime] = useState(\"\");\r\n\r\n  const requestOtp = async () => {\r\n    if (phoneNumber !== \"\" && phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.requestOTP(phoneNumber);\r\n        // console.log(\"result\", result);\r\n        if (result.status === \"success\") {\r\n          setid(result?.data?.id);\r\n          setexpiryOtpTime(result?.data?.sdatetime);\r\n          setotpVerifydivShowing(true);\r\n          setLoading(false);\r\n        } else {\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setError(\"mobile number should be 10 digits\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await APISDK.verifyOTP(phoneNumber, \"\", otp);\r\n      if (result.status === \"success\") {\r\n        setLoading(false);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        setError(result?.data?.error_msg);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(\"in catch\");\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const verifyPwd = async () => {\r\n    if (password.length !== 0 || password !== \"\") {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.handleverifyPwd(password, phoneNumber);\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          // console.log(\"in else\", result?.data?.error_msg);\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      console.log(\"Password should not be empty\");\r\n    }\r\n  };\r\n\r\n  const showPassDiv = () => {\r\n    if (error === \"\") {\r\n      setshowPwddiv(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginEmp}\r\n      >\r\n        <img src={logoImg} alt=\"Ratnaafin\" className={classes.logo} />\r\n        <h2>Employee Login</h2>\r\n        <div className=\"text\">\r\n          Login with your registered mobile number to access your Ratnaafin\r\n          account.\r\n        </div>\r\n\r\n        {showPwddiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Password for verification\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n\r\n            <Button\r\n              onClick={verifyPwd}\r\n              disabled={password !== \"\" ? false : true}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : otpVerifydivShowing === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"OTP\"\r\n              placeholder=\"OTP for verification\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setotp(e.target.value)}\r\n              autoComplete=\"off\"\r\n              inputProps={{ maxLength: 6 }}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              disabled={otp.length !== 6 ? true : false}\r\n              onClick={verifyOtp}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">+91</InputAdornment>\r\n                ),\r\n              }}\r\n              placeholder=\"Enter mobile number\"\r\n              fullWidth\r\n              className=\"mobileNumber\"\r\n              type=\"number\"\r\n              name=\"phoneNumber\"\r\n              autoComplete=\"off\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setphoneNumber(e.target.value)}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              onClick={requestOtp}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With OTP\r\n            </Button>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n              <div className=\"text\">\r\n                <b>Or</b>\r\n              </div>\r\n            </Box>\r\n\r\n            <Button onClick={showPassDiv} className={classes.loginBtn}>\r\n              Login With Password\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx",["1015"],"import { useNavigate } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport Logo from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const MyDrawer = ({ open, handleDrawerClose, children }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <a\r\n          href=\"#\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(\"./\");\r\n          }}\r\n        >\r\n          <img src={Logo} alt=\"Ratnaafin\" className={classes.logo} />\r\n        </a>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider className={classes.hrCSS} />\r\n      {children}\r\n    </Drawer>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx",["1016"],"import { FC, useEffect, useState } from \"react\";\r\nimport { GridMetaDataType } from \"./types\";\r\nimport {\r\n  attachComponentsToMetaData,\r\n  attachFilterComponentToMetaData,\r\n  attachAlignmentProps,\r\n  extractHiddenColumns,\r\n  sortColumnsBySequence,\r\n  transformHeaderFilters,\r\n  transformHeaderFiltersNew,\r\n} from \"./utils\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { GirdController } from \"./gridController\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nexport const ParentGridWrapper = () => {\r\n  const gridCode = \"trn/001\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [metaData, setMetaData] = useState({});\r\n\r\n  useEffect(() => {\r\n    APISDK.fetchGridMetaData(gridCode)\r\n      .then((result) => {\r\n        if (result.status === \"success\") {\r\n          let finalData = transformMetaData(result.data, gridCode);\r\n          Promise.resolve(finalData.headerFilters).then((filtersResult) => {\r\n            finalData.headerFilters = filtersResult;\r\n            setMetaData(finalData);\r\n            setError(false);\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setMetaData(result.data);\r\n          setError(true);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(true);\r\n        setMetaData(err);\r\n      });\r\n  }, []);\r\n  return loading ? (\r\n    <span>{\"loading...\"}</span>\r\n  ) : error ? (\r\n    <span>{\"error loading grid\"}</span>\r\n  ) : (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <GirdController\r\n        metaData={metaData as GridMetaDataType}\r\n        gridCode={gridCode}\r\n      />\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nconst transformMetaData = (\r\n  metaData: GridMetaDataType,\r\n  gridCode: string\r\n): GridMetaDataType => {\r\n  let columns = metaData.columns as any;\r\n\r\n  //make sure extract functions are called before attach and lastly sort\r\n  const hiddenColumns = extractHiddenColumns(columns);\r\n  columns = attachComponentsToMetaData(columns);\r\n  columns = attachFilterComponentToMetaData(columns);\r\n  columns = attachAlignmentProps(columns);\r\n  columns = sortColumnsBySequence(columns);\r\n  const transformedHeaderFilters = transformHeaderFilters(\r\n    gridCode,\r\n    metaData.headerFilters\r\n  );\r\n  if (metaData.headerFilters !== undefined) {\r\n    const filters = transformHeaderFiltersNew(metaData.headerFilters);\r\n    console.log(filters);\r\n  }\r\n\r\n  return {\r\n    columns: columns,\r\n    gridConfig: metaData.gridConfig,\r\n    hiddenColumns: hiddenColumns,\r\n    headerFilters: transformedHeaderFilters,\r\n  };\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx",["1017"],"import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport Logo from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const MyAppBar = ({ handleDrawerOpen, open }) => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const inputRef = useRef(null);\r\n  const theme = useTheme();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        {open !== true ? (\r\n          <a\r\n            href=\"#\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              navigate(\"./\");\r\n            }}\r\n          >\r\n            <img src={Logo} alt=\"Ratnaafin\" className={classes.logo} />\r\n          </a>\r\n        ) : null}\r\n\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          LOS: Loan Origination System\r\n          <Typography variant=\"caption\" display=\"block\" color=\"secondary\">\r\n            Branch: Rajkot\r\n          </Typography>\r\n          <Typography\r\n            variant=\"caption\"\r\n            display=\"block\"\r\n            color=\"secondary\"\r\n            gutterBottom\r\n          >\r\n            Last Login: 21/11/2020 05:00 PM\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <div\r\n          className={classes.searchRoot}\r\n          style={{ display: desktop ? \"flex\" : \"none\" }}\r\n        >\r\n          <Input\r\n            disableUnderline\r\n            placeholder=\"Search..\"\r\n            type=\"search\"\r\n            id=\"docsearch-input\"\r\n            inputRef={inputRef}\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n          <div className={classes.search}>\r\n            <SearchIcon />\r\n          </div>\r\n        </div>\r\n\r\n        <IconButton color=\"inherit\" className=\"ml-2\">\r\n          <Badge badgeContent={4} color=\"primary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <div className={classes.loggedInUser}>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            className={classes.nameClass}\r\n          >\r\n            <span className={classes.userName}>Employee Name</span>\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n            elevation={0}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                navigate(\"./profile\");\r\n                handleClose();\r\n              }}\r\n            >\r\n              <AccountCircleIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Profile</span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                navigate(\"./iframe\");\r\n                handleClose();\r\n              }}\r\n            >\r\n              <AccountCircleIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Iframe</span>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <PowerSettingsNewIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Logout</span>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx",["1018","1019","1020"],"import { FC, useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport { GridMetaDataType } from \"./types\";\nimport {\n  formatSortBy,\n  formatFilterBy,\n  useFilterState,\n  useLocalFilterState,\n} from \"./utils\";\nimport { APISDK } from \"registry/fns/sdk\";\n\nimport { DefaultHeaderColumnRenderer } from \"./components\";\nimport { DataGrid } from \"./grid\";\nimport { filtersRegistration } from \"./components/filters\";\n\nexport const GirdController: FC<{\n  metaData: GridMetaDataType;\n  gridCode: string;\n}> = ({ metaData, gridCode }) => {\n  const columns = useMemo(() => metaData.columns, []);\n  const defaultColumn = useMemo(\n    () => ({\n      width: 150,\n      maxWidth: 400,\n      minWidth: 50,\n      Header: DefaultHeaderColumnRenderer,\n    }),\n    []\n  );\n  const getRowId = useCallback(\n    (row) => row[metaData.gridConfig.rowIdColumn],\n    []\n  );\n  const filterTypes = useMemo(() => filtersRegistration, []);\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const fetchIdCounterRef = useRef(0);\n  const lastAppliedFilterRef = useRef(null);\n  const resetPaginationAndSorting = useRef(false);\n  const resetTableFilters = useRef(false);\n  const headerFilterManager = useFilterState();\n  const localFilterManager = useLocalFilterState();\n  const { state: headerFilterState } = headerFilterManager;\n\n  useEffect(() => {\n    resetPaginationAndSorting.current = false;\n    resetTableFilters.current = false;\n  }, [data]);\n\n  const fetchData = useCallback(\n    ({ pageSize, pageIndex, sortBy, filters }) => {\n      if (lastAppliedFilterRef.current !== filters) {\n        resetPaginationAndSorting.current = true;\n      }\n      const currentFetchId = ++fetchIdCounterRef.current;\n      setLoading(true);\n      const startRow = Number(pageSize) * Number(pageIndex) + 1;\n      const endRow = Number(startRow) + Number(pageSize) - 1;\n      let localFilters = formatFilterBy(filters);\n      let headerFilters: any[] = [];\n      if (headerFilterState !== null) {\n        headerFilters = Object.values(headerFilterState);\n      }\n      let combinedFilters = [...headerFilters, ...localFilters];\n\n      APISDK.fetchGridData(\n        gridCode,\n        startRow,\n        endRow,\n        formatSortBy(sortBy),\n        combinedFilters\n      ).then((result) => {\n        if (currentFetchId === fetchIdCounterRef.current) {\n          if (result.status === \"success\") {\n            setData(result?.data?.rows ?? []);\n            setPageCount(\n              Math.ceil(\n                Number(result?.data?.total_count ?? 1) / Number(pageSize)\n              )\n            );\n            setTotalRecords(Number(result?.data?.total_count ?? 1));\n            setLoading(false);\n            lastAppliedFilterRef.current = filters;\n          } else {\n            setLoading(false);\n          }\n        }\n      });\n    },\n    [setTotalRecords, setLoading, setData, headerFilterState]\n  );\n\n  return (\n    <DataGrid\n      gridCode={gridCode}\n      label={metaData.gridConfig?.gridLabel ?? \"NO_NAME\"}\n      dense={true}\n      headerFilters={metaData.headerFilters ?? []}\n      headerFilterManager={headerFilterManager}\n      localFilterManager={localFilterManager}\n      getRowId={getRowId}\n      columns={columns}\n      filterTypes={filterTypes}\n      defaultColumn={defaultColumn}\n      defaultHiddenColumns={metaData.hiddenColumns}\n      loading={loading}\n      data={data}\n      onFetchData={fetchData}\n      resetPaginationAndSorting={resetPaginationAndSorting.current}\n      resetFilters={resetTableFilters.current}\n      pageCount={pageCount}\n      totalRecords={totalRecords}\n      pageSizes={metaData.gridConfig?.pageSize}\n      defaultPageSize={metaData.gridConfig?.defaultPageSize}\n    />\n  );\n};\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\sideBarNavigation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx",["1021","1022"],"import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\nimport { useStyles } from \"./style\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\n\r\nexport const Equifax = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n\r\n  let score = 750;\r\n  return (\r\n    <Box\r\n      className={classes.wrapper}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box className={classes.center} mt={3} mb={3}>\r\n        <h3 className=\"theme-color2\">\r\n          <b>Your Current EQUIFAX Score is</b>\r\n        </h3>\r\n        <ReactSpeedometer\r\n          value={score}\r\n          minValue={300}\r\n          maxValue={900}\r\n          segments={4}\r\n          currentValueText={`${score}`}\r\n          customSegmentLabels={[\r\n            {\r\n              text: \"Poor\",\r\n              color: \"#e53834\",\r\n            },\r\n            {\r\n              text: \"Average\",\r\n              color: \"#ef6c00\",\r\n            },\r\n            {\r\n              text: \"Good\",\r\n              color: \"#cddc39\",\r\n            },\r\n            {\r\n              text: \"Excellent\",\r\n              color: \"#8cc24a\",\r\n            },\r\n          ]}\r\n        />\r\n      </Box>\r\n      <Box\r\n        className=\"links\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"row\"\r\n        mb={3}\r\n      >\r\n        <Button\r\n          className={classes.continueBtn}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx",["1023","1024"],"import { useEffect, useReducer } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport loaderGif from \"assets/images/loader.gif\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useStyles } from \"./style\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\n\r\nconst initialState = {\r\n  currentScreen: \"welcomeOTPVerification\",\r\n  otp: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  transactionID: \"\",\r\n  verificationSuccessful: false,\r\n  maskedMobileNo: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"updateOTP\":\r\n      return {\r\n        ...state,\r\n        otp: action?.payload,\r\n      };\r\n    case \"startOTPRequest\":\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: true,\r\n      };\r\n    case \"endOTPRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        maskedMobileNo: action?.payload?.mobileNo,\r\n        transactionID: action?.payload?.transactionId,\r\n        error: \"\",\r\n      };\r\n    case \"endOTPRequestFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"startOTPVerification\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: true,\r\n      };\r\n    case \"endOTPVerificationSuccess\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    case \"endOTPVerificationFailure\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const OtpVerificationPage = ({}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n    fallbackURL,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n  const trimmedOTP = state.otp.trim();\r\n  const trimmedOTPLengthValid = trimmedOTP.length === 6;\r\n  const trimmedOTPLengthMsg = \"Otp must be of 6 characters long\";\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"startOTPRequest\",\r\n    });\r\n    if (flowExist) {\r\n      APISDK.requestOTP(refID).then((result) => {\r\n        if (result.status === \"success\") {\r\n          const { mobileNo, transactionId } = result.data;\r\n          dispatch({\r\n            type: \"endOTPRequestSuccess\",\r\n            payload: {\r\n              mobileNo,\r\n              transactionId,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"endOTPRequestFailure\",\r\n            payload: {\r\n              error: \"An unknown error occured, kindly reach raatnafin team\",\r\n            },\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      navigate(fallbackURL);\r\n    }\r\n  }, []);\r\n\r\n  const verifyOTP = () => {\r\n    dispatch({\r\n      type: \"startOTPVerification\",\r\n    });\r\n    if (!Boolean(trimmedOTP)) {\r\n      dispatch({\r\n        type: \"endOTPVerificationFailure\",\r\n        payload: {\r\n          error: \"This is a required Field\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (!trimmedOTPLengthValid) {\r\n      dispatch({\r\n        type: \"endOTPVerificationFailure\",\r\n        payload: {\r\n          error: trimmedOTPLengthMsg,\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: \"startOTPVerification\",\r\n    });\r\n    APISDK.verifyOTP(refID, state.transactionID, trimmedOTP).then((result) => {\r\n      if (result.status === \"success\") {\r\n        dispatch({\r\n          type: \"endOTPVerificationSuccess\",\r\n          payload: {\r\n            error: \"\",\r\n          },\r\n        });\r\n        navigate(nextURL, nextFlowNavigationProps);\r\n      } else {\r\n        const { message } = result.data;\r\n        dispatch({\r\n          type: \"endOTPVerificationFailure\",\r\n          payload: {\r\n            error: message ?? \"An Unknown error occured\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  let result = (\r\n    <>\r\n      <Typography>Verify OTP </Typography>\r\n      {state.currentScreen === \"welcomeOTPVerification\" ||\r\n      state.maskedMobileNo.trim() !== \"\" ? (\r\n        <>\r\n          <Typography>\r\n            OTP has been sent to your mobile number ending with:\r\n            {state.maskedMobileNo}\r\n          </Typography>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            type=\"email\"\r\n            name=\"otp\"\r\n            fullWidth\r\n            value={state.otp}\r\n            error={Boolean(state.error)}\r\n            helperText={Boolean(state.error) ? state.error : null}\r\n            onChange={(e) =>\r\n              dispatch({\r\n                type: \"updateOTP\",\r\n                payload: e.target.value,\r\n              })\r\n            }\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              inputComponent: InputMaskCustom,\r\n              inputProps: {\r\n                MaskProps: {\r\n                  mask: \"0 0 0 0 0 0\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <Button\r\n            onClick={verifyOTP}\r\n            color=\"primary\"\r\n            endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            Verify\r\n          </Button>\r\n        </>\r\n      ) : state.loading === false && Boolean(state.error) ? (\r\n        <Typography>{state.error}</Typography>\r\n      ) : (\r\n        <img\r\n          src={loaderGif}\r\n          style={{ justifyContent: \"center\", margin: \"auto\" }}\r\n          alt=\"loader\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <div className={classes.paper2}>{result}</div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx",["1025","1026","1027"],"import { Fragment, useEffect, useRef, useReducer } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\n\r\nconst initialState = {\r\n  currentScreen: \"welcomeView\",\r\n  loading: false,\r\n  error: \"\",\r\n  verificationSuccessful: false,\r\n  aadharTransactionID: \"\",\r\n  aadharAuthenticationURL: \"\",\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"startAadharRequest\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        error: \"\",\r\n        loading: true,\r\n      };\r\n    case \"endAadharRequestFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"endAadharRequestSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"addharIFrameView\",\r\n        aadharTransactionID: action?.payload?.transactionId,\r\n        aadharAuthenticationURL: action?.payload?.url,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    }\r\n    case \"aadharValidationSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: true,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"aadharValidationFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst timeoutDuration = 5 * 60 * 1000;\r\nconst poolingInterval = 10 * 1000;\r\n\r\nexport const AadharVerification = () => {\r\n  //if needed move this variables to REf state (needs investigation)\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const fetchRequestID = useRef(0);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n    fallbackURL,\r\n  ] = useNavigationFlow(location, \"./thankyou\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    };\r\n  }, []);\r\n\r\n  const handleStartAadharRequest = async () => {\r\n    dispatch({\r\n      type: \"startAadharRequest\",\r\n    });\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(refID);\r\n      if (result.status === \"success\") {\r\n        const { transactionId, url } = result.data;\r\n        dispatch({\r\n          type: \"endAadharRequestSuccess\",\r\n          payload: {\r\n            transactionId,\r\n            url,\r\n          },\r\n        });\r\n        startPooling(transactionId);\r\n      } else {\r\n        dispatch({\r\n          type: \"endAadharRequestFailure\",\r\n          payload: {\r\n            error: \"Couldnt Initiate Aadhar Request an internal error occured\",\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"endAadharRequestFailure\",\r\n        payload: {\r\n          error:\r\n            err?.message?.() ??\r\n            \"Couldnt Initiate Aadhar Request an internal error occured \",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const startPooling = (aadharTransactionID) => {\r\n    intervalRef.current = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(aadharTransactionID).then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === \"success\") {\r\n          if (resp.data.requestStatus === \"failed\") {\r\n            dispatch({\r\n              type: \"aadharValidationFailure\",\r\n              payload: {\r\n                error: \"Failed to validate aadhar\",\r\n              },\r\n            });\r\n          } else if (resp.data.requestStatus === \"success\") {\r\n            dispatch({\r\n              type: \"aadharValidationSuccess\",\r\n              payload: {\r\n                error:\r\n                  \"Congratulations youve successfully verified your aadhar\",\r\n              },\r\n            });\r\n            clearInterval(intervalRef.current as NodeJS.Timeout);\r\n            clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeoutRef.current = setTimeout(() => {\r\n      dispatch({\r\n        type: \"aadharValidationFailure\",\r\n        payload: {\r\n          error: \"Validation timed out\",\r\n        },\r\n      });\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {state.currentScreen === \"welcomeView\" ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ?</span>\r\n          <button\r\n            disabled={state.loading ? true : false}\r\n            onClick={() => {\r\n              handleStartAadharRequest();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              navigate(nextURL, nextFlowNavigationProps);\r\n            }}\r\n          >\r\n            No\r\n          </button>\r\n          {Boolean(state.error) ? (\r\n            <Alert severity={\"error\"}>{state.error}</Alert>\r\n          ) : null}\r\n        </div>\r\n      ) : state.currentScreen === \"addharIFrameView\" ? (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={state.aadharAuthenticationURL}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n        />\r\n      ) : state.currentScreen === \"resultView\" ? (\r\n        <Alert severity={state.verificationSuccessful ? \"success\" : \"error\"}>\r\n          {state.error}\r\n        </Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx",["1028"],"import React, { useState, useReducer, Fragment } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginImg from \"assets/images/login.svg\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { useStyles } from \"./style\";\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [time, setTime] = useState(0);\r\n  const [userPhoneNumberVerified, setUserPhoneNumberVerified] = useState(\"\");\r\n\r\n  const initialState = {\r\n    currentScreen: \"initiateLoginProcessWithPasswordAndOtp\",\r\n    apiOTPId: \"\",\r\n    loading: false,\r\n    apiResult: \"\",\r\n    apiResultStatus: \"\",\r\n    phoneNumber: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"fields\":\r\n        return {\r\n          ...state,\r\n          [action.fieldName]: action.payload,\r\n        };\r\n      case \"startInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"initiateLoginProcessWithOtp\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"verifyOtp\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n          apiOTPId: action.apiOTPId,\r\n        };\r\n      case \"initiateLoginWithPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"loginWithPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"InitiateCreateNewPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"createNewPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"endInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const expiryTime = 60;\r\n\r\n  const requestOtp = async () => {\r\n    if (state.phoneNumber !== \"\" && state.phoneNumber.length === 10) {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.requestOTP(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          dispatch({\r\n            type: \"initiateLoginProcessWithOtp\",\r\n            currentScreen: \"verifyOtp\",\r\n            apiOTPId: result?.data?.id,\r\n            apiResult: result?.status,\r\n          });\r\n          // setexpiryOtpTime(result?.data?.sdatetime);\r\n          displayIntervale();\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const displayIntervale = () => {\r\n    const timerId = setInterval(() => {\r\n      setTime((time) => {\r\n        if (time === expiryTime) {\r\n          clearInterval(timerId);\r\n          return time;\r\n        } else {\r\n          return time + 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const formatTime = (time) =>\r\n    `${String(Math.floor(time / 60)).padStart(2, \"0\")}:${String(\r\n      time % 60\r\n    ).padStart(2, \"0\")}`;\r\n\r\n  const Timer = ({ time }) => {\r\n    const timeRemain = expiryTime - (time % expiryTime);\r\n    return (\r\n      <>\r\n        <div className={classes.OTPTimer}>\r\n          {time === expiryTime ? (\r\n            <div onClick={requestOtp} className={classes.resendLink}>\r\n              Resend OTP\r\n            </div>\r\n          ) : (\r\n            formatTime(timeRemain)\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      let sdatetime = \"20200915110135\";\r\n      const result = await APISDK.verifyOTP(\r\n        state.apiOTPId,\r\n        state.otp,\r\n        sdatetime\r\n      );\r\n      if (result.status === \"success\") {\r\n        if (userPhoneNumberVerified === \"Yes\") {\r\n          dispatch({\r\n            type: \"InitiateCreateNewPassword\",\r\n            currentScreen: \"createNewPassword\",\r\n            apiResult: result.status,\r\n            apiResultStatus: result?.data?.message,\r\n          });\r\n        } else {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: result?.data?.error_msg,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n        apiResultStatus: e,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    dispatch({\r\n      type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n    });\r\n    if (\r\n      state.newPassword !== \"\" &&\r\n      state.confirmNewPassword !== \"\" &&\r\n      state.newPassword === state.confirmNewPassword\r\n    ) {\r\n      try {\r\n        const result = await APISDK.updateUserPassword(\r\n          state.confirmNewPassword,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkUserNumberAndPasswordExist = async () => {\r\n    if (state.apiResultStatus === \"\" && state.phoneNumber.length === 10) {\r\n      try {\r\n        dispatch({\r\n          type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n        });\r\n        const result = await APISDK.checkPhoneNumberExists(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"N\"\r\n          ) {\r\n            setUserPhoneNumberVerified(\"Yes\");\r\n            requestOtp();\r\n          } else if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"Y\"\r\n          ) {\r\n            dispatch({\r\n              type: \"initiateLoginWithPassword\",\r\n              currentScreen: \"loginWithPassword\",\r\n              apiResult: result.status,\r\n              apiResultStatus: result?.data?.message,\r\n            });\r\n          }\r\n        } else {\r\n          if (result?.data?.error_cd === \"-999\") {\r\n            dispatch({\r\n              type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n              apiResultStatus: result?.data?.error_msg,\r\n            });\r\n          }\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const verifyPwd = async () => {\r\n    if (state.password.length !== 0 || state.password !== \"\") {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.handleverifyPwd(\r\n          state.password,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginLeft}\r\n        >\r\n          <img alt=\"\" src={loginImg} className={classes.loginImg} />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginRight}\r\n        >\r\n          <h2>Cutomer Login</h2>\r\n          <div className=\"text\">\r\n            Login with your registered mobile number to access your Ratnaafin\r\n            account.\r\n          </div>\r\n\r\n          {state.currentScreen === \"initiateLoginProcessWithPasswordAndOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Mobile Number\"\r\n                placeholder=\"Enter mobile number\"\r\n                fullWidth\r\n                className=\"mobileNumber\"\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={state.phoneNumber}\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"phoneNumber\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0000000000\",\r\n                    },\r\n                  },\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">+91</InputAdornment>\r\n                  ),\r\n                }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={requestOtp}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With OTP\r\n              </Button>\r\n              <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n                <div className=\"text text-center\">Or</div>\r\n              </Box>\r\n              <Button\r\n                onClick={checkUserNumberAndPasswordExist}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With Password\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"verifyOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"OTP\"\r\n                placeholder=\"OTP for verification\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                type=\"email\"\r\n                name=\"otp\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"otp\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.otp}\r\n                inputProps={{ maxLength: 6 }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0 0 0 0 0 0\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              <Timer time={time} />\r\n              <Button\r\n                disabled={state.otp.length !== 6 ? true : false}\r\n                onClick={verifyOtp}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"createNewPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Create Password\"\r\n                placeholder=\"Create password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"newPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.newPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"confirmNewPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"confirmNewPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.confirmNewPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={updateNewPassword}\r\n                disabled={\r\n                  state.newPassword !== \"\" || state.confirmNewPassword !== \"\"\r\n                    ? false\r\n                    : true\r\n                }\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"loginWithPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Password for verification\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"password\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.password}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={verifyPwd}\r\n                disabled={state.password !== \"\" ? false : true}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\confirmationBox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts",[],["1029","1030"],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx",["1031","1032"],"import { FC, useState, useRef, Suspense, cloneElement, Fragment } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useForm, SubmitFnType, formFieldsExcludedAtom } from \"packages/form\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GroupWiseRenderedFieldsType, FormRenderConfigType } from \"./types\";\r\nimport { useStyles } from \"./style\";\r\nimport { MyStepper } from \"./stepperForm\";\r\nimport { MyTabs } from \"./tabsForm\";\r\n\r\ninterface FormProps {\r\n  fields: GroupWiseRenderedFieldsType;\r\n  formRenderConfig: FormRenderConfigType;\r\n  formDisplayName: string;\r\n  formName: string;\r\n  submitFn: SubmitFnType;\r\n}\r\n\r\nexport const GroupedForm: FC<FormProps> = ({\r\n  fields,\r\n  formRenderConfig,\r\n  formDisplayName,\r\n  formName,\r\n  submitFn,\r\n}) => {\r\n  const defaultGroupName = \"DefaultGroup\";\r\n  const excludedFields = useRecoilValue(formFieldsExcludedAtom(formName));\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const { handleSubmit, handleSubmitPartial } = useForm({\r\n    onSubmit: submitFn,\r\n  });\r\n  const fieldGroups = useRef<string[]>(Object.keys(fields).sort());\r\n  const fieldGroupsActiveStatus = fieldGroups.current.map((one) => {\r\n    let groupName = defaultGroupName;\r\n    if (typeof formRenderConfig.groups === \"object\") {\r\n      groupName = formRenderConfig.groups[one];\r\n    }\r\n    return {\r\n      index: one,\r\n      name: groupName,\r\n      status: isGroupExcluded(formName, fields[one].fieldNames, excludedFields),\r\n    };\r\n  });\r\n\r\n  const handleNext = async () => {\r\n    if (!isLastActiveStep(activeStep, fieldGroupsActiveStatus)) {\r\n      const currentStep = fieldGroupsActiveStatus[activeStep];\r\n      const currentFieldsToValidate = fields[currentStep.index].fieldNames;\r\n      let hasError = await handleSubmitPartial(currentFieldsToValidate);\r\n      //In debug mode allow to move to next step without validating\r\n      if (process.env.REACT_APP_DEBUG_MODE === \"true\") {\r\n        hasError = false;\r\n      }\r\n      if (!hasError) {\r\n        const nextStep = getNextActiveStep(activeStep, fieldGroupsActiveStatus);\r\n        setActiveStep(nextStep);\r\n      }\r\n    }\r\n  };\r\n  const handlePrev = () => {\r\n    if (activeStep > 0) {\r\n      let step = getPrevActiveStep(activeStep, fieldGroupsActiveStatus);\r\n      setActiveStep(step);\r\n    }\r\n  };\r\n\r\n  const steps = fieldGroups.current.map((one, index) => {\r\n    const current = fields[one];\r\n    current.fields[0] = cloneElement(current.fields[0], {\r\n      isFieldFocused: index === activeStep ? true : false,\r\n    });\r\n    const hideMe = index !== Number(activeStep) ? { display: \"none\" } : {};\r\n    return (\r\n      <Grid\r\n        key={one}\r\n        container={true}\r\n        spacing={formRenderConfig?.gridConfig?.container?.spacing ?? 2}\r\n        direction={formRenderConfig?.gridConfig?.container?.direction ?? \"row\"}\r\n        style={hideMe}\r\n      >\r\n        {current.fields}\r\n      </Grid>\r\n    );\r\n  });\r\n  const filteredFieldGroups = fieldGroupsActiveStatus.filter(\r\n    (one) => one.status\r\n  );\r\n  const CURRENT_COMPONENT =\r\n    formRenderConfig.renderType === \"stepper\" ? MyStepper : MyTabs;\r\n\r\n  return (\r\n    <CURRENT_COMPONENT\r\n      key={formRenderConfig.renderType}\r\n      classes={classes}\r\n      formDisplayName={formDisplayName}\r\n      activeStep={activeStep}\r\n      filteredFieldGroups={filteredFieldGroups}\r\n      formRenderConfig={formRenderConfig}\r\n      defaultGroupName={defaultGroupName}\r\n      fieldGroups={fieldGroups}\r\n      fieldGroupsActiveStatus={fieldGroupsActiveStatus}\r\n      steps={steps}\r\n      handlePrev={handlePrev}\r\n      handleNext={handleNext}\r\n      handleSubmit={handleSubmit}\r\n      isLastActiveStep={isLastActiveStep}\r\n      setActiveStep={setActiveStep}\r\n    />\r\n  );\r\n};\r\n\r\nconst isGroupExcluded = (\r\n  formName: string,\r\n  currentGroupFields: string[],\r\n  excludedFields: string[]\r\n) => {\r\n  const remaningFields = currentGroupFields.filter((fieldName) => {\r\n    const fullFieldName = `${formName}/${fieldName}`;\r\n    return excludedFields.indexOf(fullFieldName) >= 0 ? false : true;\r\n  });\r\n  if (remaningFields.length > 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getNextActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  for (let i = currentStep + 1; i < fieldGroupsActiveStatus.length; i++) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return currentStep;\r\n};\r\n\r\nconst getPrevActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  for (let i = currentStep - 1; i >= 0; i--) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      return i;\r\n    }\r\n  }\r\n  return currentStep;\r\n};\r\n\r\nconst isLastActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  let finalStep = currentStep;\r\n  for (let i = currentStep + 1; i < fieldGroupsActiveStatus.length; i++) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      finalStep = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return finalStep === currentStep;\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx",["1033"],"import { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { FilterContainer } from \"./filterContainer\";\nimport { StyledTextField, StyledMenuItem } from \"./styledComponents\";\nimport { APISDK } from \"registry/fns/sdk\";\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n\nexport const OptionsFilter = (props) => {\n  const {\n    column: {\n      filterValue,\n      setFilter,\n      filterComponentProps: { selectType },\n      id,\n    },\n    headerFilterState,\n    localFilterManager,\n    gridCode,\n    handleClose,\n  } = props;\n  const isMultiple = selectType === \"multiple\" ? true : false;\n  const [loading, setLoading] = useState(false);\n  const [_options, setOptions] = useState(\n    localFilterManager.getFilterState(id)?.options ?? []\n  );\n  const defaultValue = Boolean(filterValue?.value)\n    ? filterValue?.value\n    : isMultiple\n    ? []\n    : \"\";\n\n  const [value, setValue] = useState<string | string[]>(defaultValue);\n  useEffect(() => {\n    if (!Boolean(localFilterManager.getFilterState(id))) {\n      setLoading(true);\n      const verifiedHeaderFilter =\n        typeof headerFilterState === \"object\" && headerFilterState !== null\n          ? Object.values(headerFilterState)\n          : [];\n      APISDK.fetchGridColumnFilterProps(gridCode, {\n        accessor: id,\n        result_type: \"getGroups\",\n        filter_conditions: verifiedHeaderFilter,\n      }).then((result) => {\n        if (result.status === \"success\") {\n          localFilterManager.addFilterState(id, {\n            options: result.data?.groups,\n          });\n          setOptions(result.data?.groups ?? []);\n          setLoading(false);\n        } else {\n          setLoading(false);\n          setOptions([{ label: \"Couldnt load data\", value: \"\" }]);\n        }\n      });\n    }\n  }, []);\n\n  const handleSelectChange = (event: React.ChangeEvent<any>) => {\n    setValue(event.target.value);\n  };\n\n  const applyFilter = () => {\n    setFilter({\n      condition: isMultiple ? \"in\" : \"equal\",\n      value,\n    });\n    handleClose();\n  };\n  const clearFilter = () => {\n    setFilter(\"\");\n    handleClose();\n  };\n\n  const menuItems = _options.map((menuItem, index) => {\n    return (\n      <StyledMenuItem\n        //keep button value to true else keyboard navigation for select will stop working\n        button={true}\n        key={menuItem.value ?? index}\n        value={menuItem.value}\n      >\n        {isMultiple ? (\n          <Checkbox\n            checked={\n              Boolean(isMultiple)\n                ? Array.isArray(value) && value.indexOf(menuItem.value) >= 0\n                : value === menuItem.value\n            }\n          />\n        ) : null}\n        {menuItem.label}\n      </StyledMenuItem>\n    );\n  });\n\n  return (\n    <FilterContainer applyFilter={applyFilter} clearFilter={clearFilter}>\n      {(classes) => (\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          px={2}\n          mt={2}\n        >\n          <FormControl fullWidth>\n            <StyledTextField\n              fullWidth\n              select={true}\n              value={value}\n              SelectProps={{\n                multiple: isMultiple ? true : false,\n                native: false,\n                renderValue: isMultiple\n                  ? (values: any[] | any) => {\n                      if (!Array.isArray(values)) {\n                        values = [values];\n                      }\n                      if (Array.isArray(_options)) {\n                        return _options.reduce((acc, current) => {\n                          if (values.indexOf(current.value) >= 0) {\n                            if (acc === \"\") {\n                              return current.label;\n                            } else {\n                              return `${acc},${current.label}`;\n                            }\n                          }\n                          return acc;\n                        }, \"\");\n                      }\n                      return \"\";\n                    }\n                  : undefined,\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                endAdornment: loading ? (\n                  <InputAdornment position=\"end\">\n                    <CircularProgress color=\"primary\" variant=\"indeterminate\" />\n                  </InputAdornment>\n                ) : null,\n              }}\n              onChange={handleSelectChange}\n              className={classes.multipleSelect}\n            >\n              {menuItems}\n            </StyledTextField>\n          </FormControl>\n        </Box>\n      )}\n    </FilterContainer>\n  );\n};\n\n/*\nMenuProps={{\n                PaperProps: {\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                  },\n                },\n              }}\n*/\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\tabsForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx",["1034"],"import { FC, useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useField, UseFieldHookProps } from \"packages/form\";\r\nimport { SelectProps } from \"@material-ui/core/Select\";\r\nimport { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { TextField } from \"components/styledComponent\";\r\nimport MenuItem, { MenuItemProps } from \"@material-ui/core/MenuItem\";\r\nimport Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport CircularProgress, {\r\n  CircularProgressProps,\r\n} from \"@material-ui/core/CircularProgress\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { Checkbox } from \"components/styledComponent/checkbox\";\r\nimport { OptionsProps, Merge, dependentOptionsFn } from \"../types\";\r\nimport { getLabelFromValues, useOptionsFetcher } from \"../utils\";\r\n\r\ninterface extendedFieldProps extends UseFieldHookProps {\r\n  options?: OptionsProps[] | dependentOptionsFn;\r\n  multiple?: boolean;\r\n  showCheckbox?: boolean;\r\n}\r\ntype MySelectProps = Merge<TextFieldProps, extendedFieldProps>;\r\n\r\ninterface MySelectExtendedProps {\r\n  MenuItemProps?: MenuItemProps;\r\n  SelectProps?: SelectProps;\r\n  CircularProgressProps?: CircularProgressProps;\r\n  GridProps?: GridProps;\r\n  enableGrid: boolean;\r\n}\r\n\r\nexport type MySelectAllProps = Merge<MySelectProps, MySelectExtendedProps>;\r\n\r\nconst MySelect: FC<MySelectAllProps> = ({\r\n  name: fieldName,\r\n  validate,\r\n  validationRun,\r\n  shouldExclude,\r\n  isReadOnly,\r\n  postValidationSetCrossFieldValues,\r\n  runPostValidationHookAlways,\r\n  dependentFields,\r\n  fieldKey: fieldID,\r\n  options,\r\n  MenuItemProps,\r\n  SelectProps,\r\n  GridProps,\r\n  enableGrid,\r\n  multiple,\r\n  showCheckbox,\r\n  //@ts-ignore\r\n  isFieldFocused,\r\n  InputProps,\r\n  inputProps,\r\n  CircularProgressProps,\r\n  runValidationOnDependentFieldsChange,\r\n  ...others\r\n}) => {\r\n  const {\r\n    value,\r\n    error,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    runValidation,\r\n    validationRunning,\r\n    isSubmitting,\r\n    fieldKey,\r\n    name,\r\n    dependentValues,\r\n    excluded,\r\n    incomingMessage,\r\n    whenToRunValidation,\r\n    readOnly,\r\n    formState,\r\n  } = useField({\r\n    name: fieldName,\r\n    fieldKey: fieldID,\r\n    dependentFields,\r\n    validate,\r\n    validationRun,\r\n    runPostValidationHookAlways,\r\n    postValidationSetCrossFieldValues,\r\n    isReadOnly,\r\n    shouldExclude,\r\n    runValidationOnDependentFieldsChange,\r\n  });\r\n  const focusRef = useRef();\r\n  const [_options, setOptions] = useState<OptionsProps[]>([]);\r\n  useEffect(() => {\r\n    if (isFieldFocused) {\r\n      setTimeout(() => {\r\n        //@ts-ignore\r\n        focusRef?.current?.focus?.();\r\n      }, 1);\r\n    }\r\n  }, [isFieldFocused]);\r\n  const getLabelFromValuesForOptions = useCallback(\r\n    (values) => getLabelFromValues(_options)(values),\r\n    [_options]\r\n  );\r\n\r\n  const handleChangeInterceptor = useCallback(\r\n    (e) => {\r\n      const value = typeof e === \"object\" ? e?.target?.value ?? \"\" : e;\r\n      let result = getLabelFromValuesForOptions(value);\r\n      result = multiple ? result : result[0];\r\n      handleChange(e, result as any);\r\n    },\r\n    [handleChange, getLabelFromValuesForOptions]\r\n  );\r\n  const { loadingOptions } = useOptionsFetcher(\r\n    formState,\r\n    options,\r\n    setOptions,\r\n    handleChangeInterceptor,\r\n    dependentValues,\r\n    incomingMessage,\r\n    runValidation,\r\n    whenToRunValidation\r\n  );\r\n\r\n  //dont move it to top it can mess up with hooks calling mechanism, if there is another\r\n  //hook added move this below all hook calls\r\n  if (excluded) {\r\n    return null;\r\n  }\r\n  const isError = touched && (error ?? \"\") !== \"\";\r\n  const menuItems = _options.map((menuItem, index) => {\r\n    return (\r\n      <MenuItem\r\n        {...MenuItemProps}\r\n        //keep button value to true else keyboard navigation for select will stop working\r\n        button={true}\r\n        key={menuItem.value ?? index}\r\n        value={menuItem.value}\r\n        disabled={menuItem.disabled}\r\n      >\r\n        {showCheckbox ? (\r\n          <Checkbox\r\n            checked={\r\n              Boolean(multiple)\r\n                ? Array.isArray(value) && value.indexOf(menuItem.value) >= 0\r\n                : value === menuItem.value\r\n            }\r\n          />\r\n        ) : null}\r\n        {menuItem.label}\r\n      </MenuItem>\r\n    );\r\n  });\r\n  const result = (\r\n    <TextField\r\n      {...others}\r\n      select={true}\r\n      key={fieldKey}\r\n      id={fieldKey}\r\n      name={name}\r\n      value={multiple && !Array.isArray(value) ? [value] : value}\r\n      error={isError}\r\n      helperText={isError ? error : null}\r\n      onChange={handleChangeInterceptor}\r\n      onBlur={handleBlur}\r\n      disabled={isSubmitting}\r\n      SelectProps={{\r\n        ...SelectProps,\r\n        native: false,\r\n        multiple: multiple,\r\n        renderValue: multiple ? getLabelFromValues(_options, true) : undefined,\r\n        //@ts-ignore\r\n      }}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      inputRef={focusRef}\r\n      InputProps={{\r\n        endAdornment:\r\n          validationRunning || loadingOptions ? (\r\n            <InputAdornment position=\"end\">\r\n              <CircularProgress\r\n                color=\"primary\"\r\n                variant=\"indeterminate\"\r\n                {...CircularProgressProps}\r\n              />\r\n            </InputAdornment>\r\n          ) : null,\r\n        ...InputProps,\r\n      }}\r\n      inputProps={{\r\n        readOnly: readOnly,\r\n        tabIndex: readOnly ? -1 : undefined,\r\n        ...inputProps,\r\n      }}\r\n    >\r\n      {menuItems}\r\n    </TextField>\r\n  );\r\n  if (Boolean(enableGrid)) {\r\n    return <Grid {...GridProps}>{result}</Grid>;\r\n  } else {\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default MySelect;\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx",["1035"],"import { Editor } from \"@tinymce/tinymce-react\";\r\n\r\nexport const TextEditor = () => {\r\n  const handleEditorChange = (content, editor) => {};\r\n\r\n  return (\r\n    <Editor\r\n      initialValue=\"<p>This is the initial content of the editor</p>\"\r\n      apiKey=\"pc8b933js2e6hly9nkp1ha2nuyak0anqgq47c31y2kontd64\"\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          \"advlist autolink lists link image charmap print preview anchor\",\r\n          \"searchreplace visualblocks code fullscreen\",\r\n          \"insertdatetime media table paste code help wordcount\",\r\n        ],\r\n        toolbar:\r\n          \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | insertdatetime | table | help\",\r\n      }}\r\n      onEditorChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx",["1036"],"import { FC, useEffect, useRef, useState, useCallback, Fragment } from \"react\";\r\nimport { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport CircularProgress, {\r\n  CircularProgressProps,\r\n} from \"@material-ui/core/CircularProgress\";\r\nimport Autocomplete, {\r\n  AutocompleteProps,\r\n  createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\nimport { CreateFilterOptionsConfig } from \"@material-ui/lab/useAutocomplete\";\r\nimport { Checkbox } from \"components/styledComponent/checkbox\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport { useField, UseFieldHookProps } from \"packages/form\";\r\nimport { Merge, OptionsProps, dependentOptionsFn } from \"../types\";\r\nimport Chip, { ChipProps } from \"@material-ui/core/Chip\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport { useOptionsFetcher } from \"../utils\";\r\n\r\n//will use it if there is a neeed for advance sorter\r\n//import matchSorter from \"match-sorter\";\r\n\r\ninterface AutoCompleteExtendedProps {\r\n  enableGrid: boolean;\r\n  showCheckbox: boolean;\r\n  GridProps?: GridProps;\r\n  CircularProgressProps?: CircularProgressProps;\r\n  TextFieldProps?: TextFieldProps;\r\n  ChipProps?: ChipProps;\r\n  CreateFilterOptionsConfig?: CreateFilterOptionsConfig<OptionsProps>;\r\n  options?: OptionsProps[] | dependentOptionsFn;\r\n  label?: string;\r\n  placeholder?: string;\r\n  required?: boolean;\r\n}\r\n\r\ntype MyAutocompleteProps = Merge<\r\n  AutocompleteProps<OptionsProps, true, true, true>,\r\n  AutoCompleteExtendedProps\r\n>;\r\n\r\nexport type MyAllAutocompleteProps = Merge<\r\n  MyAutocompleteProps,\r\n  UseFieldHookProps\r\n>;\r\n\r\nconst getOptionLabel = (option: OptionsProps) => option?.label ?? \"\";\r\n\r\nconst MyAutocomplete: FC<MyAllAutocompleteProps> = ({\r\n  name: fieldName,\r\n  validate,\r\n  validationRun,\r\n  shouldExclude,\r\n  isReadOnly,\r\n  postValidationSetCrossFieldValues,\r\n  runPostValidationHookAlways,\r\n  dependentFields,\r\n  fieldKey: fieldID,\r\n  options,\r\n  GridProps,\r\n  enableGrid,\r\n  multiple,\r\n  disableClearable,\r\n  freeSolo,\r\n  TextFieldProps,\r\n  CircularProgressProps,\r\n  ChipProps,\r\n  //@ts-ignore\r\n  isFieldFocused,\r\n  showCheckbox,\r\n  CreateFilterOptionsConfig,\r\n  runValidationOnDependentFieldsChange,\r\n  label,\r\n  placeholder,\r\n  limitTags,\r\n  required,\r\n  ...others\r\n}) => {\r\n  const {\r\n    formState,\r\n    error,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    runValidation,\r\n    isSubmitting,\r\n    validationRunning,\r\n    fieldKey,\r\n    name,\r\n    dependentValues,\r\n    excluded,\r\n    incomingMessage,\r\n    whenToRunValidation,\r\n  } = useField({\r\n    name: fieldName,\r\n    fieldKey: fieldID,\r\n    dependentFields,\r\n    validate,\r\n    validationRun,\r\n    runPostValidationHookAlways,\r\n    postValidationSetCrossFieldValues,\r\n    isReadOnly,\r\n    shouldExclude,\r\n    runValidationOnDependentFieldsChange,\r\n  });\r\n\r\n  const focusRef = useRef();\r\n  useEffect(() => {\r\n    if (isFieldFocused) {\r\n      setTimeout(() => {\r\n        //@ts-ignore\r\n        focusRef?.current?.focus?.();\r\n      }, 1);\r\n    }\r\n  }, [isFieldFocused]);\r\n\r\n  const [_options, setOptions] = useState<OptionsProps[]>([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const { loadingOptions } = useOptionsFetcher(\r\n    formState,\r\n    options,\r\n    setOptions,\r\n    handleChange,\r\n    dependentValues,\r\n    incomingMessage,\r\n    runValidation,\r\n    whenToRunValidation\r\n  );\r\n\r\n  //dont move it to top it can mess up with hooks calling mechanism, if there is another\r\n  //hook added move this below all hook calls\r\n  if (excluded) {\r\n    return null;\r\n  }\r\n  const isError = touched && (error ?? \"\") !== \"\";\r\n  const result = (\r\n    <Autocomplete\r\n      {...others}\r\n      limitTags={limitTags ?? 2}\r\n      key={fieldKey}\r\n      multiple={multiple}\r\n      disableClearable={disableClearable}\r\n      freeSolo={freeSolo}\r\n      options={_options}\r\n      getOptionLabel={getOptionLabel}\r\n      onChange={(_, value) => {\r\n        if (!Array.isArray(value)) {\r\n          value = [value];\r\n        }\r\n        value = value.map((one) => {\r\n          if (typeof one === \"object\") {\r\n            return getOptionLabel(one);\r\n          }\r\n          return one;\r\n        });\r\n        handleChange(value);\r\n      }}\r\n      onBlur={handleBlur}\r\n      disabled={isSubmitting}\r\n      filterOptions={\r\n        Boolean(CreateFilterOptionsConfig) &&\r\n        typeof CreateFilterOptionsConfig === \"object\"\r\n          ? createFilterOptions(CreateFilterOptionsConfig)\r\n          : undefined\r\n      }\r\n      renderTags={(value, getTagProps) => {\r\n        return value.map((option, index) => {\r\n          if (typeof option === \"string\") {\r\n            return (\r\n              <Chip\r\n                key={option}\r\n                variant=\"outlined\"\r\n                {...ChipProps}\r\n                label={option}\r\n                {...getTagProps({ index })}\r\n              />\r\n            );\r\n          }\r\n          return (\r\n            <Chip\r\n              key={`${option.label}-${index}`}\r\n              variant=\"outlined\"\r\n              {...ChipProps}\r\n              label={option.label}\r\n              {...getTagProps({ index })}\r\n            />\r\n          );\r\n        });\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...TextFieldProps}\r\n          {...params}\r\n          name={name}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          value={inputValue}\r\n          autoComplete=\"disabled\"\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          type=\"text\"\r\n          error={isError}\r\n          required={required}\r\n          helperText={isError ? error : null}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <Fragment>\r\n                {validationRunning || loadingOptions ? (\r\n                  <CircularProgress\r\n                    color=\"primary\"\r\n                    variant=\"indeterminate\"\r\n                    {...CircularProgressProps}\r\n                  />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </Fragment>\r\n            ),\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: \"new-user-street-address\",\r\n          }}\r\n        />\r\n      )}\r\n      renderOption={(option, { selected }) => {\r\n        let label = getOptionLabel(option);\r\n        const matches = match(label, inputValue);\r\n        const parts = parse(label, matches);\r\n        const labelJSX = parts.map((part, index) => (\r\n          <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n            {part.text}\r\n          </span>\r\n        ));\r\n        return (\r\n          <Fragment>\r\n            {showCheckbox ? <Checkbox checked={selected} /> : null}\r\n            {labelJSX}\r\n          </Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n  if (Boolean(enableGrid)) {\r\n    return <Grid {...GridProps}>{result}</Grid>;\r\n  } else {\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default MyAutocomplete;\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\optionsFetcher.ts",["1037","1038"],"import { useState, useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport const useOptionsFetcher = (\r\n  formState,\r\n  options,\r\n  setOptions,\r\n  handleChangeInterceptor,\r\n  dependentValues,\r\n  incomingMessage,\r\n  runValidation,\r\n  whenToRunValidation\r\n) => {\r\n  const lastOptionsPromise = useRef<Promise<any> | null>(null);\r\n  const [loadingOptions, setLoadingOptions] = useState(false);\r\n\r\n  //formState value mutates causing this component to rerender, need to fix\r\n  //for now we wont pass form state as depedency and fix it but needs investigation why this\r\n  //is happening\r\n  const syncAsyncSetOptions = useCallback(\r\n    (options, dependentValues) => {\r\n      if (Array.isArray(options)) {\r\n        setOptions(options);\r\n      } else if (typeof options === \"function\") {\r\n        try {\r\n          setLoadingOptions(true);\r\n          setOptions([{ label: \"loading...\", value: null }]);\r\n          let currentPromise = Promise.resolve(\r\n            options(dependentValues, formState)\r\n          );\r\n          lastOptionsPromise.current = currentPromise;\r\n          currentPromise\r\n            .then((result) => {\r\n              setLoadingOptions(false);\r\n              if (lastOptionsPromise.current === currentPromise) {\r\n                if (Array.isArray(result)) {\r\n                  setOptions(result);\r\n                } else {\r\n                  setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n                  console.log(\r\n                    `expected optionsFunction in select component to return array of OptionsType but got: ${result}`\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              setLoadingOptions(false);\r\n              setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n              console.log(`error occured while fetching options`, e?.message);\r\n            });\r\n        } catch (e) {\r\n          setLoadingOptions(false);\r\n          setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n          console.log(`error occured while fetching options`, e?.message);\r\n        }\r\n      }\r\n    },\r\n    [setOptions]\r\n  );\r\n  const values = useRef({\r\n    options,\r\n    dependentValues,\r\n    syncAsyncSetOptions,\r\n    formState,\r\n  });\r\n  useEffect(() => {\r\n    syncAsyncSetOptions(options, dependentValues);\r\n  }, [options, dependentValues, syncAsyncSetOptions]);\r\n\r\n  useEffect(() => {\r\n    if (incomingMessage !== null && typeof incomingMessage === \"object\") {\r\n      const { value, options } = incomingMessage;\r\n      handleChangeInterceptor(value);\r\n      if (whenToRunValidation === \"onBlur\") {\r\n        runValidation({ value: value }, true);\r\n      }\r\n      if (Array.isArray(options)) {\r\n        setOptions(options);\r\n      }\r\n    }\r\n  }, [\r\n    incomingMessage,\r\n    setOptions,\r\n    handleChangeInterceptor,\r\n    runValidation,\r\n    whenToRunValidation,\r\n  ]);\r\n\r\n  return { loadingOptions };\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\utils.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\wrapper.tsx",["1039"],"import { FC } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { renderValuesByGroup } from \"../utils/groupWiserenderer\";\r\nimport { MoveSequenceToRender } from \"../utils/fixSequenceInMetaData\";\r\nimport { attachValuesToMetaData } from \"../utils/attachValuesToMetaData\";\r\nimport { ViewFormWrapperProps } from \"./types\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { GroupedView } from \"./groupedView\";\r\nimport { SimpleView } from \"./simpleView\";\r\nimport { MetaDataType, FormMetaDataType } from \"../types\";\r\nimport { useStyles } from \"../style\";\r\n\r\nexport const ViewFormWrapper: FC<ViewFormWrapperProps> = ({\r\n  metaData,\r\n  formDisplayValues,\r\n  hidden = false,\r\n  isSubmitting,\r\n  onAccept,\r\n  onReject,\r\n  children,\r\n}) => {\r\n  metaData = MoveSequenceToRender(metaData);\r\n  const transformedFields = attachValuesToMetaData(\r\n    metaData.fields,\r\n    formDisplayValues ?? {}\r\n  );\r\n  const transformedMetaData = {\r\n    form: metaData.form,\r\n    fields: transformedFields,\r\n  } as MetaDataType;\r\n  const groupWiseFields = renderValuesByGroup(transformedMetaData);\r\n  const formRenderType = transformedMetaData.form.render.renderType ?? \"simple\";\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" style={{ display: hidden ? \"none\" : \"block\" }}>\r\n      <Typography component=\"h3\" className={classes.title}>\r\n        {metaData.form.label} View Only\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.form}>\r\n        {formRenderType === \"stepper\" || formRenderType === \"tabs\" ? (\r\n          <GroupedView\r\n            key={`${metaData.form.name}-grouped`}\r\n            fields={groupWiseFields}\r\n            formRenderConfig={metaData.form.render}\r\n            classes={classes}\r\n          />\r\n        ) : formRenderType === \"simple\" ? (\r\n          <SimpleView\r\n            key={`${metaData.form.name}-simple`}\r\n            fields={groupWiseFields}\r\n            formRenderConfig={metaData.form.render}\r\n          />\r\n        ) : (\r\n          <div>RenderType {formRenderType} not available</div>\r\n        )}\r\n      </div>\r\n      {typeof children === \"function\"\r\n        ? children({\r\n            classes,\r\n            isSubmitting,\r\n            formMetaData: transformedMetaData.form as FormMetaDataType,\r\n            onAccept,\r\n            onReject,\r\n          })\r\n        : children}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\bootstrapNavigation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx",["1040"],"import { useEffect, useState } from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nexport const TableHeaderFilterToolbar = ({\n  dense,\n  filters,\n  headerFilterManager,\n  handleResetGridState,\n}) => {\n  const classes = useStyles();\n  const renderFilters = filters.map((one, index) => {\n    const { filterComponentType, filterComponentProps } = one;\n    switch (filterComponentType) {\n      case \"groupByFilter\":\n        return (\n          <GroupByFilter\n            key={one?.filterComponentProps?.accessor ?? index}\n            headerFilterManager={headerFilterManager}\n            handleResetGridState={handleResetGridState}\n            {...filterComponentProps}\n          />\n        );\n      default:\n        return null;\n    }\n  });\n  return (\n    <Toolbar\n      className={clsx(classes.root)}\n      variant={dense ? \"dense\" : \"regular\"}\n    >\n      <Grid container spacing={3}>\n        {renderFilters}\n      </Grid>\n    </Toolbar>\n  );\n};\n\nexport const GroupByFilter = ({\n  accessor,\n  columnName,\n  selectType,\n  groups,\n  headerFilterManager,\n  handleResetGridState,\n}) => {\n  const isSingle = selectType === \"single\" ? true : false;\n  const [value, setValue] = useState<any | any[] | null>(null);\n  const [clearAllSelected, setClearAllSelected] = useState(false);\n  useEffect(() => {\n    if (\n      (Array.isArray(value) && value.length > 0) ||\n      (!Array.isArray(value) && Boolean(value))\n    ) {\n      headerFilterManager.addHeaderFilter(accessor, {\n        accessor,\n        condition: isSingle ? \"equal\" : \"in\",\n        value,\n      });\n      handleResetGridState();\n    } else {\n      headerFilterManager.removeHeaderFilter(accessor);\n      handleResetGridState();\n    }\n  }, [value]);\n  if (!Array.isArray(groups)) {\n    return null;\n  }\n  const buttons = groups.map((one) => {\n    return (\n      <ToggleButton key={one.value} value={one.value}>\n        {one.label} ({one.count})\n      </ToggleButton>\n    );\n  });\n  return (\n    <Grid item xs>\n      <Typography style={{ display: \"inline-flex\" }}>{columnName}</Typography>\n      <ToggleButtonGroup\n        size=\"small\"\n        value={value}\n        onChange={(event, value) => {\n          setValue(value);\n          setClearAllSelected(false);\n        }}\n        exclusive={isSingle ? true : false}\n      >\n        {buttons}\n        {isSingle ? (\n          <ToggleButton key={`${accessor}-all-single`} value={\"\"}>\n            Clear\n          </ToggleButton>\n        ) : (\n          <ToggleButton\n            selected={clearAllSelected}\n            key={`${accessor}-all-multiple`}\n            onClick={(e) => {\n              e.preventDefault();\n              setValue([]);\n              setClearAllSelected(true);\n            }}\n            value=\"\"\n          >\n            Clear\n          </ToggleButton>\n        )}\n      </ToggleButtonGroup>\n    </Grid>\n  );\n};\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\simpleView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\groupedView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx",["1041"],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\generateLead.tsx",["1042"],"import { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.04)\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  formLabel: {\r\n    fontWeight: 600,\r\n  },\r\n  formValue: {\r\n    fontWeight: 500,\r\n    color: \"#0063A3\",\r\n  },\r\n  marginSet: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n\r\n  DialogTitle: {\r\n    color: \"#0063A3\",\r\n    borderBottom: \"1px solid #ddd\",\r\n  },\r\n  DetailsTitle: {\r\n    color: \"#26A456\",\r\n    letterSpacing: \"2px\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 700,\r\n    alignSelf: \"flex-start\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    fontSize: \"1.2rem\",\r\n    background:\r\n      \"linear-gradient(-90deg, rgba(94,231,131,1) 0%, rgba(74,205,159,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    border: 0,\r\n    color: \"#fff !important\",\r\n    padding: \"4px .75rem\",\r\n    fontWeight: 700,\r\n    minWidth: \"120px\",\r\n    letterSpacing: \"0.02857em\",\r\n    boxShadow: \"none\",\r\n    textTransform: \"capitalize\",\r\n    borderRadius: \"24px\",\r\n    alignSelf: \"flex-end\",\r\n    \"&:hover\": {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(94,231,131,1) 0%, rgba(74,204,160,1) 35%, rgba(33,150,218,1) 100%)\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  backBtn: {\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\r\n    background: \"#e0e0e0\",\r\n    color: \"#0b6fb8 !important\",\r\n    margin: theme.spacing(3, 2, 2),\r\n    fontSize: \"1.2rem\",\r\n    borderRadius: \"24px\",\r\n    fontWeight: 700,\r\n    minWidth: \"120px\",\r\n    letterSpacing: \"0.02857em\",\r\n    padding: \"4px .75rem\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      color: \"#0b6fb8 !important\",\r\n      background: \"#e0e0e0\",\r\n      boxShadow:\r\n        \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const DisplayData = ({ onClose, open, row }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [temp, setTemp] = useState({});\r\n  const [assignemployeeList, setAssignEmployeeList] = useState<any[]>([]);\r\n  const [employeevalue, setEmployeeValue] = useState(\"\");\r\n\r\n  let refID = row;\r\n\r\n  const data = [\r\n    {\r\n      label: \"Product Type\",\r\n      type: \"text\",\r\n      name: \"productType\",\r\n    },\r\n    {\r\n      label: \"Cutomer Name\",\r\n      type: \"text\",\r\n      name: \"name\",\r\n    },\r\n    {\r\n      label: \"Gender\",\r\n      type: \"text\",\r\n      name: \"gender\",\r\n    },\r\n    {\r\n      label: \"Date of Birth\",\r\n      type: \"text\",\r\n      name: \"birth_dt\",\r\n    },\r\n    {\r\n      label: \"Desired Loan Amount\",\r\n      type: \"text\",\r\n      name: \"desired_loan_amt\",\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      type: \"text\",\r\n      name: \"email\",\r\n    },\r\n    {\r\n      label: \"Mobile No\",\r\n      type: \"text\",\r\n      name: \"phoneNumber\",\r\n    },\r\n    {\r\n      label: \"Currently Employed\",\r\n      type: \"text\",\r\n      name: \"employementStatus\",\r\n    },\r\n    {\r\n      label: \"Address\",\r\n      type: \"text\",\r\n      name: \"address\",\r\n    },\r\n    {\r\n      label: \"Lead Status\",\r\n      type: \"text\",\r\n      name: \"inquiry_status\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetcher = async () => {\r\n      const result = await APISDK.getInquiryDataToConvertIntoLead(refID);\r\n      try {\r\n        if (result.status === \"success\") {\r\n          let editableData = result.data;\r\n          setTemp({\r\n            productType: editableData.productID,\r\n            name:\r\n              editableData.firstName +\r\n              \" \" +\r\n              editableData.middleName +\r\n              \" \" +\r\n              editableData.lastName,\r\n            gender: editableData.gender,\r\n            birth_dt: editableData.dob,\r\n            desired_loan_amt: editableData.loanAmount,\r\n            email: editableData.email,\r\n            phoneNumber: editableData.mobileNo,\r\n            employementStatus: editableData.employementStatus,\r\n            address: editableData.location,\r\n            inquiry_status: editableData.status,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(\"in catch\");\r\n      }\r\n    };\r\n    fetcher();\r\n    getLeadAssignEmployeeList();\r\n  }, []);\r\n\r\n  const getLeadAssignEmployeeList = async () => {\r\n    const result = await APISDK.getTeamLeaList();\r\n    let employeeList = [] as any;\r\n    for (let i = 0; i < result.data.length; i++) {\r\n      employeeList.push({\r\n        label: result.data[i].fullname,\r\n        value: result.data[i].empID,\r\n      });\r\n    }\r\n    setAssignEmployeeList(employeeList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"Details\"\r\n      >\r\n        <DialogTitle id=\"Details\" className={classes.DialogTitle}>\r\n          Convert to Lead\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Grid container spacing={2}>\r\n              {data.map((res) => {\r\n                return temp[res.name] ? (\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Paper className={classes.paper}>\r\n                      <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Box width=\"40%\" className={classes.formLabel}>\r\n                          {res.label}:\r\n                        </Box>\r\n                        <Box width=\"60%\" className={classes.formValue}>\r\n                          {temp[res.name]}\r\n                        </Box>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                ) : null;\r\n              })}\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <TextField\r\n                    select\r\n                    label=\"Lead Assign to Employee\"\r\n                    placeholder=\"Select Employee\"\r\n                    fullWidth\r\n                    required\r\n                    name=\"leadtatus\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setEmployeeValue(e.target.value)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={employeevalue}\r\n                  >\r\n                    <MenuItem value={0}>Select Employee</MenuItem>\r\n                    {assignemployeeList.map((data) => {\r\n                      return (\r\n                        <MenuItem value={data.value}>{data.label}</MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"mb-30\">\r\n          <Button\r\n            autoFocus\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            className={classes.backBtn}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            // onClick={onClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\inquiryFormView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryFormActions\\inquiryFormEdit.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\questionnaireFormActions\\questionnaireFormView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\questionnaireFormActions\\questionnaireFormEdit.tsx",[],{"ruleId":"1043","replacedBy":"1044"},{"ruleId":"1045","replacedBy":"1046"},{"ruleId":"1047","severity":1,"message":"1048","line":15,"column":19,"nodeType":"1049","messageId":"1050","endLine":17,"endColumn":2},{"ruleId":"1051","severity":1,"message":"1052","line":439,"column":13,"nodeType":"1053","messageId":"1054","endLine":439,"endColumn":17},{"ruleId":"1055","severity":1,"message":"1056","line":41,"column":41,"nodeType":"1057","endLine":41,"endColumn":61},{"ruleId":"1043","replacedBy":"1044"},{"ruleId":"1045","replacedBy":"1046"},{"ruleId":"1058","severity":1,"message":"1059","line":122,"column":6,"nodeType":"1060","endLine":122,"endColumn":8,"suggestions":"1061"},{"ruleId":"1051","severity":1,"message":"1062","line":1,"column":40,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":46},{"ruleId":"1051","severity":1,"message":"1063","line":3,"column":10,"nodeType":"1053","messageId":"1054","endLine":3,"endColumn":16},{"ruleId":"1051","severity":1,"message":"1064","line":5,"column":3,"nodeType":"1053","messageId":"1054","endLine":5,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1065","line":6,"column":3,"nodeType":"1053","messageId":"1054","endLine":6,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1066","line":21,"column":9,"nodeType":"1053","messageId":"1054","endLine":21,"endColumn":17},{"ruleId":"1051","severity":1,"message":"1067","line":22,"column":10,"nodeType":"1053","messageId":"1054","endLine":22,"endColumn":17},{"ruleId":"1051","severity":1,"message":"1068","line":22,"column":19,"nodeType":"1053","messageId":"1054","endLine":22,"endColumn":29},{"ruleId":"1051","severity":1,"message":"1069","line":25,"column":10,"nodeType":"1053","messageId":"1054","endLine":25,"endColumn":18},{"ruleId":"1051","severity":1,"message":"1070","line":27,"column":9,"nodeType":"1053","messageId":"1054","endLine":27,"endColumn":27},{"ruleId":"1055","severity":1,"message":"1071","line":71,"column":10,"nodeType":"1057","endLine":71,"endColumn":48},{"ruleId":"1051","severity":1,"message":"1063","line":9,"column":10,"nodeType":"1053","messageId":"1054","endLine":9,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1072","line":58,"column":6,"nodeType":"1060","endLine":58,"endColumn":8,"suggestions":"1073"},{"ruleId":"1074","severity":1,"message":"1075","line":49,"column":10,"nodeType":"1053","messageId":"1054","endLine":49,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1076","line":13,"column":10,"nodeType":"1053","messageId":"1054","endLine":13,"endColumn":20},{"ruleId":"1051","severity":1,"message":"1077","line":15,"column":9,"nodeType":"1053","messageId":"1054","endLine":15,"endColumn":24},{"ruleId":"1051","severity":1,"message":"1078","line":31,"column":10,"nodeType":"1053","messageId":"1054","endLine":31,"endColumn":12},{"ruleId":"1051","severity":1,"message":"1079","line":32,"column":10,"nodeType":"1053","messageId":"1054","endLine":32,"endColumn":23},{"ruleId":"1080","severity":1,"message":"1081","line":23,"column":9,"nodeType":"1057","endLine":29,"endColumn":10},{"ruleId":"1051","severity":1,"message":"1082","line":1,"column":10,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":12},{"ruleId":"1080","severity":1,"message":"1081","line":56,"column":11,"nodeType":"1057","endLine":62,"endColumn":12},{"ruleId":"1058","severity":1,"message":"1083","line":19,"column":51,"nodeType":"1060","endLine":19,"endColumn":53,"suggestions":"1084"},{"ruleId":"1058","severity":1,"message":"1085","line":31,"column":5,"nodeType":"1060","endLine":31,"endColumn":7,"suggestions":"1086"},{"ruleId":"1058","severity":1,"message":"1087","line":92,"column":5,"nodeType":"1060","endLine":92,"endColumn":62,"suggestions":"1088"},{"ruleId":"1051","severity":1,"message":"1089","line":13,"column":5,"nodeType":"1053","messageId":"1054","endLine":13,"endColumn":14},{"ruleId":"1051","severity":1,"message":"1090","line":14,"column":5,"nodeType":"1053","messageId":"1054","endLine":14,"endColumn":10},{"ruleId":"1091","severity":1,"message":"1092","line":79,"column":37,"nodeType":"1093","messageId":"1094","endLine":79,"endColumn":39},{"ruleId":"1058","severity":1,"message":"1095","line":122,"column":6,"nodeType":"1060","endLine":122,"endColumn":8,"suggestions":"1096"},{"ruleId":"1051","severity":1,"message":"1089","line":76,"column":5,"nodeType":"1053","messageId":"1054","endLine":76,"endColumn":14},{"ruleId":"1051","severity":1,"message":"1097","line":80,"column":5,"nodeType":"1053","messageId":"1054","endLine":80,"endColumn":16},{"ruleId":"1051","severity":1,"message":"1098","line":128,"column":13,"nodeType":"1053","messageId":"1054","endLine":128,"endColumn":34},{"ruleId":"1051","severity":1,"message":"1099","line":1,"column":39,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":47},{"ruleId":"1043","replacedBy":"1100"},{"ruleId":"1045","replacedBy":"1101"},{"ruleId":"1051","severity":1,"message":"1102","line":1,"column":32,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":40},{"ruleId":"1051","severity":1,"message":"1099","line":1,"column":56,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":64},{"ruleId":"1058","severity":1,"message":"1103","line":63,"column":6,"nodeType":"1060","endLine":63,"endColumn":8,"suggestions":"1104"},{"ruleId":"1058","severity":1,"message":"1105","line":109,"column":5,"nodeType":"1060","endLine":109,"endColumn":49,"suggestions":"1106"},{"ruleId":"1107","severity":1,"message":"1108","line":19,"column":11,"nodeType":"1109","messageId":"1110","endLine":21,"endColumn":92},{"ruleId":"1051","severity":1,"message":"1111","line":1,"column":43,"nodeType":"1053","messageId":"1054","endLine":1,"endColumn":54},{"ruleId":"1058","severity":1,"message":"1112","line":57,"column":5,"nodeType":"1060","endLine":57,"endColumn":17,"suggestions":"1113"},{"ruleId":"1051","severity":1,"message":"1114","line":59,"column":9,"nodeType":"1053","messageId":"1054","endLine":59,"endColumn":15},{"ruleId":"1051","severity":1,"message":"1115","line":2,"column":8,"nodeType":"1053","messageId":"1054","endLine":2,"endColumn":11},{"ruleId":"1058","severity":1,"message":"1116","line":78,"column":6,"nodeType":"1060","endLine":78,"endColumn":13,"suggestions":"1117"},{"ruleId":"1107","severity":1,"message":"1108","line":19,"column":11,"nodeType":"1109","messageId":"1110","endLine":21,"endColumn":92},{"ruleId":"1058","severity":1,"message":"1118","line":190,"column":6,"nodeType":"1060","endLine":190,"endColumn":8,"suggestions":"1119"},"no-native-reassign",["1120"],"no-negated-in-lhs",["1121"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component CC_ODFormWrapper must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'interval' and 'timeout'. Either include them or remove the dependency array.","ArrayExpression",["1122"],"'useRef' is defined but never used.","'APISDK' is defined but never used.","'ViewFormWrapper' is defined but never used.","'isMetaDataValid' is defined but never used.","'navigate' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'formData' is assigned a value but never used.","'onSubmitHandlerNew' is assigned a value but never used.","Imported JSX component CC_ODForm must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'temp.acr', 'temp.addOffice', 'temp.age', 'temp.associateCompanies', 'temp.awardRecognitionreceived', 'temp.bankName', 'temp.chequeBounce', 'temp.companyHistory', 'temp.existingProducts', 'temp.externalCreditRating', 'temp.incorporationDate', 'temp.loanAmount', 'temp.loanDetails', 'temp.loanPurpose', 'temp.majorSuppliers', 'temp.msme', 'temp.natureOfFacility', 'temp.newTakeover', 'temp.outstandingAmount', 'temp.paymenttermSupplier', 'temp.presentProposedLoancomments', 'temp.productEndUse', 'temp.promotersDirectorsName', 'temp.proposedAmount', 'temp.proposedBusiness', 'temp.rateOfInterest', 'temp.requestedROI', and 'temp.udhyamAadharNumber'. Either include them or remove the dependency array.",["1123"],"no-unused-vars","'currentRow' is assigned a value but never used.","'OpenDialog' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'id' is assigned a value but never used.","'expiryOtpTime' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'FC' is defined but never used.","React Hook useMemo has a missing dependency: 'metaData.columns'. Either include it or remove the dependency array.",["1124"],"React Hook useCallback has a missing dependency: 'metaData.gridConfig.rowIdColumn'. Either include it or remove the dependency array.",["1125"],"React Hook useCallback has a missing dependency: 'gridCode'. Either include it or remove the dependency array.",["1126"],"'flowExist' is assigned a value but never used.","'refID' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'fallbackURL', 'flowExist', 'navigate', and 'refID'. Either include them or remove the dependency array.",["1127"],"'fallbackURL' is assigned a value but never used.","'currentFetchRequestID' is assigned a value but never used.","'Fragment' is defined but never used.",["1120"],["1121"],"'Suspense' is defined but never used.","React Hook useEffect has missing dependencies: 'gridCode', 'headerFilterState', 'id', and 'localFilterManager'. Either include them or remove the dependency array.",["1128"],"React Hook useCallback has a missing dependency: 'multiple'. Either include it or remove the dependency array.",["1129"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'useCallback' is defined but never used.","React Hook useCallback has a missing dependency: 'formState'. Either include it or remove the dependency array.",["1130"],"'values' is assigned a value but never used.","'Box' is defined but never used.","React Hook useEffect has missing dependencies: 'accessor', 'handleResetGridState', 'headerFilterManager', and 'isSingle'. Either include them or remove the dependency array. If 'handleResetGridState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1131"],"React Hook useEffect has a missing dependency: 'refID'. Either include it or remove the dependency array.",["1132"],"no-global-assign","no-unsafe-negation",{"desc":"1133","fix":"1134"},{"desc":"1135","fix":"1136"},{"desc":"1137","fix":"1138"},{"desc":"1139","fix":"1140"},{"desc":"1141","fix":"1142"},{"desc":"1143","fix":"1144"},{"desc":"1145","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},"Update the dependencies array to be: [interval, timeout]",{"range":"1155","text":"1156"},"Update the dependencies array to be: [temp.acr, temp.addOffice, temp.age, temp.associateCompanies, temp.awardRecognitionreceived, temp.bankName, temp.chequeBounce, temp.companyHistory, temp.existingProducts, temp.externalCreditRating, temp.incorporationDate, temp.loanAmount, temp.loanDetails, temp.loanPurpose, temp.majorSuppliers, temp.msme, temp.natureOfFacility, temp.newTakeover, temp.outstandingAmount, temp.paymenttermSupplier, temp.presentProposedLoancomments, temp.productEndUse, temp.promotersDirectorsName, temp.proposedAmount, temp.proposedBusiness, temp.rateOfInterest, temp.requestedROI, temp.udhyamAadharNumber]",{"range":"1157","text":"1158"},"Update the dependencies array to be: [metaData.columns]",{"range":"1159","text":"1160"},"Update the dependencies array to be: [metaData.gridConfig.rowIdColumn]",{"range":"1161","text":"1162"},"Update the dependencies array to be: [headerFilterState, gridCode]",{"range":"1163","text":"1164"},"Update the dependencies array to be: [fallbackURL, flowExist, navigate, refID]",{"range":"1165","text":"1166"},"Update the dependencies array to be: [gridCode, headerFilterState, id, localFilterManager]",{"range":"1167","text":"1168"},"Update the dependencies array to be: [getLabelFromValuesForOptions, multiple, handleChange]",{"range":"1169","text":"1170"},"Update the dependencies array to be: [formState, setOptions]",{"range":"1171","text":"1172"},"Update the dependencies array to be: [accessor, handleResetGridState, headerFilterManager, isSingle, value]",{"range":"1173","text":"1174"},"Update the dependencies array to be: [refID]",{"range":"1175","text":"1176"},[3688,3690],"[interval, timeout]",[2414,2416],"[temp.acr, temp.addOffice, temp.age, temp.associateCompanies, temp.awardRecognitionreceived, temp.bankName, temp.chequeBounce, temp.companyHistory, temp.existingProducts, temp.externalCreditRating, temp.incorporationDate, temp.loanAmount, temp.loanDetails, temp.loanPurpose, temp.majorSuppliers, temp.msme, temp.natureOfFacility, temp.newTakeover, temp.outstandingAmount, temp.paymenttermSupplier, temp.presentProposedLoancomments, temp.productEndUse, temp.promotersDirectorsName, temp.proposedAmount, temp.proposedBusiness, temp.rateOfInterest, temp.requestedROI, temp.udhyamAadharNumber]",[594,596],"[metaData.columns]",[854,856],"[metaData.gridConfig.rowIdColumn]",[2957,3014],"[headerFilterState, gridCode]",[3404,3406],"[fallbackURL, flowExist, navigate, refID]",[2036,2038],"[gridCode, headerFilterState, id, localFilterManager]",[3085,3129],"[getLabelFromValuesForOptions, multiple, handleChange]",[2115,2127],"[formState, setOptions]",[2143,2150],"[accessor, handleResetGridState, headerFilterManager, isSingle, value]",[5201,5203],"[refID]"]
[{"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx":"1","D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts":"2","D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts":"3","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx":"4","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx":"5","D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts":"6","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx":"7","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx":"8","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts":"9","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts":"10","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts":"11","D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts":"12","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts":"13","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx":"14","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx":"15","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts":"16","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js":"17","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js":"18","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts":"19","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx":"20","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js":"21","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts":"22","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts":"23","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts":"24","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts":"25","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts":"26","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts":"27","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts":"28","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx":"29","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx":"30","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx":"31","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx":"32","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx":"33","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx":"34","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx":"35","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx":"36","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js":"37","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx":"38","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts":"39","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts":"40","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx":"41","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx":"42","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx":"43","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx":"44","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx":"45","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx":"46","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx":"47","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts":"48","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx":"49","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx":"50","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx":"51","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts":"52","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx":"53","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx":"54","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js":"55","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts":"56","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts":"57","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts":"58","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts":"59","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts":"60","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts":"61","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts":"62","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts":"63","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts":"64","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts":"65","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts":"66","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts":"67","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts":"68","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts":"69","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx":"70","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts":"71","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts":"72","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx":"73","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\sideBarNavigation.tsx":"74","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts":"75","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts":"76","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx":"77","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts":"78","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx":"79","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx":"80","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx":"81","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx":"82","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx":"83","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\style.ts":"84","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts":"85","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts":"86","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts":"87","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts":"88","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts":"89","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx":"90","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx":"91","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx":"92","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx":"93","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx":"94","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx":"95","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx":"96","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts":"97","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts":"98","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts":"99","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx":"100","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts":"101","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts":"102","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts":"103","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts":"104","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts":"105","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts":"106","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx":"107","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\index.ts":"108","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx":"109","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx":"110","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx":"111","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx":"112","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx":"113","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\index.ts":"114","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts":"115","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts":"116","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts":"117","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts":"118","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts":"119","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts":"120","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts":"121","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts":"122","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts":"123","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\confirmationBox.tsx":"124","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts":"125","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx":"126","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts":"127","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts":"128","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx":"129","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx":"130","D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx":"131","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx":"132","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx":"133","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx":"134","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx":"135","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx":"136","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\types.ts":"137","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts":"138","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts":"139","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts":"140","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx":"141","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx":"142","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\tabsForm.tsx":"143","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts":"144","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts":"145","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx":"146","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx":"147","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts":"148","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx":"149","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx":"150","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx":"151","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx":"152","D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts":"153","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts":"154","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts":"155","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts":"156","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts":"157","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts":"158","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts":"159","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts":"160","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts":"161","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx":"162","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx":"163","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx":"164","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts":"165","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts":"166","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts":"167","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts":"168","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts":"169","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts":"170","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts":"171","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts":"172","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts":"173","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts":"174","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts":"175","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts":"176","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx":"177","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx":"178","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts":"179","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx":"180","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx":"181","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts":"182","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx":"183","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx":"184","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx":"185","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx":"186","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx":"187","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx":"188","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx":"189","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx":"190","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx":"191","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx":"192","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx":"193","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx":"194","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx":"195","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx":"196","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx":"197","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx":"198","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx":"199","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx":"200","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx":"201","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\index.ts":"202","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts":"203","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\optionsFetcher.ts":"204","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\utils.ts":"205","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts":"206","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts":"207","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts":"208","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts":"209","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts":"210","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts":"211","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts":"212","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts":"213","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts":"214","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx":"215","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\wrapper.tsx":"216","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx":"217","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx":"218","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\bootstrapNavigation.tsx":"219","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts":"220","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx":"221","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx":"222","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx":"223","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx":"224","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\simpleView.tsx":"225","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\groupedView.tsx":"226","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx":"227","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts":"228","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx":"229","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx":"230","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx":"231","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx":"232","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\generateLead.tsx":"233","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\inquiryFormActions\\inquiryFormView.tsx":"234","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\inquiryFormActions\\inquiryFormEdit.tsx":"235","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\questionnaireFormActions\\questionnaireFormView.tsx":"236","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\questionnaireFormActions\\questionnaireFormEdit.tsx":"237","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridWrapper.tsx":"238","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\atoms\\index.ts":"239","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\index.ts":"240","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\currencyRowCellRenderer.tsx":"241","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\dateRowCellRenderer.tsx":"242","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\defaultRowCellRenderer.tsx":"243","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\utils.ts":"244","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\sortColumnBySequence.ts":"245","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\extractHiddenColumns.ts":"246","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachGlobalFilterProps.ts":"247","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachFilterProps.ts":"248","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachCellComponentsToMetaData.ts":"249","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachAlignmentProps.ts":"250","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\index.ts":"251","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\groupByExclusiveFilter.tsx":"252","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\groupByMultipleFilter.tsx":"253","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\dateRangeFilter.tsx":"254"},{"size":1247,"mtime":1609499185681,"results":"255","hashOfConfig":"256"},{"size":5444,"mtime":1607405262874,"results":"257","hashOfConfig":"256"},{"size":949,"mtime":1607405288783,"results":"258","hashOfConfig":"256"},{"size":41,"mtime":1607405288738,"results":"259","hashOfConfig":"256"},{"size":41,"mtime":1607405288733,"results":"260","hashOfConfig":"256"},{"size":10241,"mtime":1607405288784,"results":"261","hashOfConfig":"256"},{"size":418,"mtime":1609499185681,"results":"262","hashOfConfig":"256"},{"size":496,"mtime":1609499185680,"results":"263","hashOfConfig":"256"},{"size":3780,"mtime":1607405288739,"results":"264","hashOfConfig":"256"},{"size":4463,"mtime":1607405288734,"results":"265","hashOfConfig":"256"},{"size":21516,"mtime":1609936020487,"results":"266","hashOfConfig":"256"},{"size":426,"mtime":1607405288835,"results":"267","hashOfConfig":"256"},{"size":3100,"mtime":1609396193877,"results":"268","hashOfConfig":"256"},{"size":305,"mtime":1607405288794,"results":"269","hashOfConfig":"256"},{"size":3516,"mtime":1609931295462,"results":"270","hashOfConfig":"256"},{"size":6736,"mtime":1607931442330,"results":"271","hashOfConfig":"256"},{"size":1584,"mtime":1607405288815,"results":"272","hashOfConfig":"256"},{"size":21576,"mtime":1608269099646,"results":"273","hashOfConfig":"256"},{"size":154,"mtime":1607405288831,"results":"274","hashOfConfig":"256"},{"size":1499,"mtime":1609931281639,"results":"275","hashOfConfig":"256"},{"size":51,"mtime":1607405288825,"results":"276","hashOfConfig":"256"},{"size":47,"mtime":1607405288787,"results":"277","hashOfConfig":"256"},{"size":48,"mtime":1607405288813,"results":"278","hashOfConfig":"256"},{"size":53,"mtime":1607405288816,"results":"279","hashOfConfig":"256"},{"size":49,"mtime":1607405288818,"results":"280","hashOfConfig":"256"},{"size":45,"mtime":1607405288826,"results":"281","hashOfConfig":"256"},{"size":63,"mtime":1608785324729,"results":"282","hashOfConfig":"256"},{"size":59,"mtime":1608785324729,"results":"283","hashOfConfig":"256"},{"size":3663,"mtime":1608785324726,"results":"284","hashOfConfig":"256"},{"size":2407,"mtime":1609926840859,"results":"285","hashOfConfig":"256"},{"size":47,"mtime":1609499185681,"results":"286","hashOfConfig":"256"},{"size":48,"mtime":1607405288811,"results":"287","hashOfConfig":"256"},{"size":457,"mtime":1607405288812,"results":"288","hashOfConfig":"256"},{"size":422,"mtime":1609499185697,"results":"289","hashOfConfig":"256"},{"size":30226,"mtime":1609410211909,"results":"290","hashOfConfig":"256"},{"size":46575,"mtime":1609930896078,"results":"291","hashOfConfig":"256"},{"size":6363,"mtime":1609932517521,"results":"292","hashOfConfig":"256"},{"size":6800,"mtime":1607405288787,"results":"293","hashOfConfig":"256"},{"size":907,"mtime":1607405288808,"results":"294","hashOfConfig":"256"},{"size":333,"mtime":1607405288812,"results":"295","hashOfConfig":"256"},{"size":5752,"mtime":1608785324710,"results":"296","hashOfConfig":"256"},{"size":9950,"mtime":1608785324729,"results":"297","hashOfConfig":"256"},{"size":2775,"mtime":1608785324729,"results":"298","hashOfConfig":"256"},{"size":6881,"mtime":1609235367044,"results":"299","hashOfConfig":"256"},{"size":1183,"mtime":1609499185697,"results":"300","hashOfConfig":"256"},{"size":3113,"mtime":1608269099646,"results":"301","hashOfConfig":"256"},{"size":3199,"mtime":1608785324729,"results":"302","hashOfConfig":"256"},{"size":586,"mtime":1607405288829,"results":"303","hashOfConfig":"256"},{"size":421,"mtime":1609419526680,"results":"304","hashOfConfig":"256"},{"size":126,"mtime":1609910147678,"results":"305","hashOfConfig":"256"},{"size":600,"mtime":1608268975469,"results":"306","hashOfConfig":"256"},{"size":6355,"mtime":1609926840874,"results":"307","hashOfConfig":"256"},{"size":4372,"mtime":1609499185681,"results":"308","hashOfConfig":"256"},{"size":5315,"mtime":1609499185697,"results":"309","hashOfConfig":"256"},{"size":6651,"mtime":1609909255573,"results":"310","hashOfConfig":"256"},{"size":1056,"mtime":1609326530999,"results":"311","hashOfConfig":"256"},{"size":952,"mtime":1607405288787,"results":"312","hashOfConfig":"256"},{"size":1739,"mtime":1607405288828,"results":"313","hashOfConfig":"256"},{"size":51,"mtime":1607405288809,"results":"314","hashOfConfig":"256"},{"size":55,"mtime":1607405288806,"results":"315","hashOfConfig":"256"},{"size":45,"mtime":1607405288803,"results":"316","hashOfConfig":"256"},{"size":66,"mtime":1607405288801,"results":"317","hashOfConfig":"256"},{"size":107,"mtime":1607405288797,"results":"318","hashOfConfig":"256"},{"size":77,"mtime":1609235367029,"results":"319","hashOfConfig":"256"},{"size":75,"mtime":1608785324710,"results":"320","hashOfConfig":"256"},{"size":49,"mtime":1609235367029,"results":"321","hashOfConfig":"256"},{"size":1698,"mtime":1607941458203,"results":"322","hashOfConfig":"256"},{"size":1024,"mtime":1607405288814,"results":"323","hashOfConfig":"256"},{"size":1676,"mtime":1608785324729,"results":"324","hashOfConfig":"256"},{"size":917,"mtime":1607405288816,"results":"325","hashOfConfig":"256"},{"size":2641,"mtime":1607405288812,"results":"326","hashOfConfig":"256"},{"size":778,"mtime":1609499185681,"results":"327","hashOfConfig":"256"},{"size":3736,"mtime":1609910147677,"results":"328","hashOfConfig":"256"},{"size":4840,"mtime":1609499185681,"results":"329","hashOfConfig":"256"},{"size":13554,"mtime":1609499185681,"results":"330","hashOfConfig":"256"},{"size":47,"mtime":1607405288819,"results":"331","hashOfConfig":"256"},{"size":1947,"mtime":1609419181912,"results":"332","hashOfConfig":"256"},{"size":59,"mtime":1607405288799,"results":"333","hashOfConfig":"256"},{"size":6322,"mtime":1609499185697,"results":"334","hashOfConfig":"256"},{"size":8354,"mtime":1609915985112,"results":"335","hashOfConfig":"256"},{"size":5927,"mtime":1609499185681,"results":"336","hashOfConfig":"256"},{"size":1449,"mtime":1609499185697,"results":"337","hashOfConfig":"256"},{"size":1734,"mtime":1609499185697,"results":"338","hashOfConfig":"256"},{"size":2835,"mtime":1609499185681,"results":"339","hashOfConfig":"256"},{"size":49,"mtime":1607405288781,"results":"340","hashOfConfig":"256"},{"size":4951,"mtime":1609419526681,"results":"341","hashOfConfig":"256"},{"size":1611,"mtime":1608785324710,"results":"342","hashOfConfig":"256"},{"size":855,"mtime":1607405262852,"results":"343","hashOfConfig":"256"},{"size":5970,"mtime":1609396193845,"results":"344","hashOfConfig":"256"},{"size":6664,"mtime":1609830576298,"results":"345","hashOfConfig":"256"},{"size":15728,"mtime":1609402510956,"results":"346","hashOfConfig":"256"},{"size":1864,"mtime":1609910147686,"results":"347","hashOfConfig":"256"},{"size":1159,"mtime":1607405288807,"results":"348","hashOfConfig":"256"},{"size":3520,"mtime":1609419526680,"results":"349","hashOfConfig":"256"},{"size":147,"mtime":1609910147689,"results":"350","hashOfConfig":"256"},{"size":151,"mtime":1608785324729,"results":"351","hashOfConfig":"256"},{"size":2136,"mtime":1607405288816,"results":"352","hashOfConfig":"256"},{"size":326,"mtime":1609910147683,"results":"353","hashOfConfig":"256"},{"size":701,"mtime":1609235367029,"results":"354","hashOfConfig":"256"},{"size":1596,"mtime":1607405288798,"results":"355","hashOfConfig":"256"},{"size":670,"mtime":1609235367044,"results":"356","hashOfConfig":"256"},{"size":1858,"mtime":1609910147687,"results":"357","hashOfConfig":"256"},{"size":138,"mtime":1609910147674,"results":"358","hashOfConfig":"256"},{"size":127,"mtime":1608709316326,"results":"359","hashOfConfig":"256"},{"size":1427,"mtime":1607405288798,"results":"360","hashOfConfig":"256"},{"size":16605,"mtime":1608550454317,"results":"361","hashOfConfig":"256"},{"size":765,"mtime":1607931597531,"results":"362","hashOfConfig":"256"},{"size":104,"mtime":1609499185681,"results":"363","hashOfConfig":"256"},{"size":725,"mtime":1607931597528,"results":"364","hashOfConfig":"256"},{"size":278,"mtime":1607931597522,"results":"365","hashOfConfig":"256"},{"size":421,"mtime":1607931597530,"results":"366","hashOfConfig":"256"},{"size":2221,"mtime":1607931597533,"results":"367","hashOfConfig":"256"},{"size":550,"mtime":1607405288782,"results":"368","hashOfConfig":"256"},{"size":28,"mtime":1609419526683,"results":"369","hashOfConfig":"256"},{"size":1404,"mtime":1607405288804,"results":"370","hashOfConfig":"256"},{"size":1658,"mtime":1607405288777,"results":"371","hashOfConfig":"256"},{"size":1205,"mtime":1607405288809,"results":"372","hashOfConfig":"256"},{"size":196,"mtime":1607405288802,"results":"373","hashOfConfig":"256"},{"size":736,"mtime":1607405288807,"results":"374","hashOfConfig":"256"},{"size":4916,"mtime":1608709413338,"results":"375","hashOfConfig":"256"},{"size":453,"mtime":1607405288776,"results":"376","hashOfConfig":"256"},{"size":2024,"mtime":1608353808887,"results":"377","hashOfConfig":"256"},{"size":1165,"mtime":1609396193846,"results":"378","hashOfConfig":"256"},{"size":906,"mtime":1609419526686,"results":"379","hashOfConfig":"256"},{"size":697,"mtime":1607405262851,"results":"380","hashOfConfig":"256"},{"size":2020,"mtime":1607405288771,"results":"381","hashOfConfig":"256"},{"size":1867,"mtime":1607405288800,"results":"382","hashOfConfig":"256"},{"size":2232,"mtime":1607405288799,"results":"383","hashOfConfig":"256"},{"size":2490,"mtime":1609824324616,"results":"384","hashOfConfig":"256"},{"size":5172,"mtime":1609499185681,"results":"385","hashOfConfig":"256"},{"size":48907,"mtime":1607405288741,"results":"386","hashOfConfig":"256"},{"size":195,"mtime":1608709316466,"results":"387","hashOfConfig":"256"},{"size":484,"mtime":1608709316547,"results":"388","hashOfConfig":"256"},{"size":2575,"mtime":1609910147671,"results":"389","hashOfConfig":"256"},{"size":5231,"mtime":1609910147670,"results":"390","hashOfConfig":"256"},{"size":4716,"mtime":1608709316456,"results":"391","hashOfConfig":"256"},{"size":852,"mtime":1609499185681,"results":"392","hashOfConfig":"256"},{"size":47,"mtime":1608785324729,"results":"393","hashOfConfig":"256"},{"size":53,"mtime":1607405262858,"results":"394","hashOfConfig":"256"},{"size":1382,"mtime":1609396193838,"results":"395","hashOfConfig":"256"},{"size":4415,"mtime":1609235367029,"results":"396","hashOfConfig":"256"},{"size":1369,"mtime":1609235367029,"results":"397","hashOfConfig":"256"},{"size":1365,"mtime":1609499185681,"results":"398","hashOfConfig":"256"},{"size":2010,"mtime":1609396193823,"results":"399","hashOfConfig":"256"},{"size":173,"mtime":1607405262816,"results":"400","hashOfConfig":"256"},{"size":814,"mtime":1609396193816,"results":"401","hashOfConfig":"256"},{"size":1736,"mtime":1608709316505,"results":"402","hashOfConfig":"256"},{"size":248,"mtime":1607405262863,"results":"403","hashOfConfig":"256"},{"size":1458,"mtime":1607405288781,"results":"404","hashOfConfig":"256"},{"size":3975,"mtime":1609926840872,"results":"405","hashOfConfig":"256"},{"size":2290,"mtime":1609499185681,"results":"406","hashOfConfig":"256"},{"size":1090,"mtime":1607405262817,"results":"407","hashOfConfig":"256"},{"size":568,"mtime":1607405288834,"results":"408","hashOfConfig":"256"},{"size":318,"mtime":1609396193858,"results":"409","hashOfConfig":"256"},{"size":2891,"mtime":1607405262866,"results":"410","hashOfConfig":"256"},{"size":13996,"mtime":1607405262864,"results":"411","hashOfConfig":"256"},{"size":12863,"mtime":1609396193872,"results":"412","hashOfConfig":"256"},{"size":7222,"mtime":1609396193856,"results":"413","hashOfConfig":"256"},{"size":23396,"mtime":1609396193867,"results":"414","hashOfConfig":"256"},{"size":3660,"mtime":1609396193874,"results":"415","hashOfConfig":"256"},{"size":394,"mtime":1608785324729,"results":"416","hashOfConfig":"256"},{"size":1100,"mtime":1607405262865,"results":"417","hashOfConfig":"256"},{"size":720,"mtime":1608785324729,"results":"418","hashOfConfig":"256"},{"size":699,"mtime":1608785324729,"results":"419","hashOfConfig":"256"},{"size":160,"mtime":1607405262823,"results":"420","hashOfConfig":"256"},{"size":181,"mtime":1607405262820,"results":"421","hashOfConfig":"256"},{"size":177,"mtime":1607405262810,"results":"422","hashOfConfig":"256"},{"size":102,"mtime":1607405262798,"results":"423","hashOfConfig":"256"},{"size":120,"mtime":1607405262795,"results":"424","hashOfConfig":"256"},{"size":117,"mtime":1607405262742,"results":"425","hashOfConfig":"256"},{"size":120,"mtime":1607405262743,"results":"426","hashOfConfig":"256"},{"size":122,"mtime":1607405262791,"results":"427","hashOfConfig":"256"},{"size":134,"mtime":1607405262806,"results":"428","hashOfConfig":"256"},{"size":423,"mtime":1607405262739,"results":"429","hashOfConfig":"256"},{"size":64,"mtime":1609235367019,"results":"430","hashOfConfig":"256"},{"size":251,"mtime":1607405262801,"results":"431","hashOfConfig":"256"},{"size":1363,"mtime":1608785324729,"results":"432","hashOfConfig":"256"},{"size":3035,"mtime":1608785324729,"results":"433","hashOfConfig":"256"},{"size":271,"mtime":1607405262736,"results":"434","hashOfConfig":"256"},{"size":152,"mtime":1607405288749,"results":"435","hashOfConfig":"256"},{"size":1426,"mtime":1608785324842,"results":"436","hashOfConfig":"256"},{"size":1640,"mtime":1608785324843,"results":"437","hashOfConfig":"256"},{"size":1214,"mtime":1607405262823,"results":"438","hashOfConfig":"256"},{"size":1320,"mtime":1609396193827,"results":"439","hashOfConfig":"256"},{"size":3203,"mtime":1607405288765,"results":"440","hashOfConfig":"256"},{"size":5021,"mtime":1609396193801,"results":"441","hashOfConfig":"256"},{"size":944,"mtime":1609396193815,"results":"442","hashOfConfig":"256"},{"size":2848,"mtime":1607405288763,"results":"443","hashOfConfig":"256"},{"size":2496,"mtime":1607405288753,"results":"444","hashOfConfig":"256"},{"size":2510,"mtime":1607405288756,"results":"445","hashOfConfig":"256"},{"size":2920,"mtime":1607405288752,"results":"446","hashOfConfig":"256"},{"size":5677,"mtime":1609910147665,"results":"447","hashOfConfig":"256"},{"size":2739,"mtime":1607405288762,"results":"448","hashOfConfig":"256"},{"size":2540,"mtime":1607405288759,"results":"449","hashOfConfig":"256"},{"size":4864,"mtime":1609396193802,"results":"450","hashOfConfig":"256"},{"size":535,"mtime":1607405262799,"results":"451","hashOfConfig":"256"},{"size":4882,"mtime":1609396193791,"results":"452","hashOfConfig":"256"},{"size":912,"mtime":1608785324729,"results":"453","hashOfConfig":"256"},{"size":7142,"mtime":1609396193787,"results":"454","hashOfConfig":"256"},{"size":5189,"mtime":1609396193790,"results":"455","hashOfConfig":"256"},{"size":2941,"mtime":1607405288750,"results":"456","hashOfConfig":"256"},{"size":61,"mtime":1609396193803,"results":"457","hashOfConfig":"256"},{"size":30,"mtime":1607405262857,"results":"458","hashOfConfig":"256"},{"size":2918,"mtime":1609396193813,"results":"459","hashOfConfig":"256"},{"size":559,"mtime":1609396193814,"results":"460","hashOfConfig":"256"},{"size":60,"mtime":1607405288779,"results":"461","hashOfConfig":"256"},{"size":197,"mtime":1607405262856,"results":"462","hashOfConfig":"256"},{"size":69,"mtime":1607405262859,"results":"463","hashOfConfig":"256"},{"size":288,"mtime":1607405262856,"results":"464","hashOfConfig":"256"},{"size":268,"mtime":1607405288781,"results":"465","hashOfConfig":"256"},{"size":272,"mtime":1607405262856,"results":"466","hashOfConfig":"256"},{"size":1179,"mtime":1607405262859,"results":"467","hashOfConfig":"256"},{"size":358,"mtime":1607405288779,"results":"468","hashOfConfig":"256"},{"size":917,"mtime":1607405288780,"results":"469","hashOfConfig":"256"},{"size":1571,"mtime":1608785324729,"results":"470","hashOfConfig":"256"},{"size":2453,"mtime":1609928302650,"results":"471","hashOfConfig":"256"},{"size":842,"mtime":1607931597527,"results":"472","hashOfConfig":"256"},{"size":4384,"mtime":1609910147669,"results":"473","hashOfConfig":"256"},{"size":7067,"mtime":1609499185681,"results":"474","hashOfConfig":"256"},{"size":446,"mtime":1609235367029,"results":"475","hashOfConfig":"256"},{"size":295,"mtime":1608709316669,"results":"476","hashOfConfig":"256"},{"size":808,"mtime":1609910147675,"results":"477","hashOfConfig":"256"},{"size":1868,"mtime":1609910147679,"results":"478","hashOfConfig":"256"},{"size":2255,"mtime":1609926840857,"results":"479","hashOfConfig":"256"},{"size":894,"mtime":1609419526683,"results":"480","hashOfConfig":"256"},{"size":1275,"mtime":1609419526682,"results":"481","hashOfConfig":"256"},{"size":5410,"mtime":1608785324727,"results":"482","hashOfConfig":"256"},{"size":1734,"mtime":1607662158056,"results":"483","hashOfConfig":"256"},{"size":2306,"mtime":1609915976338,"results":"484","hashOfConfig":"256"},{"size":5095,"mtime":1608785324726,"results":"485","hashOfConfig":"256"},{"size":4493,"mtime":1608269099646,"results":"486","hashOfConfig":"256"},{"size":912,"mtime":1607941458199,"results":"487","hashOfConfig":"256"},{"size":8235,"mtime":1609848885685,"results":"488","hashOfConfig":"256"},{"size":1725,"mtime":1609936103967,"results":"489","hashOfConfig":"256"},{"size":1839,"mtime":1609936117825,"results":"490","hashOfConfig":"256"},{"size":1738,"mtime":1609936139845,"results":"491","hashOfConfig":"256"},{"size":1858,"mtime":1609936089329,"results":"492","hashOfConfig":"256"},{"size":2389,"mtime":1609910147677,"results":"493","hashOfConfig":"256"},{"size":1310,"mtime":1609910147665,"results":"494","hashOfConfig":"256"},{"size":127,"mtime":1609910147668,"results":"495","hashOfConfig":"256"},{"size":433,"mtime":1609910147666,"results":"496","hashOfConfig":"256"},{"size":394,"mtime":1609910147667,"results":"497","hashOfConfig":"256"},{"size":269,"mtime":1609910147668,"results":"498","hashOfConfig":"256"},{"size":1353,"mtime":1609910147684,"results":"499","hashOfConfig":"256"},{"size":464,"mtime":1609910147684,"results":"500","hashOfConfig":"256"},{"size":370,"mtime":1609910147683,"results":"501","hashOfConfig":"256"},{"size":1168,"mtime":1609910147682,"results":"502","hashOfConfig":"256"},{"size":1892,"mtime":1609910147682,"results":"503","hashOfConfig":"256"},{"size":809,"mtime":1609910147681,"results":"504","hashOfConfig":"256"},{"size":440,"mtime":1609910147681,"results":"505","hashOfConfig":"256"},{"size":121,"mtime":1609910147673,"results":"506","hashOfConfig":"256"},{"size":3571,"mtime":1609910147672,"results":"507","hashOfConfig":"256"},{"size":3934,"mtime":1609910147673,"results":"508","hashOfConfig":"256"},{"size":3250,"mtime":1609910147672,"results":"509","hashOfConfig":"256"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},"ce6smt",{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"545"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"545"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"545"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"512"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"601","usedDeprecatedRules":"512"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"604","usedDeprecatedRules":"512"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"611","messages":"612","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"512"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"545"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"660","messages":"661","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"512"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"512"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"676","usedDeprecatedRules":"512"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"679","usedDeprecatedRules":"512"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"512"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"512"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"712","messages":"713","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"718","messages":"719","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"720","messages":"721","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"728","messages":"729","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"782","usedDeprecatedRules":"512"},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"793","usedDeprecatedRules":"512"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"918","messages":"919","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"512"},{"filePath":"921","messages":"922","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"923","usedDeprecatedRules":"512"},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"928","messages":"929","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"930","messages":"931","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"932","messages":"933","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"934","usedDeprecatedRules":"512"},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"949","messages":"950","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"951","messages":"952","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"953","messages":"954","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"955","messages":"956","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"957","messages":"958","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"959","usedDeprecatedRules":"512"},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"990","messages":"991","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"920","usedDeprecatedRules":"512"},{"filePath":"992","messages":"993","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"994","usedDeprecatedRules":"995"},{"filePath":"996","messages":"997","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"998","messages":"999","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1006","usedDeprecatedRules":"512"},{"filePath":"1007","messages":"1008","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1009","usedDeprecatedRules":"512"},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1026","messages":"1027","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1028","messages":"1029","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1030","messages":"1031","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1032","messages":"1033","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"512"},{"filePath":"1034","messages":"1035","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1036","usedDeprecatedRules":"512"},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1039","usedDeprecatedRules":"512"},{"filePath":"1040","messages":"1041","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1042","usedDeprecatedRules":"512"},"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx",[],["1043","1044"],"D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts",["1045","1046"],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx",["1047"],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js",[],["1048","1049"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx",["1050","1051"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const [OpenDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Change Password fsdfdsffs\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Password must be 8-16 characters and include both numbers and letters.\r\n        </DialogContentText>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Current Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Current Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"New Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions className=\"mb-30\">\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.backBtn}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx",["1052","1053"],"import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logoImg from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const [otp, setotp] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [otpVerifydivShowing, setotpVerifydivShowing] = useState(false);\r\n  const [showPwddiv, setshowPwddiv] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [id, setid] = useState(\"\");\r\n  const [expiryOtpTime, setexpiryOtpTime] = useState(\"\");\r\n\r\n  const requestOtp = async () => {\r\n    if (phoneNumber !== \"\" && phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.requestOTP(phoneNumber);\r\n        // console.log(\"result\", result);\r\n        if (result.status === \"success\") {\r\n          setid(result?.data?.id);\r\n          setexpiryOtpTime(result?.data?.sdatetime);\r\n          setotpVerifydivShowing(true);\r\n          setLoading(false);\r\n        } else {\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setError(\"mobile number should be 10 digits\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await APISDK.verifyOTP(phoneNumber, \"\", otp);\r\n      if (result.status === \"success\") {\r\n        setLoading(false);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        setError(result?.data?.error_msg);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(\"in catch\");\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const verifyPwd = async () => {\r\n    if (password.length !== 0 || password !== \"\") {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.handleverifyPwd(password, phoneNumber);\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          // console.log(\"in else\", result?.data?.error_msg);\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      console.log(\"Password should not be empty\");\r\n    }\r\n  };\r\n\r\n  const showPassDiv = () => {\r\n    if (error === \"\") {\r\n      setshowPwddiv(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginEmp}\r\n      >\r\n        <img src={logoImg} alt=\"Ratnaafin\" className={classes.logo} />\r\n        <h2>Employee Login</h2>\r\n        <div className=\"text\">\r\n          Login with your registered mobile number to access your Ratnaafin\r\n          account.\r\n        </div>\r\n\r\n        {showPwddiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Password for verification\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n\r\n            <Button\r\n              onClick={verifyPwd}\r\n              disabled={password !== \"\" ? false : true}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : otpVerifydivShowing === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"OTP\"\r\n              placeholder=\"OTP for verification\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setotp(e.target.value)}\r\n              autoComplete=\"off\"\r\n              inputProps={{ maxLength: 6 }}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              disabled={otp.length !== 6 ? true : false}\r\n              onClick={verifyOtp}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">+91</InputAdornment>\r\n                ),\r\n              }}\r\n              placeholder=\"Enter mobile number\"\r\n              fullWidth\r\n              className=\"mobileNumber\"\r\n              type=\"number\"\r\n              name=\"phoneNumber\"\r\n              autoComplete=\"off\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setphoneNumber(e.target.value)}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              onClick={requestOtp}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With OTP\r\n            </Button>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n              <div className=\"text\">\r\n                <b>Or</b>\r\n              </div>\r\n            </Box>\r\n\r\n            <Button onClick={showPassDiv} className={classes.loginBtn}>\r\n              Login With Password\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx",["1054"],"import { useNavigate } from \"react-router-dom\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport clsx from \"clsx\";\r\nimport Logo from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const MyDrawer = ({ open, handleDrawerClose, children }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      classes={{\r\n        paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n      }}\r\n      open={open}\r\n    >\r\n      <div className={classes.toolbarIcon}>\r\n        <a\r\n          href=\"#\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(\"./\");\r\n          }}\r\n        >\r\n          <img src={Logo} alt=\"Ratnaafin\" className={classes.logo} />\r\n        </a>\r\n        <IconButton onClick={handleDrawerClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider className={classes.hrCSS} />\r\n      {children}\r\n    </Drawer>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx",["1055"],"import { useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\n\r\nimport Logo from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const MyAppBar = ({ handleDrawerOpen, open }) => {\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const inputRef = useRef(null);\r\n  const theme = useTheme();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"sm\"));\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, open && classes.appBarShift)}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <IconButton\r\n          edge=\"start\"\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={handleDrawerOpen}\r\n          className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        {open !== true ? (\r\n          <a\r\n            href=\"#\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              navigate(\"./\");\r\n            }}\r\n          >\r\n            <img src={Logo} alt=\"Ratnaafin\" className={classes.logo} />\r\n          </a>\r\n        ) : null}\r\n\r\n        <Typography\r\n          component=\"h1\"\r\n          variant=\"h6\"\r\n          color=\"inherit\"\r\n          noWrap\r\n          className={classes.title}\r\n        >\r\n          LOS: Loan Origination System\r\n          <Typography variant=\"caption\" display=\"block\" color=\"secondary\">\r\n            Branch: Rajkot\r\n          </Typography>\r\n          <Typography\r\n            variant=\"caption\"\r\n            display=\"block\"\r\n            color=\"secondary\"\r\n            gutterBottom\r\n          >\r\n            Last Login: 21/11/2020 05:00 PM\r\n          </Typography>\r\n        </Typography>\r\n\r\n        <div\r\n          className={classes.searchRoot}\r\n          style={{ display: desktop ? \"flex\" : \"none\" }}\r\n        >\r\n          <Input\r\n            disableUnderline\r\n            placeholder=\"Search..\"\r\n            type=\"search\"\r\n            id=\"docsearch-input\"\r\n            inputRef={inputRef}\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n          <div className={classes.search}>\r\n            <SearchIcon />\r\n          </div>\r\n        </div>\r\n\r\n        <IconButton color=\"inherit\" className=\"ml-2\">\r\n          <Badge badgeContent={4} color=\"primary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n\r\n        <div className={classes.loggedInUser}>\r\n          <Button\r\n            aria-controls=\"simple-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n            className={classes.nameClass}\r\n          >\r\n            <span className={classes.userName}>Employee Name</span>\r\n            <ArrowDropDownIcon />\r\n          </Button>\r\n          <Menu\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n            elevation={0}\r\n            getContentAnchorEl={null}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                navigate(\"./profile\");\r\n                handleClose();\r\n              }}\r\n            >\r\n              <AccountCircleIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Profile</span>\r\n            </MenuItem>\r\n            <MenuItem\r\n              onClick={() => {\r\n                navigate(\"./iframe\");\r\n                handleClose();\r\n              }}\r\n            >\r\n              <AccountCircleIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Iframe</span>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleClose}>\r\n              <PowerSettingsNewIcon color=\"primary\" />\r\n              <span className={classes.vTop}>Logout</span>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx",["1056","1057","1058"],"import { FC, useState, useMemo, useCallback, useRef } from \"react\";\r\nimport { GridMetaDataType } from \"./types\";\r\nimport { formatSortBy, formatFilterBy, useLocalFilterState } from \"./utils\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { filtersAtom } from \"./atoms\";\r\n\r\nimport { DefaultHeaderColumnRenderer } from \"./components\";\r\nimport { DataGrid } from \"./grid\";\r\nimport { filtersRegistration } from \"./components/filters\";\r\n\r\nexport const GirdController: FC<{\r\n  metaData: GridMetaDataType;\r\n  gridCode: string;\r\n}> = ({ metaData, gridCode }) => {\r\n  const columns = useMemo(() => metaData.columns, []);\r\n  const defaultColumn = useMemo(\r\n    () => ({\r\n      width: 150,\r\n      maxWidth: 400,\r\n      minWidth: 50,\r\n      Header: DefaultHeaderColumnRenderer,\r\n    }),\r\n    []\r\n  );\r\n  const getRowId = useCallback(\r\n    (row) => row[metaData.gridConfig.rowIdColumn],\r\n    []\r\n  );\r\n  const filterTypes = useMemo(() => filtersRegistration, []);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [totalRecords, setTotalRecords] = useState(0);\r\n  const [pageCount, setPageCount] = useState(0);\r\n  const fetchIdCounterRef = useRef(0);\r\n  const localFilterManager = useLocalFilterState();\r\n  const globalFiltersState = useRecoilValue(filtersAtom(gridCode));\r\n\r\n  const fetchData = useCallback(\r\n    ({ pageSize, pageIndex, sortBy, filters }) => {\r\n      setLoading(true);\r\n      const currentFetchId = ++fetchIdCounterRef.current;\r\n      const startRow = Number(pageSize) * Number(pageIndex) + 1;\r\n      const endRow = Number(startRow) + Number(pageSize) - 1;\r\n      let localFilters = formatFilterBy(filters);\r\n      let headerFilters: any[] = [];\r\n      if (globalFiltersState !== null) {\r\n        headerFilters = Object.values(globalFiltersState);\r\n      }\r\n      let combinedFilters = [...headerFilters, ...localFilters];\r\n\r\n      APISDK.fetchGridData(\r\n        gridCode,\r\n        startRow,\r\n        endRow,\r\n        formatSortBy(sortBy),\r\n        combinedFilters\r\n      ).then((result) => {\r\n        if (currentFetchId === fetchIdCounterRef.current) {\r\n          if (result.status === \"success\") {\r\n            setData(result?.data?.rows ?? []);\r\n            setPageCount(\r\n              Math.ceil(\r\n                Number(result?.data?.total_count ?? 1) / Number(pageSize)\r\n              )\r\n            );\r\n            setTotalRecords(Number(result?.data?.total_count ?? 1));\r\n            setLoading(false);\r\n          } else {\r\n            setLoading(false);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    [setTotalRecords, setLoading, setData, globalFiltersState]\r\n  );\r\n\r\n  return (\r\n    <DataGrid\r\n      gridCode={gridCode}\r\n      label={metaData.gridConfig?.gridLabel ?? \"NO_NAME\"}\r\n      globalFilterMeta={metaData?.headerFilters}\r\n      dense={true}\r\n      localFilterManager={localFilterManager}\r\n      globalFiltersState={globalFiltersState}\r\n      getRowId={getRowId}\r\n      columns={columns}\r\n      filterTypes={filterTypes}\r\n      defaultColumn={defaultColumn}\r\n      defaultHiddenColumns={metaData.hiddenColumns}\r\n      loading={loading}\r\n      data={data}\r\n      onFetchData={fetchData}\r\n      pageCount={pageCount}\r\n      totalRecords={totalRecords}\r\n      pageSizes={metaData.gridConfig?.pageSize}\r\n      defaultPageSize={metaData.gridConfig?.defaultPageSize}\r\n      allowColumnReordering={metaData.gridConfig?.allowColumnReordering ?? true}\r\n      allowColumnHiding={metaData.gridConfig?.allowColumnHiding ?? true}\r\n      allowKeyboardNavigation={\r\n        metaData.gridConfig?.allowKeyboardNavigation ?? true\r\n      }\r\n      allowGlobalFilter={metaData.gridConfig?.allowGlobalFilter ?? true}\r\n    />\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\sideBarNavigation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx",["1059","1060"],"import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\nimport { useStyles } from \"./style\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\n\r\nexport const Equifax = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n\r\n  let score = 750;\r\n  return (\r\n    <Box\r\n      className={classes.wrapper}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box className={classes.center} mt={3} mb={3}>\r\n        <h3 className=\"theme-color2\">\r\n          <b>Your Current EQUIFAX Score is</b>\r\n        </h3>\r\n        <ReactSpeedometer\r\n          value={score}\r\n          minValue={300}\r\n          maxValue={900}\r\n          segments={4}\r\n          currentValueText={`${score}`}\r\n          customSegmentLabels={[\r\n            {\r\n              text: \"Poor\",\r\n              color: \"#e53834\",\r\n            },\r\n            {\r\n              text: \"Average\",\r\n              color: \"#ef6c00\",\r\n            },\r\n            {\r\n              text: \"Good\",\r\n              color: \"#cddc39\",\r\n            },\r\n            {\r\n              text: \"Excellent\",\r\n              color: \"#8cc24a\",\r\n            },\r\n          ]}\r\n        />\r\n      </Box>\r\n      <Box\r\n        className=\"links\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"row\"\r\n        mb={3}\r\n      >\r\n        <Button\r\n          className={classes.continueBtn}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx",["1061","1062"],"import { useEffect, useReducer } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport loaderGif from \"assets/images/loader.gif\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useStyles } from \"./style\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\n\r\nconst initialState = {\r\n  currentScreen: \"welcomeOTPVerification\",\r\n  otp: \"\",\r\n  loading: false,\r\n  error: \"\",\r\n  transactionID: \"\",\r\n  verificationSuccessful: false,\r\n  maskedMobileNo: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"updateOTP\":\r\n      return {\r\n        ...state,\r\n        otp: action?.payload,\r\n      };\r\n    case \"startOTPRequest\":\r\n      return {\r\n        ...state,\r\n        error: \"\",\r\n        loading: true,\r\n      };\r\n    case \"endOTPRequestSuccess\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        maskedMobileNo: action?.payload?.mobileNo,\r\n        transactionID: action?.payload?.transactionId,\r\n        error: \"\",\r\n      };\r\n    case \"endOTPRequestFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"startOTPVerification\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: true,\r\n      };\r\n    case \"endOTPVerificationSuccess\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    case \"endOTPVerificationFailure\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeOTPVerification\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const OtpVerificationPage = ({}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n    fallbackURL,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n  const trimmedOTP = state.otp.trim();\r\n  const trimmedOTPLengthValid = trimmedOTP.length === 6;\r\n  const trimmedOTPLengthMsg = \"Otp must be of 6 characters long\";\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"startOTPRequest\",\r\n    });\r\n    if (flowExist) {\r\n      APISDK.requestOTP(refID).then((result) => {\r\n        if (result.status === \"success\") {\r\n          const { mobileNo, transactionId } = result.data;\r\n          dispatch({\r\n            type: \"endOTPRequestSuccess\",\r\n            payload: {\r\n              mobileNo,\r\n              transactionId,\r\n            },\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: \"endOTPRequestFailure\",\r\n            payload: {\r\n              error: \"An unknown error occured, kindly reach raatnafin team\",\r\n            },\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      navigate(fallbackURL);\r\n    }\r\n  }, []);\r\n\r\n  const verifyOTP = () => {\r\n    dispatch({\r\n      type: \"startOTPVerification\",\r\n    });\r\n    if (!Boolean(trimmedOTP)) {\r\n      dispatch({\r\n        type: \"endOTPVerificationFailure\",\r\n        payload: {\r\n          error: \"This is a required Field\",\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    if (!trimmedOTPLengthValid) {\r\n      dispatch({\r\n        type: \"endOTPVerificationFailure\",\r\n        payload: {\r\n          error: trimmedOTPLengthMsg,\r\n        },\r\n      });\r\n      return;\r\n    }\r\n    dispatch({\r\n      type: \"startOTPVerification\",\r\n    });\r\n    APISDK.verifyOTP(refID, state.transactionID, trimmedOTP).then((result) => {\r\n      if (result.status === \"success\") {\r\n        dispatch({\r\n          type: \"endOTPVerificationSuccess\",\r\n          payload: {\r\n            error: \"\",\r\n          },\r\n        });\r\n        navigate(nextURL, nextFlowNavigationProps);\r\n      } else {\r\n        const { message } = result.data;\r\n        dispatch({\r\n          type: \"endOTPVerificationFailure\",\r\n          payload: {\r\n            error: message ?? \"An Unknown error occured\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  let result = (\r\n    <>\r\n      <Typography>Verify OTP </Typography>\r\n      {state.currentScreen === \"welcomeOTPVerification\" ||\r\n      state.maskedMobileNo.trim() !== \"\" ? (\r\n        <>\r\n          <Typography>\r\n            OTP has been sent to your mobile number ending with:\r\n            {state.maskedMobileNo}\r\n          </Typography>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            type=\"email\"\r\n            name=\"otp\"\r\n            fullWidth\r\n            value={state.otp}\r\n            error={Boolean(state.error)}\r\n            helperText={Boolean(state.error) ? state.error : null}\r\n            onChange={(e) =>\r\n              dispatch({\r\n                type: \"updateOTP\",\r\n                payload: e.target.value,\r\n              })\r\n            }\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            InputProps={{\r\n              inputComponent: InputMaskCustom,\r\n              inputProps: {\r\n                MaskProps: {\r\n                  mask: \"0 0 0 0 0 0\",\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <Button\r\n            onClick={verifyOTP}\r\n            color=\"primary\"\r\n            endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n          >\r\n            Verify\r\n          </Button>\r\n        </>\r\n      ) : state.loading === false && Boolean(state.error) ? (\r\n        <Typography>{state.error}</Typography>\r\n      ) : (\r\n        <img\r\n          src={loaderGif}\r\n          style={{ justifyContent: \"center\", margin: \"auto\" }}\r\n          alt=\"loader\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.paper}>\r\n      <div className={classes.paper2}>{result}</div>\r\n    </div>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx",["1063"],"import { useEffect, useRef } from \"react\";\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useSortBy,\r\n  useResizeColumns,\r\n  useBlockLayout,\r\n  useRowSelect,\r\n  useFilters,\r\n  useColumnOrder,\r\n  useAsyncDebounce,\r\n} from \"react-table\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { TableHeaderToolbar } from \"./tableHeaderToolbar\";\r\n\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport { StickyTableHead } from \"./stickyTableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { MyTableRow } from \"./focusableTableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport { TablePaginationActions } from \"./tablePaginationToolbar\";\r\nimport { TableHeaderFilterToolbar } from \"./tableHeaderFilterToolbar\";\r\n\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport { LinearProgressBarSpacer } from \"./linerProgressBarSpacer\";\r\n\r\nimport { CustomBackdrop } from \"./backdrop\";\r\nimport { useCheckboxColumn } from \"./components\";\r\nimport { HeaderCellWrapper } from \"./headerCellWrapper\";\r\nimport { RowCellWrapper } from \"./rowCellWrapper\";\r\n\r\nconst maxWidth = 998;\r\n\r\nexport const DataGrid = ({\r\n  gridCode,\r\n  label,\r\n  dense,\r\n  localFilterManager,\r\n  globalFiltersState,\r\n  columns,\r\n  defaultColumn,\r\n  data,\r\n  onFetchData,\r\n  loading,\r\n  getRowId,\r\n  totalRecords: controlledTotalRecords,\r\n  pageCount: controlledPageCount,\r\n  pageSizes,\r\n  defaultPageSize,\r\n  defaultHiddenColumns,\r\n  filterTypes,\r\n  allowColumnReordering,\r\n  allowColumnHiding,\r\n  allowKeyboardNavigation,\r\n  allowGlobalFilter,\r\n  globalFilterMeta,\r\n}) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    selectedFlatRows,\r\n    totalColumnsWidth,\r\n    gotoPage,\r\n    setPageSize,\r\n    state: tableState,\r\n    setAllFilters,\r\n    setSortBy,\r\n    columns: availableColumns,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      defaultColumn,\r\n      data,\r\n      getRowId,\r\n      filterTypes,\r\n      initialState: {\r\n        pageIndex: 0,\r\n        pageSize: defaultPageSize,\r\n        hiddenColumns: defaultHiddenColumns,\r\n      },\r\n      gridCode,\r\n      manualPagination: true,\r\n      pageCount: controlledPageCount,\r\n      autoResetPage: false,\r\n      manualSortBy: true,\r\n      autoResetSortBy: false,\r\n      manualFilters: true,\r\n      autoResetFilters: false,\r\n      localFilterManager,\r\n      globalFiltersState,\r\n      allowColumnReordering: allowColumnReordering,\r\n    },\r\n    useColumnOrder,\r\n    useFilters,\r\n    useSortBy,\r\n    usePagination,\r\n    useRowSelect,\r\n    useResizeColumns,\r\n    useBlockLayout,\r\n    useCheckboxColumn\r\n    //useSequenceColumn\r\n  );\r\n\r\n  const { pageIndex, pageSize, sortBy, filters } = tableState;\r\n  const cellSize = dense ? 34 : 54;\r\n  const emptyRows = pageSize - Math.min(pageSize, page.length);\r\n  const onFetchDataDebounced = useAsyncDebounce(onFetchData, 500);\r\n\r\n  const tbodyRef = useRef(null);\r\n  const handleKeyDown = (event, row) => {\r\n    event.stopPropagation();\r\n    //@ts-ignore\r\n    const currentRow = tbodyRef.current?.children.namedItem(row.id);\r\n    //@ts-ignore\r\n    let rowToFocus;\r\n    switch (event.keyCode) {\r\n      case 38:\r\n        rowToFocus = currentRow?.previousElementSibling;\r\n        if (rowToFocus !== null) {\r\n          rowToFocus?.focus();\r\n          event.preventDefault();\r\n          //@ts-ignore\r\n          if (rowToFocus.offsetTop > tbodyRef.current?.offsetHeight) {\r\n            console.log(\"need to scroll here\");\r\n          }\r\n        }\r\n        break;\r\n      case 40:\r\n        rowToFocus = currentRow?.nextElementSibling;\r\n        if (rowToFocus !== null) {\r\n          rowToFocus?.focus();\r\n          event.preventDefault();\r\n        }\r\n        break;\r\n      case 32:\r\n        row.toggleRowSelected();\r\n        event.preventDefault();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onFetchDataDebounced({ pageIndex, pageSize, sortBy, filters });\r\n  }, [onFetchDataDebounced, pageIndex, pageSize, sortBy, filters]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    gotoPage(newPage);\r\n  };\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setPageSize(Number(event.target.value));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAllFilters([]);\r\n    setSortBy([]);\r\n    gotoPage(0);\r\n    localFilterManager.clearFilterState();\r\n  }, [globalFiltersState]);\r\n\r\n  return (\r\n    <Paper\r\n      style={{\r\n        width: totalColumnsWidth < maxWidth ? totalColumnsWidth : maxWidth,\r\n      }}\r\n    >\r\n      <TableHeaderToolbar\r\n        label={label}\r\n        dense={dense}\r\n        getRowId={getRowId}\r\n        selectedFlatRows={selectedFlatRows}\r\n        visibleColumns={availableColumns}\r\n        defaultHiddenColumns={defaultHiddenColumns}\r\n        allowColumnHiding={allowColumnHiding}\r\n      />\r\n      {allowGlobalFilter ? (\r\n        <TableHeaderFilterToolbar\r\n          dense={dense}\r\n          filters={globalFilterMeta}\r\n          gridCode={gridCode}\r\n        />\r\n      ) : null}\r\n      {loading ? <LinearProgress /> : <LinearProgressBarSpacer />}\r\n      <TableContainer style={{ position: \"relative\" }}>\r\n        <Table\r\n          component=\"div\"\r\n          {...getTableProps()}\r\n          size={dense ? \"small\" : \"medium\"}\r\n        >\r\n          {/*@ts-ignore*/}\r\n          <StickyTableHead component=\"div\">\r\n            {headerGroups.map((headerGroup) => {\r\n              return (\r\n                <TableRow\r\n                  component=\"div\"\r\n                  {...headerGroup.getHeaderGroupProps()}\r\n                >\r\n                  {headerGroup.headers.map((column) => {\r\n                    return (\r\n                      <HeaderCellWrapper\r\n                        column={column}\r\n                        key={column.getHeaderProps().key}\r\n                      >\r\n                        {column.render(\"Header\")}\r\n                      </HeaderCellWrapper>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </StickyTableHead>\r\n          <TableBody\r\n            component=\"div\"\r\n            ref={tbodyRef}\r\n            {...getTableBodyProps([\r\n              {\r\n                style: {\r\n                  display: \"block\",\r\n                  maxHeight: \"calc(100vh - 42*8px)\",\r\n                },\r\n              },\r\n            ])}\r\n          >\r\n            {page.map((row, index) => {\r\n              prepareRow(row);\r\n              return (\r\n                <MyTableRow\r\n                  {...row.getRowProps()}\r\n                  id={row.id}\r\n                  tabIndex={0}\r\n                  component=\"div\"\r\n                  selected={row.isSelected}\r\n                  onKeyDown={\r\n                    allowKeyboardNavigation\r\n                      ? (e) => handleKeyDown(e, row)\r\n                      : undefined\r\n                  }\r\n                >\r\n                  {row.cells.map((cell) => {\r\n                    return (\r\n                      <RowCellWrapper\r\n                        key={cell.getCellProps().key}\r\n                        cell={cell}\r\n                        index={index}\r\n                      >\r\n                        {cell.render(\"Cell\", { index: index })}\r\n                      </RowCellWrapper>\r\n                    );\r\n                  })}\r\n                </MyTableRow>\r\n              );\r\n            })}\r\n            {emptyRows > 0 ? (\r\n              <TableRow\r\n                component=\"div\"\r\n                style={{ height: emptyRows * cellSize }}\r\n              >\r\n                <TableCell component=\"div\" />\r\n              </TableRow>\r\n            ) : null}\r\n          </TableBody>\r\n        </Table>\r\n        <CustomBackdrop open={loading} />\r\n      </TableContainer>\r\n      <TablePagination\r\n        style={{ display: \"flex\" }}\r\n        variant=\"body\"\r\n        component=\"div\"\r\n        rowsPerPageOptions={pageSizes}\r\n        colSpan={3}\r\n        count={controlledTotalRecords}\r\n        rowsPerPage={Number(pageSize)}\r\n        page={Number(pageIndex)}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        ActionsComponent={TablePaginationActions}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx",["1064","1065","1066"],"import { Fragment, useEffect, useRef, useReducer } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\n\r\nconst initialState = {\r\n  currentScreen: \"welcomeView\",\r\n  loading: false,\r\n  error: \"\",\r\n  verificationSuccessful: false,\r\n  aadharTransactionID: \"\",\r\n  aadharAuthenticationURL: \"\",\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"startAadharRequest\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        error: \"\",\r\n        loading: true,\r\n      };\r\n    case \"endAadharRequestFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"endAadharRequestSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"addharIFrameView\",\r\n        aadharTransactionID: action?.payload?.transactionId,\r\n        aadharAuthenticationURL: action?.payload?.url,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    }\r\n    case \"aadharValidationSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: true,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"aadharValidationFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst timeoutDuration = 5 * 60 * 1000;\r\nconst poolingInterval = 10 * 1000;\r\n\r\nexport const AadharVerification = () => {\r\n  //if needed move this variables to REf state (needs investigation)\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const fetchRequestID = useRef(0);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n    fallbackURL,\r\n  ] = useNavigationFlow(location, \"./thankyou\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    };\r\n  }, []);\r\n\r\n  const handleStartAadharRequest = async () => {\r\n    dispatch({\r\n      type: \"startAadharRequest\",\r\n    });\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(refID);\r\n      if (result.status === \"success\") {\r\n        const { transactionId, url } = result.data;\r\n        dispatch({\r\n          type: \"endAadharRequestSuccess\",\r\n          payload: {\r\n            transactionId,\r\n            url,\r\n          },\r\n        });\r\n        startPooling(transactionId);\r\n      } else {\r\n        dispatch({\r\n          type: \"endAadharRequestFailure\",\r\n          payload: {\r\n            error: \"Couldnt Initiate Aadhar Request an internal error occured\",\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"endAadharRequestFailure\",\r\n        payload: {\r\n          error:\r\n            err?.message?.() ??\r\n            \"Couldnt Initiate Aadhar Request an internal error occured \",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const startPooling = (aadharTransactionID) => {\r\n    intervalRef.current = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(aadharTransactionID).then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === \"success\") {\r\n          if (resp.data.requestStatus === \"failed\") {\r\n            dispatch({\r\n              type: \"aadharValidationFailure\",\r\n              payload: {\r\n                error: \"Failed to validate aadhar\",\r\n              },\r\n            });\r\n          } else if (resp.data.requestStatus === \"success\") {\r\n            dispatch({\r\n              type: \"aadharValidationSuccess\",\r\n              payload: {\r\n                error:\r\n                  \"Congratulations youve successfully verified your aadhar\",\r\n              },\r\n            });\r\n            clearInterval(intervalRef.current as NodeJS.Timeout);\r\n            clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeoutRef.current = setTimeout(() => {\r\n      dispatch({\r\n        type: \"aadharValidationFailure\",\r\n        payload: {\r\n          error: \"Validation timed out\",\r\n        },\r\n      });\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {state.currentScreen === \"welcomeView\" ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ?</span>\r\n          <button\r\n            disabled={state.loading ? true : false}\r\n            onClick={() => {\r\n              handleStartAadharRequest();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              navigate(nextURL, nextFlowNavigationProps);\r\n            }}\r\n          >\r\n            No\r\n          </button>\r\n          {Boolean(state.error) ? (\r\n            <Alert severity={\"error\"}>{state.error}</Alert>\r\n          ) : null}\r\n        </div>\r\n      ) : state.currentScreen === \"addharIFrameView\" ? (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={state.aadharAuthenticationURL}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n        />\r\n      ) : state.currentScreen === \"resultView\" ? (\r\n        <Alert severity={state.verificationSuccessful ? \"success\" : \"error\"}>\r\n          {state.error}\r\n        </Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx",["1067"],"import React, { useState, useReducer, Fragment } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginImg from \"assets/images/login.svg\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { useStyles } from \"./style\";\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [time, setTime] = useState(0);\r\n  const [userPhoneNumberVerified, setUserPhoneNumberVerified] = useState(\"\");\r\n\r\n  const initialState = {\r\n    currentScreen: \"initiateLoginProcessWithPasswordAndOtp\",\r\n    apiOTPId: \"\",\r\n    loading: false,\r\n    apiResult: \"\",\r\n    apiResultStatus: \"\",\r\n    phoneNumber: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"fields\":\r\n        return {\r\n          ...state,\r\n          [action.fieldName]: action.payload,\r\n        };\r\n      case \"startInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"initiateLoginProcessWithOtp\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"verifyOtp\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n          apiOTPId: action.apiOTPId,\r\n        };\r\n      case \"initiateLoginWithPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"loginWithPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"InitiateCreateNewPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"createNewPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"endInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const expiryTime = 60;\r\n\r\n  const requestOtp = async () => {\r\n    if (state.phoneNumber !== \"\" && state.phoneNumber.length === 10) {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.requestOTP(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          dispatch({\r\n            type: \"initiateLoginProcessWithOtp\",\r\n            currentScreen: \"verifyOtp\",\r\n            apiOTPId: result?.data?.id,\r\n            apiResult: result?.status,\r\n          });\r\n          // setexpiryOtpTime(result?.data?.sdatetime);\r\n          displayIntervale();\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const displayIntervale = () => {\r\n    const timerId = setInterval(() => {\r\n      setTime((time) => {\r\n        if (time === expiryTime) {\r\n          clearInterval(timerId);\r\n          return time;\r\n        } else {\r\n          return time + 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const formatTime = (time) =>\r\n    `${String(Math.floor(time / 60)).padStart(2, \"0\")}:${String(\r\n      time % 60\r\n    ).padStart(2, \"0\")}`;\r\n\r\n  const Timer = ({ time }) => {\r\n    const timeRemain = expiryTime - (time % expiryTime);\r\n    return (\r\n      <>\r\n        <div className={classes.OTPTimer}>\r\n          {time === expiryTime ? (\r\n            <div onClick={requestOtp} className={classes.resendLink}>\r\n              Resend OTP\r\n            </div>\r\n          ) : (\r\n            formatTime(timeRemain)\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      let sdatetime = \"20200915110135\";\r\n      const result = await APISDK.verifyOTP(\r\n        state.apiOTPId,\r\n        state.otp,\r\n        sdatetime\r\n      );\r\n      if (result.status === \"success\") {\r\n        if (userPhoneNumberVerified === \"Yes\") {\r\n          dispatch({\r\n            type: \"InitiateCreateNewPassword\",\r\n            currentScreen: \"createNewPassword\",\r\n            apiResult: result.status,\r\n            apiResultStatus: result?.data?.message,\r\n          });\r\n        } else {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: result?.data?.error_msg,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n        apiResultStatus: e,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    dispatch({\r\n      type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n    });\r\n    if (\r\n      state.newPassword !== \"\" &&\r\n      state.confirmNewPassword !== \"\" &&\r\n      state.newPassword === state.confirmNewPassword\r\n    ) {\r\n      try {\r\n        const result = await APISDK.updateUserPassword(\r\n          state.confirmNewPassword,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkUserNumberAndPasswordExist = async () => {\r\n    if (state.apiResultStatus === \"\" && state.phoneNumber.length === 10) {\r\n      try {\r\n        dispatch({\r\n          type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n        });\r\n        const result = await APISDK.checkPhoneNumberExists(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"N\"\r\n          ) {\r\n            setUserPhoneNumberVerified(\"Yes\");\r\n            requestOtp();\r\n          } else if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"Y\"\r\n          ) {\r\n            dispatch({\r\n              type: \"initiateLoginWithPassword\",\r\n              currentScreen: \"loginWithPassword\",\r\n              apiResult: result.status,\r\n              apiResultStatus: result?.data?.message,\r\n            });\r\n          }\r\n        } else {\r\n          if (result?.data?.error_cd === \"-999\") {\r\n            dispatch({\r\n              type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n              apiResultStatus: result?.data?.error_msg,\r\n            });\r\n          }\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const verifyPwd = async () => {\r\n    if (state.password.length !== 0 || state.password !== \"\") {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.handleverifyPwd(\r\n          state.password,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginLeft}\r\n        >\r\n          <img alt=\"\" src={loginImg} className={classes.loginImg} />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginRight}\r\n        >\r\n          <h2>Cutomer Login</h2>\r\n          <div className=\"text\">\r\n            Login with your registered mobile number to access your Ratnaafin\r\n            account.\r\n          </div>\r\n\r\n          {state.currentScreen === \"initiateLoginProcessWithPasswordAndOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Mobile Number\"\r\n                placeholder=\"Enter mobile number\"\r\n                fullWidth\r\n                className=\"mobileNumber\"\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={state.phoneNumber}\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"phoneNumber\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0000000000\",\r\n                    },\r\n                  },\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">+91</InputAdornment>\r\n                  ),\r\n                }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={requestOtp}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With OTP\r\n              </Button>\r\n              <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n                <div className=\"text text-center\">Or</div>\r\n              </Box>\r\n              <Button\r\n                onClick={checkUserNumberAndPasswordExist}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With Password\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"verifyOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"OTP\"\r\n                placeholder=\"OTP for verification\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                type=\"email\"\r\n                name=\"otp\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"otp\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.otp}\r\n                inputProps={{ maxLength: 6 }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0 0 0 0 0 0\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              <Timer time={time} />\r\n              <Button\r\n                disabled={state.otp.length !== 6 ? true : false}\r\n                onClick={verifyOtp}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"createNewPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Create Password\"\r\n                placeholder=\"Create password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"newPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.newPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"confirmNewPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"confirmNewPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.confirmNewPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={updateNewPassword}\r\n                disabled={\r\n                  state.newPassword !== \"\" || state.confirmNewPassword !== \"\"\r\n                    ? false\r\n                    : true\r\n                }\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"loginWithPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Password for verification\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"password\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.password}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={verifyPwd}\r\n                disabled={state.password !== \"\" ? false : true}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\confirmationBox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx",["1068","1069"],"import { FC, useState, useRef, Suspense, cloneElement, Fragment } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport { useForm, SubmitFnType, formFieldsExcludedAtom } from \"packages/form\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { GroupWiseRenderedFieldsType, FormRenderConfigType } from \"./types\";\r\nimport { useStyles } from \"./style\";\r\nimport { MyStepper } from \"./stepperForm\";\r\nimport { MyTabs } from \"./tabsForm\";\r\n\r\ninterface FormProps {\r\n  fields: GroupWiseRenderedFieldsType;\r\n  formRenderConfig: FormRenderConfigType;\r\n  formDisplayName: string;\r\n  formName: string;\r\n  submitFn: SubmitFnType;\r\n}\r\n\r\nexport const GroupedForm: FC<FormProps> = ({\r\n  fields,\r\n  formRenderConfig,\r\n  formDisplayName,\r\n  formName,\r\n  submitFn,\r\n}) => {\r\n  const defaultGroupName = \"DefaultGroup\";\r\n  const excludedFields = useRecoilValue(formFieldsExcludedAtom(formName));\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const { handleSubmit, handleSubmitPartial } = useForm({\r\n    onSubmit: submitFn,\r\n  });\r\n  const fieldGroups = useRef<string[]>(Object.keys(fields).sort());\r\n  const fieldGroupsActiveStatus = fieldGroups.current.map((one) => {\r\n    let groupName = defaultGroupName;\r\n    if (typeof formRenderConfig.groups === \"object\") {\r\n      groupName = formRenderConfig.groups[one];\r\n    }\r\n    return {\r\n      index: one,\r\n      name: groupName,\r\n      status: isGroupExcluded(formName, fields[one].fieldNames, excludedFields),\r\n    };\r\n  });\r\n\r\n  const handleNext = async () => {\r\n    if (!isLastActiveStep(activeStep, fieldGroupsActiveStatus)) {\r\n      const currentStep = fieldGroupsActiveStatus[activeStep];\r\n      const currentFieldsToValidate = fields[currentStep.index].fieldNames;\r\n      let hasError = await handleSubmitPartial(currentFieldsToValidate);\r\n      //In debug mode allow to move to next step without validating\r\n      if (process.env.REACT_APP_DEBUG_MODE === \"true\") {\r\n        hasError = false;\r\n      }\r\n      if (!hasError) {\r\n        const nextStep = getNextActiveStep(activeStep, fieldGroupsActiveStatus);\r\n        setActiveStep(nextStep);\r\n      }\r\n    }\r\n  };\r\n  const handlePrev = () => {\r\n    if (activeStep > 0) {\r\n      let step = getPrevActiveStep(activeStep, fieldGroupsActiveStatus);\r\n      setActiveStep(step);\r\n    }\r\n  };\r\n\r\n  const steps = fieldGroups.current.map((one, index) => {\r\n    const current = fields[one];\r\n    current.fields[0] = cloneElement(current.fields[0], {\r\n      isFieldFocused: index === activeStep ? true : false,\r\n    });\r\n    const hideMe = index !== Number(activeStep) ? { display: \"none\" } : {};\r\n    return (\r\n      <Grid\r\n        key={one}\r\n        container={true}\r\n        spacing={formRenderConfig?.gridConfig?.container?.spacing ?? 2}\r\n        direction={formRenderConfig?.gridConfig?.container?.direction ?? \"row\"}\r\n        style={hideMe}\r\n      >\r\n        {current.fields}\r\n      </Grid>\r\n    );\r\n  });\r\n  const filteredFieldGroups = fieldGroupsActiveStatus.filter(\r\n    (one) => one.status\r\n  );\r\n  const CURRENT_COMPONENT =\r\n    formRenderConfig.renderType === \"stepper\" ? MyStepper : MyTabs;\r\n\r\n  return (\r\n    <CURRENT_COMPONENT\r\n      key={formRenderConfig.renderType}\r\n      classes={classes}\r\n      formDisplayName={formDisplayName}\r\n      activeStep={activeStep}\r\n      filteredFieldGroups={filteredFieldGroups}\r\n      formRenderConfig={formRenderConfig}\r\n      defaultGroupName={defaultGroupName}\r\n      fieldGroups={fieldGroups}\r\n      fieldGroupsActiveStatus={fieldGroupsActiveStatus}\r\n      steps={steps}\r\n      handlePrev={handlePrev}\r\n      handleNext={handleNext}\r\n      handleSubmit={handleSubmit}\r\n      isLastActiveStep={isLastActiveStep}\r\n      setActiveStep={setActiveStep}\r\n    />\r\n  );\r\n};\r\n\r\nconst isGroupExcluded = (\r\n  formName: string,\r\n  currentGroupFields: string[],\r\n  excludedFields: string[]\r\n) => {\r\n  const remaningFields = currentGroupFields.filter((fieldName) => {\r\n    const fullFieldName = `${formName}/${fieldName}`;\r\n    return excludedFields.indexOf(fullFieldName) >= 0 ? false : true;\r\n  });\r\n  if (remaningFields.length > 0) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst getNextActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  for (let i = currentStep + 1; i < fieldGroupsActiveStatus.length; i++) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return currentStep;\r\n};\r\n\r\nconst getPrevActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  for (let i = currentStep - 1; i >= 0; i--) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      return i;\r\n    }\r\n  }\r\n  return currentStep;\r\n};\r\n\r\nconst isLastActiveStep = (\r\n  currentStep: number,\r\n  fieldGroupsActiveStatus: {\r\n    name: string;\r\n    status: boolean;\r\n  }[]\r\n) => {\r\n  let finalStep = currentStep;\r\n  for (let i = currentStep + 1; i < fieldGroupsActiveStatus.length; i++) {\r\n    if (fieldGroupsActiveStatus[i].status === true) {\r\n      finalStep = i;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return finalStep === currentStep;\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx",["1070"],"import { useEffect, useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { FilterContainer } from \"./filterContainer\";\r\nimport { StyledTextField, StyledMenuItem } from \"./styledComponents\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\n\r\n// const ITEM_HEIGHT = 48;\r\n// const ITEM_PADDING_TOP = 8;\r\n\r\nexport const OptionsFilter = (props) => {\r\n  const {\r\n    column: {\r\n      filterValue,\r\n      setFilter,\r\n      filterComponentProps: { selectType },\r\n      id,\r\n    },\r\n    globalFiltersState,\r\n    localFilterManager,\r\n    gridCode,\r\n    handleClose,\r\n    setSortBy,\r\n    gotoPage,\r\n  } = props;\r\n  console.log(props);\r\n  const isMultiple = selectType === \"multiple\" ? true : false;\r\n  const [loading, setLoading] = useState(false);\r\n  const [_options, setOptions] = useState(\r\n    localFilterManager.getFilterState(id)?.options ?? []\r\n  );\r\n  const defaultValue = Boolean(filterValue?.value)\r\n    ? filterValue?.value\r\n    : isMultiple\r\n    ? []\r\n    : \"\";\r\n\r\n  const [value, setValue] = useState<string | string[]>(defaultValue);\r\n  useEffect(() => {\r\n    if (!Boolean(localFilterManager.getFilterState(id))) {\r\n      setLoading(true);\r\n      const verifiedGlobalFilter =\r\n        typeof globalFiltersState === \"object\" && globalFiltersState !== null\r\n          ? Object.values(globalFiltersState)\r\n          : [];\r\n      APISDK.fetchGridColumnFilterProps(gridCode, {\r\n        accessor: id,\r\n        result_type: \"getGroups\",\r\n        filter_conditions: verifiedGlobalFilter,\r\n      }).then((result) => {\r\n        if (result.status === \"success\") {\r\n          localFilterManager.addFilterState(id, {\r\n            options: result.data?.groups,\r\n          });\r\n          setOptions(result.data?.groups ?? []);\r\n          setLoading(false);\r\n        } else {\r\n          setLoading(false);\r\n          setOptions([{ label: \"Couldnt load data\", value: \"\" }]);\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleSelectChange = (event: React.ChangeEvent<any>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const applyFilter = () => {\r\n    setFilter({\r\n      condition: isMultiple ? \"in\" : \"equal\",\r\n      value,\r\n    });\r\n    setSortBy([]);\r\n    gotoPage(0);\r\n    handleClose();\r\n  };\r\n  const clearFilter = () => {\r\n    setFilter(\"\");\r\n    setSortBy([]);\r\n    gotoPage(0);\r\n    handleClose();\r\n  };\r\n\r\n  const menuItems = _options.map((menuItem, index) => {\r\n    return (\r\n      <StyledMenuItem\r\n        //keep button value to true else keyboard navigation for select will stop working\r\n        button={true}\r\n        key={menuItem.value ?? index}\r\n        value={menuItem.value}\r\n      >\r\n        {isMultiple ? (\r\n          <Checkbox\r\n            checked={\r\n              Boolean(isMultiple)\r\n                ? Array.isArray(value) && value.indexOf(menuItem.value) >= 0\r\n                : value === menuItem.value\r\n            }\r\n          />\r\n        ) : null}\r\n        {menuItem.label}\r\n      </StyledMenuItem>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <FilterContainer applyFilter={applyFilter} clearFilter={clearFilter}>\r\n      {(classes) => (\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          px={2}\r\n          mt={2}\r\n        >\r\n          <FormControl fullWidth>\r\n            <StyledTextField\r\n              fullWidth\r\n              select={true}\r\n              value={value}\r\n              SelectProps={{\r\n                multiple: isMultiple ? true : false,\r\n                native: false,\r\n                renderValue: isMultiple\r\n                  ? (values: any[] | any) => {\r\n                      if (!Array.isArray(values)) {\r\n                        values = [values];\r\n                      }\r\n                      if (Array.isArray(_options)) {\r\n                        return _options.reduce((acc, current) => {\r\n                          if (values.indexOf(current.value) >= 0) {\r\n                            if (acc === \"\") {\r\n                              return current.label;\r\n                            } else {\r\n                              return `${acc},${current.label}`;\r\n                            }\r\n                          }\r\n                          return acc;\r\n                        }, \"\");\r\n                      }\r\n                      return \"\";\r\n                    }\r\n                  : undefined,\r\n              }}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              InputProps={{\r\n                endAdornment: loading ? (\r\n                  <InputAdornment position=\"end\">\r\n                    <CircularProgress color=\"primary\" variant=\"indeterminate\" />\r\n                  </InputAdornment>\r\n                ) : null,\r\n              }}\r\n              onChange={handleSelectChange}\r\n              className={classes.multipleSelect}\r\n            >\r\n              {menuItems}\r\n            </StyledTextField>\r\n          </FormControl>\r\n        </Box>\r\n      )}\r\n    </FilterContainer>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\tabsForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\stepperForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx",["1071"],"import { Editor } from \"@tinymce/tinymce-react\";\r\n\r\nexport const TextEditor = () => {\r\n  const handleEditorChange = (content, editor) => {};\r\n\r\n  return (\r\n    <Editor\r\n      initialValue=\"<p>This is the initial content of the editor</p>\"\r\n      apiKey=\"pc8b933js2e6hly9nkp1ha2nuyak0anqgq47c31y2kontd64\"\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          \"advlist autolink lists link image charmap print preview anchor\",\r\n          \"searchreplace visualblocks code fullscreen\",\r\n          \"insertdatetime media table paste code help wordcount\",\r\n        ],\r\n        toolbar:\r\n          \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | insertdatetime | table | help\",\r\n      }}\r\n      onEditorChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx",["1072"],"import { FC, useEffect, useRef, useState, useCallback, Fragment } from \"react\";\r\nimport { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport Grid, { GridProps } from \"@material-ui/core/Grid\";\r\nimport CircularProgress, {\r\n  CircularProgressProps,\r\n} from \"@material-ui/core/CircularProgress\";\r\nimport Autocomplete, {\r\n  AutocompleteProps,\r\n  createFilterOptions,\r\n} from \"@material-ui/lab/Autocomplete\";\r\nimport { CreateFilterOptionsConfig } from \"@material-ui/lab/useAutocomplete\";\r\nimport { Checkbox } from \"components/styledComponent/checkbox\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport { useField, UseFieldHookProps } from \"packages/form\";\r\nimport { Merge, OptionsProps, dependentOptionsFn } from \"../types\";\r\nimport Chip, { ChipProps } from \"@material-ui/core/Chip\";\r\nimport match from \"autosuggest-highlight/match\";\r\nimport parse from \"autosuggest-highlight/parse\";\r\nimport { useOptionsFetcher } from \"../utils\";\r\n\r\n//will use it if there is a neeed for advance sorter\r\n//import matchSorter from \"match-sorter\";\r\n\r\ninterface AutoCompleteExtendedProps {\r\n  enableGrid: boolean;\r\n  showCheckbox: boolean;\r\n  GridProps?: GridProps;\r\n  CircularProgressProps?: CircularProgressProps;\r\n  TextFieldProps?: TextFieldProps;\r\n  ChipProps?: ChipProps;\r\n  CreateFilterOptionsConfig?: CreateFilterOptionsConfig<OptionsProps>;\r\n  options?: OptionsProps[] | dependentOptionsFn;\r\n  label?: string;\r\n  placeholder?: string;\r\n  required?: boolean;\r\n}\r\n\r\ntype MyAutocompleteProps = Merge<\r\n  AutocompleteProps<OptionsProps, true, true, true>,\r\n  AutoCompleteExtendedProps\r\n>;\r\n\r\nexport type MyAllAutocompleteProps = Merge<\r\n  MyAutocompleteProps,\r\n  UseFieldHookProps\r\n>;\r\n\r\nconst getOptionLabel = (option: OptionsProps) => option?.label ?? \"\";\r\n\r\nconst MyAutocomplete: FC<MyAllAutocompleteProps> = ({\r\n  name: fieldName,\r\n  validate,\r\n  validationRun,\r\n  shouldExclude,\r\n  isReadOnly,\r\n  postValidationSetCrossFieldValues,\r\n  runPostValidationHookAlways,\r\n  dependentFields,\r\n  fieldKey: fieldID,\r\n  options,\r\n  GridProps,\r\n  enableGrid,\r\n  multiple,\r\n  disableClearable,\r\n  freeSolo,\r\n  TextFieldProps,\r\n  CircularProgressProps,\r\n  ChipProps,\r\n  //@ts-ignore\r\n  isFieldFocused,\r\n  showCheckbox,\r\n  CreateFilterOptionsConfig,\r\n  runValidationOnDependentFieldsChange,\r\n  label,\r\n  placeholder,\r\n  limitTags,\r\n  required,\r\n  ...others\r\n}) => {\r\n  const {\r\n    formState,\r\n    error,\r\n    touched,\r\n    handleChange,\r\n    handleBlur,\r\n    runValidation,\r\n    isSubmitting,\r\n    validationRunning,\r\n    fieldKey,\r\n    name,\r\n    dependentValues,\r\n    excluded,\r\n    incomingMessage,\r\n    whenToRunValidation,\r\n  } = useField({\r\n    name: fieldName,\r\n    fieldKey: fieldID,\r\n    dependentFields,\r\n    validate,\r\n    validationRun,\r\n    runPostValidationHookAlways,\r\n    postValidationSetCrossFieldValues,\r\n    isReadOnly,\r\n    shouldExclude,\r\n    runValidationOnDependentFieldsChange,\r\n  });\r\n\r\n  const focusRef = useRef();\r\n  useEffect(() => {\r\n    if (isFieldFocused) {\r\n      setTimeout(() => {\r\n        //@ts-ignore\r\n        focusRef?.current?.focus?.();\r\n      }, 1);\r\n    }\r\n  }, [isFieldFocused]);\r\n\r\n  const [_options, setOptions] = useState<OptionsProps[]>([]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const { loadingOptions } = useOptionsFetcher(\r\n    formState,\r\n    options,\r\n    setOptions,\r\n    handleChange,\r\n    dependentValues,\r\n    incomingMessage,\r\n    runValidation,\r\n    whenToRunValidation\r\n  );\r\n\r\n  //dont move it to top it can mess up with hooks calling mechanism, if there is another\r\n  //hook added move this below all hook calls\r\n  if (excluded) {\r\n    return null;\r\n  }\r\n  const isError = touched && (error ?? \"\") !== \"\";\r\n  const result = (\r\n    <Autocomplete\r\n      {...others}\r\n      limitTags={limitTags ?? 2}\r\n      key={fieldKey}\r\n      multiple={multiple}\r\n      disableClearable={disableClearable}\r\n      freeSolo={freeSolo}\r\n      options={_options}\r\n      getOptionLabel={getOptionLabel}\r\n      onChange={(_, value) => {\r\n        if (!Array.isArray(value)) {\r\n          value = [value];\r\n        }\r\n        value = value.map((one) => {\r\n          if (typeof one === \"object\") {\r\n            return getOptionLabel(one);\r\n          }\r\n          return one;\r\n        });\r\n        handleChange(value);\r\n      }}\r\n      onBlur={handleBlur}\r\n      disabled={isSubmitting}\r\n      filterOptions={\r\n        Boolean(CreateFilterOptionsConfig) &&\r\n        typeof CreateFilterOptionsConfig === \"object\"\r\n          ? createFilterOptions(CreateFilterOptionsConfig)\r\n          : undefined\r\n      }\r\n      renderTags={(value, getTagProps) => {\r\n        return value.map((option, index) => {\r\n          if (typeof option === \"string\") {\r\n            return (\r\n              <Chip\r\n                key={option}\r\n                variant=\"outlined\"\r\n                {...ChipProps}\r\n                label={option}\r\n                {...getTagProps({ index })}\r\n              />\r\n            );\r\n          }\r\n          return (\r\n            <Chip\r\n              key={`${option.label}-${index}`}\r\n              variant=\"outlined\"\r\n              {...ChipProps}\r\n              label={option.label}\r\n              {...getTagProps({ index })}\r\n            />\r\n          );\r\n        });\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...TextFieldProps}\r\n          {...params}\r\n          name={name}\r\n          label={label}\r\n          placeholder={placeholder}\r\n          value={inputValue}\r\n          autoComplete=\"disabled\"\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          type=\"text\"\r\n          error={isError}\r\n          required={required}\r\n          helperText={isError ? error : null}\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <Fragment>\r\n                {validationRunning || loadingOptions ? (\r\n                  <CircularProgress\r\n                    color=\"primary\"\r\n                    variant=\"indeterminate\"\r\n                    {...CircularProgressProps}\r\n                  />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </Fragment>\r\n            ),\r\n          }}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          inputProps={{\r\n            ...params.inputProps,\r\n            autoComplete: \"new-user-street-address\",\r\n          }}\r\n        />\r\n      )}\r\n      renderOption={(option, { selected }) => {\r\n        let label = getOptionLabel(option);\r\n        const matches = match(label, inputValue);\r\n        const parts = parse(label, matches);\r\n        const labelJSX = parts.map((part, index) => (\r\n          <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n            {part.text}\r\n          </span>\r\n        ));\r\n        return (\r\n          <Fragment>\r\n            {showCheckbox ? <Checkbox checked={selected} /> : null}\r\n            {labelJSX}\r\n          </Fragment>\r\n        );\r\n      }}\r\n    />\r\n  );\r\n  if (Boolean(enableGrid)) {\r\n    return <Grid {...GridProps}>{result}</Grid>;\r\n  } else {\r\n    return result;\r\n  }\r\n};\r\n\r\nexport default MyAutocomplete;\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\optionsFetcher.ts",["1073","1074"],"import { useState, useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport const useOptionsFetcher = (\r\n  formState,\r\n  options,\r\n  setOptions,\r\n  handleChangeInterceptor,\r\n  dependentValues,\r\n  incomingMessage,\r\n  runValidation,\r\n  whenToRunValidation\r\n) => {\r\n  const lastOptionsPromise = useRef<Promise<any> | null>(null);\r\n  const [loadingOptions, setLoadingOptions] = useState(false);\r\n\r\n  //formState value mutates causing this component to rerender, need to fix\r\n  //for now we wont pass form state as depedency and fix it but needs investigation why this\r\n  //is happening\r\n  const syncAsyncSetOptions = useCallback(\r\n    (options, dependentValues) => {\r\n      if (Array.isArray(options)) {\r\n        setOptions(options);\r\n      } else if (typeof options === \"function\") {\r\n        try {\r\n          setLoadingOptions(true);\r\n          setOptions([{ label: \"loading...\", value: null }]);\r\n          let currentPromise = Promise.resolve(\r\n            options(dependentValues, formState)\r\n          );\r\n          lastOptionsPromise.current = currentPromise;\r\n          currentPromise\r\n            .then((result) => {\r\n              setLoadingOptions(false);\r\n              if (lastOptionsPromise.current === currentPromise) {\r\n                if (Array.isArray(result)) {\r\n                  setOptions(result);\r\n                } else {\r\n                  setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n                  console.log(\r\n                    `expected optionsFunction in select component to return array of OptionsType but got: ${result}`\r\n                  );\r\n                }\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              setLoadingOptions(false);\r\n              setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n              console.log(`error occured while fetching options`, e?.message);\r\n            });\r\n        } catch (e) {\r\n          setLoadingOptions(false);\r\n          setOptions([{ label: \"Couldn't fetch\", value: null }]);\r\n          console.log(`error occured while fetching options`, e?.message);\r\n        }\r\n      }\r\n    },\r\n    [setOptions]\r\n  );\r\n  const values = useRef({\r\n    options,\r\n    dependentValues,\r\n    syncAsyncSetOptions,\r\n    formState,\r\n  });\r\n  useEffect(() => {\r\n    syncAsyncSetOptions(options, dependentValues);\r\n  }, [options, dependentValues, syncAsyncSetOptions]);\r\n\r\n  useEffect(() => {\r\n    if (incomingMessage !== null && typeof incomingMessage === \"object\") {\r\n      const { value, options } = incomingMessage;\r\n      handleChangeInterceptor(value);\r\n      if (whenToRunValidation === \"onBlur\") {\r\n        runValidation({ value: value }, true);\r\n      }\r\n      if (Array.isArray(options)) {\r\n        setOptions(options);\r\n      }\r\n    }\r\n  }, [\r\n    incomingMessage,\r\n    setOptions,\r\n    handleChangeInterceptor,\r\n    runValidation,\r\n    whenToRunValidation,\r\n  ]);\r\n\r\n  return { loadingOptions };\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\utils\\utils.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\wrapper.tsx",["1075"],"import { FC } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport { renderValuesByGroup } from \"../utils/groupWiserenderer\";\r\nimport { MoveSequenceToRender } from \"../utils/fixSequenceInMetaData\";\r\nimport { attachValuesToMetaData } from \"../utils/attachValuesToMetaData\";\r\nimport { ViewFormWrapperProps } from \"./types\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { GroupedView } from \"./groupedView\";\r\nimport { SimpleView } from \"./simpleView\";\r\nimport { MetaDataType, FormMetaDataType } from \"../types\";\r\nimport { useStyles } from \"../style\";\r\n\r\nexport const ViewFormWrapper: FC<ViewFormWrapperProps> = ({\r\n  metaData,\r\n  formDisplayValues,\r\n  hidden = false,\r\n  isSubmitting,\r\n  onAccept,\r\n  onReject,\r\n  children,\r\n}) => {\r\n  metaData = MoveSequenceToRender(metaData);\r\n  const transformedFields = attachValuesToMetaData(\r\n    metaData.fields,\r\n    formDisplayValues ?? {}\r\n  );\r\n  const transformedMetaData = {\r\n    form: metaData.form,\r\n    fields: transformedFields,\r\n  } as MetaDataType;\r\n  const groupWiseFields = renderValuesByGroup(transformedMetaData);\r\n  const formRenderType = transformedMetaData.form.render.renderType ?? \"simple\";\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" style={{ display: hidden ? \"none\" : \"block\" }}>\r\n      <Typography component=\"h3\" className={classes.title}>\r\n        {metaData.form.label} View Only\r\n      </Typography>\r\n      <Divider />\r\n      <div className={classes.form}>\r\n        {formRenderType === \"stepper\" || formRenderType === \"tabs\" ? (\r\n          <GroupedView\r\n            key={`${metaData.form.name}-grouped`}\r\n            fields={groupWiseFields}\r\n            formRenderConfig={metaData.form.render}\r\n            classes={classes}\r\n          />\r\n        ) : formRenderType === \"simple\" ? (\r\n          <SimpleView\r\n            key={`${metaData.form.name}-simple`}\r\n            fields={groupWiseFields}\r\n            formRenderConfig={metaData.form.render}\r\n          />\r\n        ) : (\r\n          <div>RenderType {formRenderType} not available</div>\r\n        )}\r\n      </div>\r\n      {typeof children === \"function\"\r\n        ? children({\r\n            classes,\r\n            isSubmitting,\r\n            formMetaData: transformedMetaData.form as FormMetaDataType,\r\n            onAccept,\r\n            onReject,\r\n          })\r\n        : children}\r\n    </Container>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\navigation\\bootstrapNavigation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\simpleView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\view\\groupedView.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx",["1076"],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\generateLead.tsx",["1077"],"import { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.04)\",\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n\r\n  formLabel: {\r\n    fontWeight: 600,\r\n  },\r\n  formValue: {\r\n    fontWeight: 500,\r\n    color: \"#0063A3\",\r\n  },\r\n  marginSet: {\r\n    margin: theme.spacing(3, 0),\r\n  },\r\n\r\n  DialogTitle: {\r\n    color: \"#0063A3\",\r\n    borderBottom: \"1px solid #ddd\",\r\n  },\r\n  DetailsTitle: {\r\n    color: \"#26A456\",\r\n    letterSpacing: \"2px\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: 700,\r\n    alignSelf: \"flex-start\",\r\n    margin: \"0\",\r\n  },\r\n\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    fontSize: \"1.2rem\",\r\n    background:\r\n      \"linear-gradient(-90deg, rgba(94,231,131,1) 0%, rgba(74,205,159,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    border: 0,\r\n    color: \"#fff !important\",\r\n    padding: \"4px .75rem\",\r\n    fontWeight: 700,\r\n    minWidth: \"120px\",\r\n    letterSpacing: \"0.02857em\",\r\n    boxShadow: \"none\",\r\n    textTransform: \"capitalize\",\r\n    borderRadius: \"24px\",\r\n    alignSelf: \"flex-end\",\r\n    \"&:hover\": {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(94,231,131,1) 0%, rgba(74,204,160,1) 35%, rgba(33,150,218,1) 100%)\",\r\n      boxShadow: \"none\",\r\n    },\r\n  },\r\n  backBtn: {\r\n    boxShadow:\r\n      \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\r\n    background: \"#e0e0e0\",\r\n    color: \"#0b6fb8 !important\",\r\n    margin: theme.spacing(3, 2, 2),\r\n    fontSize: \"1.2rem\",\r\n    borderRadius: \"24px\",\r\n    fontWeight: 700,\r\n    minWidth: \"120px\",\r\n    letterSpacing: \"0.02857em\",\r\n    padding: \"4px .75rem\",\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      color: \"#0b6fb8 !important\",\r\n      background: \"#e0e0e0\",\r\n      boxShadow:\r\n        \"0px 3px 1px -2px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 1px 5px 0px rgba(0,0,0,0.12)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport const DisplayData = ({ onClose, open, row }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const [temp, setTemp] = useState({});\r\n  const [assignemployeeList, setAssignEmployeeList] = useState<any[]>([]);\r\n  const [employeevalue, setEmployeeValue] = useState(\"\");\r\n\r\n  let refID = row;\r\n\r\n  const data = [\r\n    {\r\n      label: \"Product Type\",\r\n      type: \"text\",\r\n      name: \"productType\",\r\n    },\r\n    {\r\n      label: \"Cutomer Name\",\r\n      type: \"text\",\r\n      name: \"name\",\r\n    },\r\n    {\r\n      label: \"Gender\",\r\n      type: \"text\",\r\n      name: \"gender\",\r\n    },\r\n    {\r\n      label: \"Date of Birth\",\r\n      type: \"text\",\r\n      name: \"birth_dt\",\r\n    },\r\n    {\r\n      label: \"Desired Loan Amount\",\r\n      type: \"text\",\r\n      name: \"desired_loan_amt\",\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      type: \"text\",\r\n      name: \"email\",\r\n    },\r\n    {\r\n      label: \"Mobile No\",\r\n      type: \"text\",\r\n      name: \"phoneNumber\",\r\n    },\r\n    {\r\n      label: \"Currently Employed\",\r\n      type: \"text\",\r\n      name: \"employementStatus\",\r\n    },\r\n    {\r\n      label: \"Address\",\r\n      type: \"text\",\r\n      name: \"address\",\r\n    },\r\n    {\r\n      label: \"Lead Status\",\r\n      type: \"text\",\r\n      name: \"inquiry_status\",\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const fetcher = async () => {\r\n      const result = await APISDK.getInquiryDataToConvertIntoLead(refID);\r\n      try {\r\n        if (result.status === \"success\") {\r\n          let editableData = result.data;\r\n          setTemp({\r\n            productType: editableData.productID,\r\n            name:\r\n              editableData.firstName +\r\n              \" \" +\r\n              editableData.middleName +\r\n              \" \" +\r\n              editableData.lastName,\r\n            gender: editableData.gender,\r\n            birth_dt: editableData.dob,\r\n            desired_loan_amt: editableData.loanAmount,\r\n            email: editableData.email,\r\n            phoneNumber: editableData.mobileNo,\r\n            employementStatus: editableData.employementStatus,\r\n            address: editableData.location,\r\n            inquiry_status: editableData.status,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        console.log(\"in catch\");\r\n      }\r\n    };\r\n    fetcher();\r\n    getLeadAssignEmployeeList();\r\n  }, []);\r\n\r\n  const getLeadAssignEmployeeList = async () => {\r\n    const result = await APISDK.getTeamLeaList();\r\n    let employeeList = [] as any;\r\n    for (let i = 0; i < result.data.length; i++) {\r\n      employeeList.push({\r\n        label: result.data[i].fullname,\r\n        value: result.data[i].empID,\r\n      });\r\n    }\r\n    setAssignEmployeeList(employeeList);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        maxWidth=\"md\"\r\n        open={open}\r\n        onClose={onClose}\r\n        aria-labelledby=\"Details\"\r\n      >\r\n        <DialogTitle id=\"Details\" className={classes.DialogTitle}>\r\n          Convert to Lead\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <Grid container spacing={2}>\r\n              {data.map((res) => {\r\n                return temp[res.name] ? (\r\n                  <Grid item xs={12} sm={6} md={6}>\r\n                    <Paper className={classes.paper}>\r\n                      <Box display=\"flex\" flexDirection=\"row\">\r\n                        <Box width=\"40%\" className={classes.formLabel}>\r\n                          {res.label}:\r\n                        </Box>\r\n                        <Box width=\"60%\" className={classes.formValue}>\r\n                          {temp[res.name]}\r\n                        </Box>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                ) : null;\r\n              })}\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6} md={6}>\r\n                  <TextField\r\n                    select\r\n                    label=\"Lead Assign to Employee\"\r\n                    placeholder=\"Select Employee\"\r\n                    fullWidth\r\n                    required\r\n                    name=\"leadtatus\"\r\n                    autoComplete=\"off\"\r\n                    onChange={(e) => setEmployeeValue(e.target.value)}\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                    value={employeevalue}\r\n                  >\r\n                    <MenuItem value={0}>Select Employee</MenuItem>\r\n                    {assignemployeeList.map((data) => {\r\n                      return (\r\n                        <MenuItem value={data.value}>{data.label}</MenuItem>\r\n                      );\r\n                    })}\r\n                  </TextField>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions className=\"mb-30\">\r\n          <Button\r\n            autoFocus\r\n            onClick={onClose}\r\n            color=\"primary\"\r\n            className={classes.backBtn}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            // onClick={onClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n            className={classes.submit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n",["1078","1079"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\inquiryFormActions\\inquiryFormView.tsx",["1080"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\inquiryFormActions\\inquiryFormEdit.tsx",["1081"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\questionnaireFormActions\\questionnaireFormView.tsx",["1082"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\questionnaireFormActions\\questionnaireFormEdit.tsx",["1083"],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridWrapper.tsx",["1084"],"import { useEffect, useState } from \"react\";\r\nimport { GridMetaDataType } from \"./types\";\r\nimport {\r\n  attachCellComponentsToMetaData,\r\n  attachFilterComponentToMetaData,\r\n  attachAlignmentProps,\r\n  extractHiddenColumns,\r\n  sortColumnsBySequence,\r\n  transformHeaderFilters,\r\n} from \"./utils\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { GirdController } from \"./gridController\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nexport const GridWrapper = ({ gridCode }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [metaData, setMetaData] = useState<GridMetaDataType | null>();\r\n\r\n  useEffect(() => {\r\n    APISDK.fetchGridMetaData(gridCode)\r\n      .then((result) => {\r\n        if (result.status === \"success\") {\r\n          let finalData = transformMetaData({\r\n            metaData: result.data,\r\n          });\r\n          setMetaData(finalData);\r\n          setError(false);\r\n          setLoading(false);\r\n        } else {\r\n          setMetaData(result.data);\r\n          setError(true);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(true);\r\n        setMetaData(err);\r\n      });\r\n  }, []);\r\n\r\n  return loading ? (\r\n    <span>{\"loading...\"}</span>\r\n  ) : error ? (\r\n    <span>{\"error loading grid\"}</span>\r\n  ) : (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <GirdController\r\n        metaData={metaData as GridMetaDataType}\r\n        gridCode={gridCode}\r\n      />\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nconst transformMetaData = ({ metaData: freshMetaData }): GridMetaDataType => {\r\n  let metaData = JSON.parse(JSON.stringify(freshMetaData)) as GridMetaDataType;\r\n\r\n  let columns = metaData.columns as any;\r\n  //make sure extract functions are called before attach and lastly sort\r\n  const hiddenColumns = extractHiddenColumns(columns);\r\n  columns = attachCellComponentsToMetaData(columns);\r\n  columns = attachFilterComponentToMetaData(columns);\r\n  columns = attachAlignmentProps(columns);\r\n  columns = sortColumnsBySequence(columns);\r\n  let headerFilters = transformHeaderFilters(metaData?.headerFilters);\r\n  console.log(headerFilters);\r\n  return {\r\n    columns: columns,\r\n    gridConfig: metaData.gridConfig,\r\n    hiddenColumns: hiddenColumns,\r\n    headerFilters: headerFilters,\r\n  };\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\atoms\\index.ts",["1085"],"import { atomFamily, selectorFamily, DefaultValue } from \"recoil\";\r\nexport interface QueryType {\r\n  accessor: string;\r\n  condition: string;\r\n  value: any[] | any;\r\n}\r\n\r\nexport interface SubscriptionType {\r\n  [key: string]: string[] | string | undefined;\r\n}\r\n\r\nexport const filterAtom = atomFamily<QueryType | null, string>({\r\n  key: \"filterAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const filtersAtom = atomFamily<QueryType[] | null, string>({\r\n  key: \"filtersAtom\",\r\n  default: null,\r\n});\r\n\r\nexport const subscribeToFilterChange = selectorFamily<\r\n  QueryType[],\r\n  SubscriptionType\r\n>({\r\n  key: \"filterSubscriber\",\r\n  get: (subscriptionFilters) => ({ get }) => {\r\n    if (typeof subscriptionFilters !== \"object\") {\r\n      return [];\r\n    }\r\n    let accessors = subscriptionFilters.accessors;\r\n    if (accessors === undefined) {\r\n      accessors = [];\r\n    }\r\n    if (typeof accessors === \"string\") {\r\n      accessors = [accessors];\r\n    }\r\n    let result: QueryType[] = [];\r\n    for (let accessor of accessors as string[]) {\r\n      let filterCondition = get(\r\n        filterAtom(`${subscriptionFilters.gridCode as string}/${accessor}`)\r\n      );\r\n      if (typeof filterCondition === \"object\" && filterCondition !== null) {\r\n        result.push(filterCondition);\r\n      }\r\n    }\r\n    return result;\r\n  },\r\n});\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\currencyRowCellRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\dateRowCellRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\cells\\defaultRowCellRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\utils.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\sortColumnBySequence.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\extractHiddenColumns.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachGlobalFilterProps.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachFilterProps.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachCellComponentsToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\attachAlignmentProps.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\groupByExclusiveFilter.tsx",["1086","1087","1088"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useSetRecoilState, useResetRecoilState, useRecoilValue } from \"recoil\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { filterAtom, filtersAtom, subscribeToFilterChange } from \"../../atoms\";\r\n\r\nexport const GroupByExclusiveFilter = (props) => {\r\n  const {\r\n    accessor,\r\n    result_type,\r\n    columnName,\r\n    dependencies,\r\n    last,\r\n    gridCode,\r\n  } = props;\r\n\r\n  //set indivial filter state\r\n  const setFilterCondition = useSetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n  //the last filter will set the state of all the dependent filters\r\n  const setFiltersCondition = useSetRecoilState(filtersAtom(gridCode));\r\n  //filter dependencies\r\n  const dependentFilters = useRecoilValue(\r\n    subscribeToFilterChange({ gridCode: gridCode, accessors: dependencies })\r\n  );\r\n  //clear filter on unmount\r\n  const resetFilter = useResetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n  useEffect(() => {\r\n    return resetFilter;\r\n  }, []);\r\n\r\n  const [groups, setGroups] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [value, setValue] = useState(\"all\");\r\n  const apiCount = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (typeof value === \"string\" && value !== \"all\") {\r\n      const condition = {\r\n        accessor,\r\n        condition: \"equal\",\r\n        value,\r\n      };\r\n      setFilterCondition(condition);\r\n      if (last) {\r\n        setFiltersCondition([...dependentFilters, condition]);\r\n      }\r\n    } else {\r\n      setFilterCondition(null);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setValue(\"all\");\r\n    if (last) {\r\n      setFiltersCondition(dependentFilters);\r\n    }\r\n    let currentCount = ++apiCount.current;\r\n    let promise = APISDK.fetchGridColumnFilterProps(gridCode, {\r\n      accessor,\r\n      result_type,\r\n      filter_conditions: dependentFilters,\r\n    });\r\n    promise\r\n      .then((result) => {\r\n        if (currentCount === apiCount.current) {\r\n          setLoading(false);\r\n          if (result.status === \"success\") {\r\n            setGroups(result?.data?.groups ?? []);\r\n          } else {\r\n            setGroups([]);\r\n            console.log(result);\r\n            setError(\"Error fetching filters\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setGroups([]);\r\n        console.log(err);\r\n        setError(\"Error fetching filter\");\r\n      });\r\n  }, [last, dependentFilters]);\r\n\r\n  const buttons = groups.map((one) => {\r\n    return (\r\n      <ToggleButton key={one.value} value={one.value}>\r\n        {one.label} ({one.count})\r\n      </ToggleButton>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <Typography style={{ display: \"inline-flex\" }}>{columnName}</Typography>\r\n      {loading ? (\r\n        \"loading filter...\"\r\n      ) : Boolean(error) ? (\r\n        error\r\n      ) : (\r\n        <ToggleButtonGroup\r\n          size=\"small\"\r\n          value={value}\r\n          onChange={(_, value) => {\r\n            setValue(value);\r\n          }}\r\n          exclusive={true}\r\n        >\r\n          {buttons}\r\n          <ToggleButton key={`${accessor}-all-single`} value=\"all\">\r\n            Clear\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\groupByMultipleFilter.tsx",["1089","1090","1091"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useSetRecoilState, useResetRecoilState, useRecoilValue } from \"recoil\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { filterAtom, filtersAtom, subscribeToFilterChange } from \"../../atoms\";\r\n\r\nexport const GroupByMultipleFilter = (props) => {\r\n  const {\r\n    accessor,\r\n    result_type,\r\n    columnName,\r\n    dependencies,\r\n    last,\r\n    gridCode,\r\n  } = props;\r\n\r\n  //set indivial filter state\r\n  const setFilterCondition = useSetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n  //the last filter will set the state of all the dependent filters\r\n  const setFiltersCondition = useSetRecoilState(filtersAtom(gridCode));\r\n  //filter dependencies\r\n  const dependentFilters = useRecoilValue(\r\n    subscribeToFilterChange({ gridCode: gridCode, accessors: dependencies })\r\n  );\r\n  //clear filter on unmount\r\n  const resetFilter = useResetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n  useEffect(() => {\r\n    return resetFilter;\r\n  }, []);\r\n\r\n  const [groups, setGroups] = useState<any[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [value, setValue] = useState([]);\r\n  const [clear, setClear] = useState(true);\r\n  const apiCount = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (Array.isArray(value) && value.length > 0) {\r\n      const condition = {\r\n        accessor,\r\n        condition: \"in\",\r\n        value,\r\n      };\r\n      setFilterCondition(condition);\r\n      if (last) {\r\n        setFiltersCondition([...dependentFilters, condition]);\r\n      }\r\n    } else {\r\n      setFilterCondition(null);\r\n    }\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setValue([]);\r\n    setClear(true);\r\n    if (last) {\r\n      setFiltersCondition(dependentFilters);\r\n    }\r\n    let currentCount = ++apiCount.current;\r\n    let promise = APISDK.fetchGridColumnFilterProps(gridCode, {\r\n      accessor,\r\n      result_type,\r\n      filter_conditions: dependentFilters,\r\n    });\r\n    promise\r\n      .then((result) => {\r\n        if (currentCount === apiCount.current) {\r\n          setLoading(false);\r\n          if (result.status === \"success\") {\r\n            setGroups(result?.data?.groups ?? []);\r\n          } else {\r\n            setGroups([]);\r\n            console.log(result);\r\n            setError(\"Error fetching filters\");\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setGroups([]);\r\n        console.log(err);\r\n        setError(\"Error fetching filter\");\r\n      });\r\n  }, [last, dependentFilters]);\r\n\r\n  const buttons = groups.map((one) => {\r\n    return (\r\n      <ToggleButton key={one.value} value={one.value}>\r\n        {one.label} ({one.count})\r\n      </ToggleButton>\r\n    );\r\n  });\r\n  return (\r\n    <Fragment>\r\n      <Typography style={{ display: \"inline-flex\" }}>{columnName}</Typography>\r\n      {loading ? (\r\n        \"loading filter...\"\r\n      ) : Boolean(error) ? (\r\n        error\r\n      ) : (\r\n        <>\r\n          <ToggleButtonGroup\r\n            size=\"small\"\r\n            onChange={(_, value) => {\r\n              setValue(value);\r\n              setClear(false);\r\n            }}\r\n            value={value}\r\n            exclusive={false}\r\n          >\r\n            {buttons}\r\n            <ToggleButton\r\n              selected={clear}\r\n              key={`${accessor}-all-single`}\r\n              value={\"\"}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setValue([]);\r\n                setClear(true);\r\n              }}\r\n            >\r\n              Clear\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\globalFilters\\dateRangeFilter.tsx",["1092","1093","1094"],"import { Fragment, useEffect, useState } from \"react\";\r\nimport { useSetRecoilState, useRecoilValue, useResetRecoilState } from \"recoil\";\r\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\r\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {\r\n  filterAtom,\r\n  filtersAtom,\r\n  subscribeToFilterChange,\r\n  QueryType,\r\n} from \"../../atoms\";\r\nimport { subDays } from \"date-fns\";\r\n\r\nexport const DaysFilter = (props) => {\r\n  const { accessor, columnName, dependencies, last, gridCode } = props;\r\n\r\n  //set indivial filter state\r\n  const setFilterCondition = useSetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n  //the last filter will set the state of all the dependent filters\r\n  const setFiltersCondition = useSetRecoilState(filtersAtom(gridCode));\r\n  const [toggleState, setToggleState] = useState(\"\");\r\n  const [condition, setCondition] = useState<QueryType | null>(null);\r\n  const dependentFilters = useRecoilValue(\r\n    subscribeToFilterChange({ gridCode: gridCode, accessors: dependencies })\r\n  );\r\n  const resetFilter = useResetRecoilState(\r\n    filterAtom(`${gridCode}/${accessor}`)\r\n  );\r\n\r\n  useEffect(() => {\r\n    return resetFilter;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilterCondition(condition);\r\n    if (last) {\r\n      if (condition !== null) {\r\n        setFiltersCondition([...dependentFilters, condition]);\r\n      } else {\r\n        setFiltersCondition([...dependentFilters]);\r\n      }\r\n    }\r\n  }, [condition]);\r\n\r\n  useEffect(() => {\r\n    setCondition(null);\r\n    if (last) {\r\n      setFiltersCondition(dependentFilters);\r\n    }\r\n  }, [last, dependentFilters]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Typography style={{ display: \"inline-flex\" }}>{columnName}</Typography>\r\n      <ToggleButtonGroup\r\n        size=\"small\"\r\n        value={toggleState}\r\n        onChange={(event, value) => {\r\n          setToggleState(value);\r\n        }}\r\n        exclusive={true}\r\n      >\r\n        <ToggleButton\r\n          key={\"todays\"}\r\n          value={\"todays\"}\r\n          onClick={() =>\r\n            setCondition({\r\n              condition: \"equal\",\r\n              value: new Date(),\r\n              accessor: accessor,\r\n            })\r\n          }\r\n        >\r\n          Todays\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          key={\"last week\"}\r\n          value={\"last week\"}\r\n          onClick={() =>\r\n            setCondition({\r\n              condition: \"between\",\r\n              value: [subDays(new Date(), 7), new Date()],\r\n              accessor: accessor,\r\n            })\r\n          }\r\n        >\r\n          Last Week\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          key={\"last month\"}\r\n          value={\"last month\"}\r\n          onClick={() =>\r\n            setCondition({\r\n              condition: \"between\",\r\n              value: [subDays(new Date(), 30), new Date()],\r\n              accessor: accessor,\r\n            })\r\n          }\r\n        >\r\n          Last Month\r\n        </ToggleButton>\r\n        <ToggleButton\r\n          key={\"all\"}\r\n          value={\"all\"}\r\n          onClick={() => setCondition(null)}\r\n        >\r\n          All\r\n        </ToggleButton>\r\n      </ToggleButtonGroup>\r\n    </Fragment>\r\n  );\r\n};\r\n",{"ruleId":"1095","replacedBy":"1096"},{"ruleId":"1097","replacedBy":"1098"},{"ruleId":"1099","severity":1,"message":"1100","line":15,"column":19,"nodeType":"1101","messageId":"1102","endLine":17,"endColumn":2},{"ruleId":"1103","severity":1,"message":"1104","line":439,"column":13,"nodeType":"1105","messageId":"1106","endLine":439,"endColumn":17},{"ruleId":"1107","severity":1,"message":"1108","line":43,"column":41,"nodeType":"1109","endLine":43,"endColumn":61},{"ruleId":"1095","replacedBy":"1096"},{"ruleId":"1097","replacedBy":"1098"},{"ruleId":"1103","severity":1,"message":"1110","line":13,"column":10,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":20},{"ruleId":"1103","severity":1,"message":"1111","line":15,"column":9,"nodeType":"1105","messageId":"1106","endLine":15,"endColumn":24},{"ruleId":"1103","severity":1,"message":"1112","line":31,"column":10,"nodeType":"1105","messageId":"1106","endLine":31,"endColumn":12},{"ruleId":"1103","severity":1,"message":"1113","line":32,"column":10,"nodeType":"1105","messageId":"1106","endLine":32,"endColumn":23},{"ruleId":"1114","severity":1,"message":"1115","line":23,"column":9,"nodeType":"1109","endLine":29,"endColumn":10},{"ruleId":"1114","severity":1,"message":"1115","line":56,"column":11,"nodeType":"1109","endLine":62,"endColumn":12},{"ruleId":"1116","severity":1,"message":"1117","line":16,"column":51,"nodeType":"1118","endLine":16,"endColumn":53,"suggestions":"1119"},{"ruleId":"1116","severity":1,"message":"1120","line":28,"column":5,"nodeType":"1118","endLine":28,"endColumn":7,"suggestions":"1121"},{"ruleId":"1116","severity":1,"message":"1122","line":76,"column":5,"nodeType":"1118","endLine":76,"endColumn":63,"suggestions":"1123"},{"ruleId":"1103","severity":1,"message":"1124","line":13,"column":5,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":14},{"ruleId":"1103","severity":1,"message":"1125","line":14,"column":5,"nodeType":"1105","messageId":"1106","endLine":14,"endColumn":10},{"ruleId":"1126","severity":1,"message":"1127","line":79,"column":37,"nodeType":"1128","messageId":"1129","endLine":79,"endColumn":39},{"ruleId":"1116","severity":1,"message":"1130","line":122,"column":6,"nodeType":"1118","endLine":122,"endColumn":8,"suggestions":"1131"},{"ruleId":"1116","severity":1,"message":"1132","line":167,"column":6,"nodeType":"1118","endLine":167,"endColumn":26,"suggestions":"1133"},{"ruleId":"1103","severity":1,"message":"1124","line":76,"column":5,"nodeType":"1105","messageId":"1106","endLine":76,"endColumn":14},{"ruleId":"1103","severity":1,"message":"1134","line":80,"column":5,"nodeType":"1105","messageId":"1106","endLine":80,"endColumn":16},{"ruleId":"1103","severity":1,"message":"1135","line":128,"column":13,"nodeType":"1105","messageId":"1106","endLine":128,"endColumn":34},{"ruleId":"1103","severity":1,"message":"1136","line":1,"column":39,"nodeType":"1105","messageId":"1106","endLine":1,"endColumn":47},{"ruleId":"1103","severity":1,"message":"1137","line":1,"column":32,"nodeType":"1105","messageId":"1106","endLine":1,"endColumn":40},{"ruleId":"1103","severity":1,"message":"1136","line":1,"column":56,"nodeType":"1105","messageId":"1106","endLine":1,"endColumn":64},{"ruleId":"1116","severity":1,"message":"1138","line":66,"column":6,"nodeType":"1118","endLine":66,"endColumn":8,"suggestions":"1139"},{"ruleId":"1140","severity":1,"message":"1141","line":19,"column":11,"nodeType":"1142","messageId":"1143","endLine":21,"endColumn":92},{"ruleId":"1103","severity":1,"message":"1144","line":1,"column":43,"nodeType":"1105","messageId":"1106","endLine":1,"endColumn":54},{"ruleId":"1116","severity":1,"message":"1145","line":57,"column":5,"nodeType":"1118","endLine":57,"endColumn":17,"suggestions":"1146"},{"ruleId":"1103","severity":1,"message":"1147","line":59,"column":9,"nodeType":"1105","messageId":"1106","endLine":59,"endColumn":15},{"ruleId":"1103","severity":1,"message":"1148","line":2,"column":8,"nodeType":"1105","messageId":"1106","endLine":2,"endColumn":11},{"ruleId":"1140","severity":1,"message":"1141","line":19,"column":11,"nodeType":"1142","messageId":"1143","endLine":21,"endColumn":92},{"ruleId":"1116","severity":1,"message":"1149","line":190,"column":6,"nodeType":"1118","endLine":190,"endColumn":8,"suggestions":"1150"},{"ruleId":"1095","replacedBy":"1151"},{"ruleId":"1097","replacedBy":"1152"},{"ruleId":"1103","severity":1,"message":"1153","line":13,"column":10,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":15},{"ruleId":"1103","severity":1,"message":"1153","line":13,"column":10,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":15},{"ruleId":"1103","severity":1,"message":"1153","line":13,"column":10,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":15},{"ruleId":"1103","severity":1,"message":"1153","line":13,"column":10,"nodeType":"1105","messageId":"1106","endLine":13,"endColumn":15},{"ruleId":"1116","severity":1,"message":"1154","line":42,"column":6,"nodeType":"1118","endLine":42,"endColumn":8,"suggestions":"1155"},{"ruleId":"1103","severity":1,"message":"1156","line":1,"column":38,"nodeType":"1105","messageId":"1106","endLine":1,"endColumn":50},{"ruleId":"1116","severity":1,"message":"1157","line":35,"column":6,"nodeType":"1118","endLine":35,"endColumn":8,"suggestions":"1158"},{"ruleId":"1116","severity":1,"message":"1159","line":57,"column":6,"nodeType":"1118","endLine":57,"endColumn":13,"suggestions":"1160"},{"ruleId":"1116","severity":1,"message":"1161","line":91,"column":6,"nodeType":"1118","endLine":91,"endColumn":30,"suggestions":"1162"},{"ruleId":"1116","severity":1,"message":"1157","line":35,"column":6,"nodeType":"1118","endLine":35,"endColumn":8,"suggestions":"1163"},{"ruleId":"1116","severity":1,"message":"1159","line":58,"column":6,"nodeType":"1118","endLine":58,"endColumn":13,"suggestions":"1164"},{"ruleId":"1116","severity":1,"message":"1161","line":93,"column":6,"nodeType":"1118","endLine":93,"endColumn":30,"suggestions":"1165"},{"ruleId":"1116","severity":1,"message":"1157","line":34,"column":6,"nodeType":"1118","endLine":34,"endColumn":8,"suggestions":"1166"},{"ruleId":"1116","severity":1,"message":"1167","line":45,"column":6,"nodeType":"1118","endLine":45,"endColumn":17,"suggestions":"1168"},{"ruleId":"1116","severity":1,"message":"1169","line":52,"column":6,"nodeType":"1118","endLine":52,"endColumn":30,"suggestions":"1170"},"no-native-reassign",["1171"],"no-negated-in-lhs",["1172"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component CC_ODFormWrapper must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'OpenDialog' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'id' is assigned a value but never used.","'expiryOtpTime' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'metaData.columns'. Either include it or remove the dependency array.","ArrayExpression",["1173"],"React Hook useCallback has a missing dependency: 'metaData.gridConfig.rowIdColumn'. Either include it or remove the dependency array.",["1174"],"React Hook useCallback has a missing dependency: 'gridCode'. Either include it or remove the dependency array.",["1175"],"'flowExist' is assigned a value but never used.","'refID' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'fallbackURL', 'flowExist', 'navigate', and 'refID'. Either include them or remove the dependency array.",["1176"],"React Hook useEffect has missing dependencies: 'gotoPage', 'localFilterManager', 'setAllFilters', and 'setSortBy'. Either include them or remove the dependency array.",["1177"],"'fallbackURL' is assigned a value but never used.","'currentFetchRequestID' is assigned a value but never used.","'Fragment' is defined but never used.","'Suspense' is defined but never used.","React Hook useEffect has missing dependencies: 'globalFiltersState', 'gridCode', 'id', and 'localFilterManager'. Either include them or remove the dependency array.",["1178"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","'useCallback' is defined but never used.","React Hook useCallback has a missing dependency: 'formState'. Either include it or remove the dependency array.",["1179"],"'values' is assigned a value but never used.","'Box' is defined but never used.","React Hook useEffect has a missing dependency: 'refID'. Either include it or remove the dependency array.",["1180"],["1171"],["1172"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'gridCode'. Either include it or remove the dependency array.",["1181"],"'DefaultValue' is defined but never used.","React Hook useEffect has a missing dependency: 'resetFilter'. Either include it or remove the dependency array.",["1182"],"React Hook useEffect has missing dependencies: 'accessor', 'dependentFilters', 'last', 'setFilterCondition', and 'setFiltersCondition'. Either include them or remove the dependency array.",["1183"],"React Hook useEffect has missing dependencies: 'accessor', 'gridCode', 'result_type', and 'setFiltersCondition'. Either include them or remove the dependency array.",["1184"],["1185"],["1186"],["1187"],["1188"],"React Hook useEffect has missing dependencies: 'dependentFilters', 'last', 'setFilterCondition', and 'setFiltersCondition'. Either include them or remove the dependency array.",["1189"],"React Hook useEffect has a missing dependency: 'setFiltersCondition'. Either include it or remove the dependency array.",["1190"],"no-global-assign","no-unsafe-negation",{"desc":"1191","fix":"1192"},{"desc":"1193","fix":"1194"},{"desc":"1195","fix":"1196"},{"desc":"1197","fix":"1198"},{"desc":"1199","fix":"1200"},{"desc":"1201","fix":"1202"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"desc":"1209","fix":"1210"},{"desc":"1211","fix":"1212"},{"desc":"1213","fix":"1214"},{"desc":"1209","fix":"1215"},{"desc":"1211","fix":"1216"},{"desc":"1213","fix":"1217"},{"desc":"1209","fix":"1218"},{"desc":"1219","fix":"1220"},{"desc":"1221","fix":"1222"},"Update the dependencies array to be: [metaData.columns]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [metaData.gridConfig.rowIdColumn]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [globalFiltersState, gridCode]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [fallbackURL, flowExist, navigate, refID]",{"range":"1229","text":"1230"},"Update the dependencies array to be: [globalFiltersState, gotoPage, localFilterManager, setAllFilters, setSortBy]",{"range":"1231","text":"1232"},"Update the dependencies array to be: [globalFiltersState, gridCode, id, localFilterManager]",{"range":"1233","text":"1234"},"Update the dependencies array to be: [formState, setOptions]",{"range":"1235","text":"1236"},"Update the dependencies array to be: [refID]",{"range":"1237","text":"1238"},"Update the dependencies array to be: [gridCode]",{"range":"1239","text":"1240"},"Update the dependencies array to be: [resetFilter]",{"range":"1241","text":"1242"},"Update the dependencies array to be: [accessor, dependentFilters, last, setFilterCondition, setFiltersCondition, value]",{"range":"1243","text":"1244"},"Update the dependencies array to be: [last, dependentFilters, gridCode, accessor, result_type, setFiltersCondition]",{"range":"1245","text":"1246"},{"range":"1247","text":"1242"},{"range":"1248","text":"1244"},{"range":"1249","text":"1246"},{"range":"1250","text":"1242"},"Update the dependencies array to be: [condition, dependentFilters, last, setFilterCondition, setFiltersCondition]",{"range":"1251","text":"1252"},"Update the dependencies array to be: [last, dependentFilters, setFiltersCondition]",{"range":"1253","text":"1254"},[653,655],"[metaData.columns]",[925,927],"[metaData.gridConfig.rowIdColumn]",[2614,2672],"[globalFiltersState, gridCode]",[3404,3406],"[fallbackURL, flowExist, navigate, refID]",[4511,4531],"[globalFiltersState, gotoPage, localFilterManager, setAllFilters, setSortBy]",[2156,2158],"[globalFiltersState, gridCode, id, localFilterManager]",[2115,2127],"[formState, setOptions]",[5201,5203],"[refID]",[1285,1287],"[gridCode]",[1228,1230],"[resetFilter]",[1828,1835],"[accessor, dependentFilters, last, setFilterCondition, setFiltersCondition, value]",[2742,2766],"[last, dependentFilters, gridCode, accessor, result_type, setFiltersCondition]",[1227,1229],[1862,1869],[2794,2818],[1253,1255],[1522,1533],"[condition, dependentFilters, last, setFilterCondition, setFiltersCondition]",[1660,1684],"[last, dependentFilters, setFiltersCondition]"]
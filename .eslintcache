[{"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx":"1","D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts":"2","D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts":"3","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx":"4","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx":"5","D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts":"6","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx":"7","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx":"8","D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts":"9","D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts":"10","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts":"11","D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts":"12","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx":"13","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts":"14","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx":"15","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js":"16","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js":"17","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts":"18","D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts":"19","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx":"20","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js":"21","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts":"22","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts":"23","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts":"24","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts":"25","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts":"26","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts":"27","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts":"28","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx":"29","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx":"30","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx":"31","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx":"32","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx":"33","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx":"34","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\index.tsx":"35","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js":"36","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx":"37","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts":"38","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts":"39","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts":"40","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\style.ts":"41","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx":"42","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx":"43","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx":"44","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx":"45","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx":"46","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx":"47","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts":"48","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx":"49","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx":"50","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx":"51","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\renderer.tsx":"52","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx":"53","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx":"54","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx":"55","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx":"56","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts":"57","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts":"58","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts":"59","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts":"60","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts":"61","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts":"62","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts":"63","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts":"64","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts":"65","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts":"66","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx":"67","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts":"68","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts":"69","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts":"70","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts":"71","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts":"72","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts":"73","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts":"74","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts":"75","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts":"76","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx":"77","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\viewWrapper.tsx":"78","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx":"79","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx":"80","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts":"81","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx":"82","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx":"83","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx":"84","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts":"85","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx":"86","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx":"87","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx":"88","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx":"89","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts":"90","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts":"91","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx":"92","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts":"93","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx":"94","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts":"95","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts":"96","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts":"97","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx":"98","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx":"99","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts":"100","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts":"101","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts":"102","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx":"103","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts":"104","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx":"105","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\renderer.tsx":"106","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx":"107","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts":"108","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts":"109","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts":"110","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts":"111","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts":"112","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts":"113","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts":"114","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts":"115","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts":"116","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts":"117","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts":"118","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx":"119","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx":"120","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx":"121","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx":"122","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts":"123","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx":"124","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx":"125","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx":"126","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx":"127","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx":"128","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx":"129","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx":"130","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx":"131","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx":"132","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts":"133","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx":"134","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx":"135","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx":"136","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx":"137","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx":"138","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx":"139","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx":"140","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx":"141","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx":"142","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx":"143","D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts":"144","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx":"145","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts":"146","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts":"147","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts":"148","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts":"149","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts":"150","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts":"151","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx":"152","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts":"153","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts":"154","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx":"155","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts":"156","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts":"157","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts":"158","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx":"159","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx":"160","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx":"161","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx":"162","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts":"163","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts":"164","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx":"165","D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx":"166","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx":"167","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx":"168","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts":"169","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts":"170","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts":"171","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts":"172","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts":"173","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts":"174","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts":"175","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts":"176","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts":"177","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts":"178","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts":"179","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts":"180","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx":"181","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx":"182","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx":"183","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx":"184","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx":"185","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx":"186","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx":"187","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx":"188","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx":"189","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx":"190","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx":"191","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx":"192","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx":"193","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx":"194","D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx":"195","D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx":"196","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts":"197","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts":"198","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts":"199","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts":"200","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx":"201","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx":"202","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts":"203","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts":"204","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts":"205","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js":"206","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts":"207","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts":"208","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts":"209","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts":"210","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts":"211","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts":"212","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx":"213","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts":"214","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx":"215","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx":"216","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx":"217","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx":"218","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx":"219","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx":"220","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts":"221","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx":"222","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx":"223","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts":"224"},{"size":974,"mtime":1607405288783,"results":"225","hashOfConfig":"226"},{"size":5444,"mtime":1607405262874,"results":"227","hashOfConfig":"226"},{"size":949,"mtime":1607405288783,"results":"228","hashOfConfig":"226"},{"size":41,"mtime":1607405288733,"results":"229","hashOfConfig":"226"},{"size":41,"mtime":1607405288738,"results":"230","hashOfConfig":"226"},{"size":10241,"mtime":1607405288784,"results":"231","hashOfConfig":"226"},{"size":681,"mtime":1607405288731,"results":"232","hashOfConfig":"226"},{"size":692,"mtime":1608785324705,"results":"233","hashOfConfig":"226"},{"size":3780,"mtime":1607405288739,"results":"234","hashOfConfig":"226"},{"size":4463,"mtime":1607405288734,"results":"235","hashOfConfig":"226"},{"size":17957,"mtime":1609235367044,"results":"236","hashOfConfig":"226"},{"size":426,"mtime":1607405288835,"results":"237","hashOfConfig":"226"},{"size":305,"mtime":1607405288794,"results":"238","hashOfConfig":"226"},{"size":3164,"mtime":1607931442330,"results":"239","hashOfConfig":"226"},{"size":2663,"mtime":1609238432520,"results":"240","hashOfConfig":"226"},{"size":1584,"mtime":1607405288815,"results":"241","hashOfConfig":"226"},{"size":21576,"mtime":1608269099646,"results":"242","hashOfConfig":"226"},{"size":154,"mtime":1607405288831,"results":"243","hashOfConfig":"226"},{"size":6736,"mtime":1607931442330,"results":"244","hashOfConfig":"226"},{"size":4633,"mtime":1608353808958,"results":"245","hashOfConfig":"226"},{"size":51,"mtime":1607405288825,"results":"246","hashOfConfig":"226"},{"size":47,"mtime":1607405288787,"results":"247","hashOfConfig":"226"},{"size":48,"mtime":1607405288813,"results":"248","hashOfConfig":"226"},{"size":53,"mtime":1607405288816,"results":"249","hashOfConfig":"226"},{"size":63,"mtime":1608785324729,"results":"250","hashOfConfig":"226"},{"size":45,"mtime":1607405288826,"results":"251","hashOfConfig":"226"},{"size":49,"mtime":1607405288818,"results":"252","hashOfConfig":"226"},{"size":59,"mtime":1608785324729,"results":"253","hashOfConfig":"226"},{"size":3663,"mtime":1608785324726,"results":"254","hashOfConfig":"226"},{"size":51,"mtime":1607405288791,"results":"255","hashOfConfig":"226"},{"size":48,"mtime":1607405288811,"results":"256","hashOfConfig":"226"},{"size":457,"mtime":1607405288812,"results":"257","hashOfConfig":"226"},{"size":480,"mtime":1607405288829,"results":"258","hashOfConfig":"226"},{"size":2405,"mtime":1609235367029,"results":"259","hashOfConfig":"226"},{"size":37,"mtime":1609235181057,"results":"260","hashOfConfig":"226"},{"size":6469,"mtime":1607606816949,"results":"261","hashOfConfig":"226"},{"size":6800,"mtime":1607405288787,"results":"262","hashOfConfig":"226"},{"size":586,"mtime":1607405288829,"results":"263","hashOfConfig":"226"},{"size":333,"mtime":1607405288812,"results":"264","hashOfConfig":"226"},{"size":6189,"mtime":1607405288829,"results":"265","hashOfConfig":"226"},{"size":1741,"mtime":1607405288830,"results":"266","hashOfConfig":"226"},{"size":975,"mtime":1607405288813,"results":"267","hashOfConfig":"226"},{"size":5752,"mtime":1608785324710,"results":"268","hashOfConfig":"226"},{"size":9950,"mtime":1608785324729,"results":"269","hashOfConfig":"226"},{"size":2775,"mtime":1608785324729,"results":"270","hashOfConfig":"226"},{"size":3199,"mtime":1608785324729,"results":"271","hashOfConfig":"226"},{"size":3113,"mtime":1608269099646,"results":"272","hashOfConfig":"226"},{"size":907,"mtime":1607405288808,"results":"273","hashOfConfig":"226"},{"size":6881,"mtime":1609235367044,"results":"274","hashOfConfig":"226"},{"size":5175,"mtime":1607405288811,"results":"275","hashOfConfig":"226"},{"size":2728,"mtime":1607405288789,"results":"276","hashOfConfig":"226"},{"size":4822,"mtime":1607405288830,"results":"277","hashOfConfig":"226"},{"size":600,"mtime":1608268975469,"results":"278","hashOfConfig":"226"},{"size":2654,"mtime":1609235367022,"results":"279","hashOfConfig":"226"},{"size":446,"mtime":1609235367022,"results":"280","hashOfConfig":"226"},{"size":2060,"mtime":1609314248234,"results":"281","hashOfConfig":"226"},{"size":1024,"mtime":1607405288814,"results":"282","hashOfConfig":"226"},{"size":952,"mtime":1607405288787,"results":"283","hashOfConfig":"226"},{"size":1739,"mtime":1607405288828,"results":"284","hashOfConfig":"226"},{"size":1676,"mtime":1608785324729,"results":"285","hashOfConfig":"226"},{"size":1698,"mtime":1607941458203,"results":"286","hashOfConfig":"226"},{"size":2641,"mtime":1607405288812,"results":"287","hashOfConfig":"226"},{"size":1131,"mtime":1607405288793,"results":"288","hashOfConfig":"226"},{"size":45,"mtime":1607405288803,"results":"289","hashOfConfig":"226"},{"size":55,"mtime":1607405288806,"results":"290","hashOfConfig":"226"},{"size":51,"mtime":1607405288809,"results":"291","hashOfConfig":"226"},{"size":917,"mtime":1607405288816,"results":"292","hashOfConfig":"226"},{"size":66,"mtime":1607405288801,"results":"293","hashOfConfig":"226"},{"size":107,"mtime":1607405288797,"results":"294","hashOfConfig":"226"},{"size":75,"mtime":1608785324710,"results":"295","hashOfConfig":"226"},{"size":49,"mtime":1609235367029,"results":"296","hashOfConfig":"226"},{"size":77,"mtime":1609235367029,"results":"297","hashOfConfig":"226"},{"size":4883,"mtime":1609235367029,"results":"298","hashOfConfig":"226"},{"size":5947,"mtime":1607685536592,"results":"299","hashOfConfig":"226"},{"size":1611,"mtime":1608785324710,"results":"300","hashOfConfig":"226"},{"size":855,"mtime":1607405262852,"results":"301","hashOfConfig":"226"},{"size":30226,"mtime":1609325851231,"results":"302","hashOfConfig":"226"},{"size":4461,"mtime":1609235367029,"results":"303","hashOfConfig":"226"},{"size":3193,"mtime":1609235367022,"results":"304","hashOfConfig":"226"},{"size":3837,"mtime":1608709316638,"results":"305","hashOfConfig":"226"},{"size":47,"mtime":1607405288819,"results":"306","hashOfConfig":"226"},{"size":1470,"mtime":1607926225346,"results":"307","hashOfConfig":"226"},{"size":1733,"mtime":1607405288796,"results":"308","hashOfConfig":"226"},{"size":1159,"mtime":1607405288807,"results":"309","hashOfConfig":"226"},{"size":1658,"mtime":1607405288777,"results":"310","hashOfConfig":"226"},{"size":3478,"mtime":1609311788269,"results":"311","hashOfConfig":"226"},{"size":1857,"mtime":1609235367044,"results":"312","hashOfConfig":"226"},{"size":15728,"mtime":1609235367029,"results":"313","hashOfConfig":"226"},{"size":5721,"mtime":1609325906275,"results":"314","hashOfConfig":"226"},{"size":4916,"mtime":1608709413338,"results":"315","hashOfConfig":"226"},{"size":1197,"mtime":1607405288773,"results":"316","hashOfConfig":"226"},{"size":1947,"mtime":1609235367029,"results":"317","hashOfConfig":"226"},{"size":453,"mtime":1607405288776,"results":"318","hashOfConfig":"226"},{"size":5926,"mtime":1609235367029,"results":"319","hashOfConfig":"226"},{"size":1137,"mtime":1607405288775,"results":"320","hashOfConfig":"226"},{"size":2024,"mtime":1608353808887,"results":"321","hashOfConfig":"226"},{"size":697,"mtime":1607405262851,"results":"322","hashOfConfig":"226"},{"size":2020,"mtime":1607405288771,"results":"323","hashOfConfig":"226"},{"size":9117,"mtime":1608785324709,"results":"324","hashOfConfig":"226"},{"size":49,"mtime":1607405288781,"results":"325","hashOfConfig":"226"},{"size":9414,"mtime":1608709316821,"results":"326","hashOfConfig":"226"},{"size":446,"mtime":1609235367029,"results":"327","hashOfConfig":"226"},{"size":2490,"mtime":1609235367029,"results":"328","hashOfConfig":"226"},{"size":12967,"mtime":1608709317111,"results":"329","hashOfConfig":"226"},{"size":8155,"mtime":1609235367022,"results":"330","hashOfConfig":"226"},{"size":7190,"mtime":1607608056499,"results":"331","hashOfConfig":"226"},{"size":5410,"mtime":1608785324727,"results":"332","hashOfConfig":"226"},{"size":1427,"mtime":1607405288798,"results":"333","hashOfConfig":"226"},{"size":16605,"mtime":1608550454317,"results":"334","hashOfConfig":"226"},{"size":736,"mtime":1607405288807,"results":"335","hashOfConfig":"226"},{"size":196,"mtime":1607405288802,"results":"336","hashOfConfig":"226"},{"size":1404,"mtime":1607405288804,"results":"337","hashOfConfig":"226"},{"size":670,"mtime":1609235367044,"results":"338","hashOfConfig":"226"},{"size":1838,"mtime":1609235367044,"results":"339","hashOfConfig":"226"},{"size":701,"mtime":1609235367029,"results":"340","hashOfConfig":"226"},{"size":151,"mtime":1608709316537,"results":"341","hashOfConfig":"226"},{"size":127,"mtime":1608709316326,"results":"342","hashOfConfig":"226"},{"size":59,"mtime":1607405288799,"results":"343","hashOfConfig":"226"},{"size":550,"mtime":1607405288782,"results":"344","hashOfConfig":"226"},{"size":1369,"mtime":1609235367029,"results":"345","hashOfConfig":"226"},{"size":4415,"mtime":1609235367029,"results":"346","hashOfConfig":"226"},{"size":765,"mtime":1607931597531,"results":"347","hashOfConfig":"226"},{"size":1734,"mtime":1607662158056,"results":"348","hashOfConfig":"226"},{"size":725,"mtime":1607931597528,"results":"349","hashOfConfig":"226"},{"size":278,"mtime":1607931597522,"results":"350","hashOfConfig":"226"},{"size":421,"mtime":1607931597530,"results":"351","hashOfConfig":"226"},{"size":2221,"mtime":1607931597533,"results":"352","hashOfConfig":"226"},{"size":5095,"mtime":1608785324726,"results":"353","hashOfConfig":"226"},{"size":4493,"mtime":1608269099646,"results":"354","hashOfConfig":"226"},{"size":295,"mtime":1608709316669,"results":"355","hashOfConfig":"226"},{"size":715,"mtime":1609235367022,"results":"356","hashOfConfig":"226"},{"size":3283,"mtime":1608709316704,"results":"357","hashOfConfig":"226"},{"size":248,"mtime":1607405262863,"results":"358","hashOfConfig":"226"},{"size":2174,"mtime":1609235367022,"results":"359","hashOfConfig":"226"},{"size":1596,"mtime":1607405288798,"results":"360","hashOfConfig":"226"},{"size":195,"mtime":1608709316466,"results":"361","hashOfConfig":"226"},{"size":2238,"mtime":1608709316532,"results":"362","hashOfConfig":"226"},{"size":484,"mtime":1608709316547,"results":"363","hashOfConfig":"226"},{"size":5138,"mtime":1608709316385,"results":"364","hashOfConfig":"226"},{"size":4716,"mtime":1608709316456,"results":"365","hashOfConfig":"226"},{"size":842,"mtime":1607931597527,"results":"366","hashOfConfig":"226"},{"size":269,"mtime":1607931597526,"results":"367","hashOfConfig":"226"},{"size":4186,"mtime":1609235367022,"results":"368","hashOfConfig":"226"},{"size":568,"mtime":1607405288834,"results":"369","hashOfConfig":"226"},{"size":912,"mtime":1607941458199,"results":"370","hashOfConfig":"226"},{"size":53,"mtime":1607405262858,"results":"371","hashOfConfig":"226"},{"size":173,"mtime":1607405262816,"results":"372","hashOfConfig":"226"},{"size":300,"mtime":1607405262864,"results":"373","hashOfConfig":"226"},{"size":3482,"mtime":1607405288786,"results":"374","hashOfConfig":"226"},{"size":2891,"mtime":1607405262866,"results":"375","hashOfConfig":"226"},{"size":13996,"mtime":1607405262864,"results":"376","hashOfConfig":"226"},{"size":1100,"mtime":1607405262865,"results":"377","hashOfConfig":"226"},{"size":12221,"mtime":1608706433951,"results":"378","hashOfConfig":"226"},{"size":21507,"mtime":1607405288784,"results":"379","hashOfConfig":"226"},{"size":2306,"mtime":1609235367020,"results":"380","hashOfConfig":"226"},{"size":7199,"mtime":1607405262863,"results":"381","hashOfConfig":"226"},{"size":2232,"mtime":1607405288799,"results":"382","hashOfConfig":"226"},{"size":1867,"mtime":1607405288800,"results":"383","hashOfConfig":"226"},{"size":1736,"mtime":1608709316505,"results":"384","hashOfConfig":"226"},{"size":787,"mtime":1608709316318,"results":"385","hashOfConfig":"226"},{"size":1458,"mtime":1607405288781,"results":"386","hashOfConfig":"226"},{"size":1090,"mtime":1607405262817,"results":"387","hashOfConfig":"226"},{"size":1599,"mtime":1608785324707,"results":"388","hashOfConfig":"226"},{"size":102,"mtime":1607405262798,"results":"389","hashOfConfig":"226"},{"size":152,"mtime":1607405288749,"results":"390","hashOfConfig":"226"},{"size":48907,"mtime":1607405288741,"results":"391","hashOfConfig":"226"},{"size":535,"mtime":1607405262799,"results":"392","hashOfConfig":"226"},{"size":9187,"mtime":1607405288748,"results":"393","hashOfConfig":"226"},{"size":181,"mtime":1607405262820,"results":"394","hashOfConfig":"226"},{"size":177,"mtime":1607405262810,"results":"395","hashOfConfig":"226"},{"size":160,"mtime":1607405262823,"results":"396","hashOfConfig":"226"},{"size":120,"mtime":1607405262795,"results":"397","hashOfConfig":"226"},{"size":117,"mtime":1607405262742,"results":"398","hashOfConfig":"226"},{"size":120,"mtime":1607405262743,"results":"399","hashOfConfig":"226"},{"size":134,"mtime":1607405262806,"results":"400","hashOfConfig":"226"},{"size":122,"mtime":1607405262791,"results":"401","hashOfConfig":"226"},{"size":423,"mtime":1607405262739,"results":"402","hashOfConfig":"226"},{"size":251,"mtime":1607405262801,"results":"403","hashOfConfig":"226"},{"size":271,"mtime":1607405262736,"results":"404","hashOfConfig":"226"},{"size":64,"mtime":1609235367019,"results":"405","hashOfConfig":"226"},{"size":2496,"mtime":1607405288753,"results":"406","hashOfConfig":"226"},{"size":2510,"mtime":1607405288756,"results":"407","hashOfConfig":"226"},{"size":7840,"mtime":1607405288760,"results":"408","hashOfConfig":"226"},{"size":2920,"mtime":1607405288752,"results":"409","hashOfConfig":"226"},{"size":3551,"mtime":1607405288764,"results":"410","hashOfConfig":"226"},{"size":2848,"mtime":1607405288763,"results":"411","hashOfConfig":"226"},{"size":2540,"mtime":1607405288759,"results":"412","hashOfConfig":"226"},{"size":4683,"mtime":1607405288765,"results":"413","hashOfConfig":"226"},{"size":3428,"mtime":1607405288759,"results":"414","hashOfConfig":"226"},{"size":3676,"mtime":1607405288751,"results":"415","hashOfConfig":"226"},{"size":2941,"mtime":1607405288750,"results":"416","hashOfConfig":"226"},{"size":2739,"mtime":1607405288762,"results":"417","hashOfConfig":"226"},{"size":3203,"mtime":1607405288765,"results":"418","hashOfConfig":"226"},{"size":1214,"mtime":1607405262823,"results":"419","hashOfConfig":"226"},{"size":1200,"mtime":1607405262820,"results":"420","hashOfConfig":"226"},{"size":709,"mtime":1609235367020,"results":"421","hashOfConfig":"226"},{"size":60,"mtime":1607405288779,"results":"422","hashOfConfig":"226"},{"size":1205,"mtime":1607405288809,"results":"423","hashOfConfig":"226"},{"size":358,"mtime":1607405288779,"results":"424","hashOfConfig":"226"},{"size":2136,"mtime":1607405288816,"results":"425","hashOfConfig":"226"},{"size":151,"mtime":1608785324729,"results":"426","hashOfConfig":"226"},{"size":172,"mtime":1608785324729,"results":"427","hashOfConfig":"226"},{"size":30,"mtime":1607405262857,"results":"428","hashOfConfig":"226"},{"size":197,"mtime":1607405262856,"results":"429","hashOfConfig":"226"},{"size":69,"mtime":1607405262859,"results":"430","hashOfConfig":"226"},{"size":7071,"mtime":1607931442330,"results":"431","hashOfConfig":"226"},{"size":288,"mtime":1607405262856,"results":"432","hashOfConfig":"226"},{"size":272,"mtime":1607405262856,"results":"433","hashOfConfig":"226"},{"size":268,"mtime":1607405288781,"results":"434","hashOfConfig":"226"},{"size":1179,"mtime":1607405262859,"results":"435","hashOfConfig":"226"},{"size":47,"mtime":1608785324729,"results":"436","hashOfConfig":"226"},{"size":917,"mtime":1607405288780,"results":"437","hashOfConfig":"226"},{"size":3432,"mtime":1608785324729,"results":"438","hashOfConfig":"226"},{"size":394,"mtime":1608785324729,"results":"439","hashOfConfig":"226"},{"size":720,"mtime":1608785324729,"results":"440","hashOfConfig":"226"},{"size":699,"mtime":1608785324729,"results":"441","hashOfConfig":"226"},{"size":1363,"mtime":1608785324729,"results":"442","hashOfConfig":"226"},{"size":3035,"mtime":1608785324729,"results":"443","hashOfConfig":"226"},{"size":1571,"mtime":1608785324729,"results":"444","hashOfConfig":"226"},{"size":1426,"mtime":1608785324842,"results":"445","hashOfConfig":"226"},{"size":1640,"mtime":1608785324843,"results":"446","hashOfConfig":"226"},{"size":912,"mtime":1608785324729,"results":"447","hashOfConfig":"226"},{"size":46623,"mtime":1609325586180,"results":"448","hashOfConfig":"226"},{"size":1056,"mtime":1609238034916,"results":"449","hashOfConfig":"226"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},"ce6smt",{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"461","messages":"462","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"469","messages":"470","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"452"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"452"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"485"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"485"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"452"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"485"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"523","messages":"524","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"525"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"528","usedDeprecatedRules":"485"},{"filePath":"529","messages":"530","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"543","messages":"544","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"452"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"452"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"452"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"452"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"625","usedDeprecatedRules":"452"},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"638","usedDeprecatedRules":"452"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"647","usedDeprecatedRules":"452"},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"452"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"671","messages":"672","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"673","messages":"674","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"677","messages":"678","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"679","messages":"680","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729","usedDeprecatedRules":"452"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"742","messages":"743","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"744","usedDeprecatedRules":"452"},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"747","messages":"748","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"751","messages":"752","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"753","messages":"754","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"452"},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"762","messages":"763","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"770","messages":"771","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"774","messages":"775","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"776","messages":"777","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"778","messages":"779","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"780","messages":"781","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"782","messages":"783","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"784","messages":"785","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"786","messages":"787","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"788","messages":"789","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"790","messages":"791","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"792","messages":"793","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"794","messages":"795","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"796","messages":"797","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"798","messages":"799","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"800","messages":"801","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"802","messages":"803","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"804","messages":"805","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"806","messages":"807","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"808","messages":"809","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"812","messages":"813","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"814","messages":"815","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"816","messages":"817","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"822","messages":"823","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"824","messages":"825","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"826","messages":"827","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"828","messages":"829","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"830","messages":"831","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"832","messages":"833","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"834","messages":"835","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"836","messages":"837","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"838","messages":"839","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"840","messages":"841","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"842","messages":"843","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"844","messages":"845","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"848","messages":"849","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"850","messages":"851","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"852","messages":"853","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"854","messages":"855","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"856","messages":"857","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"858","messages":"859","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"860","messages":"861","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"862","messages":"863","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"864","messages":"865","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"866","messages":"867","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"868","messages":"869","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"870","messages":"871","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"485"},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"886","messages":"887","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"888","messages":"889","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"890","messages":"891","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"892","messages":"893","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"894","messages":"895","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"896","messages":"897","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"898","messages":"899","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"900","messages":"901","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"902","messages":"903","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},{"filePath":"910","messages":"911","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"757","usedDeprecatedRules":"452"},{"filePath":"912","messages":"913","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"452"},"D:\\Ratnaafin\\Ratnafin\\src\\index.tsx",[],["916","917"],"D:\\Ratnaafin\\Ratnafin\\src\\serviceWorker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\mock\\retailsLoan.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\app.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\los\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\app\\crm\\theme.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\sdk.ts",["918","919"],"import { OptionsProps } from \"components/common/types\";\r\n\r\ninterface CommonFetcherResponse {\r\n  data: any;\r\n  status: \"success\" | \"failure\";\r\n}\r\ntype ExternalResponse = any;\r\n\r\ninterface sessionObjType {\r\n  baseURL?: URL;\r\n  loginStatus: boolean;\r\n  token?: any;\r\n}\r\n\r\nconst isBroswer = new Function(\r\n  \"try {return this===window;}catch(e){ return false;}\"\r\n);\r\n\r\nconst RaatnaFinAPI = () => {\r\n  let sessionObj: sessionObjType = {\r\n    loginStatus: false,\r\n    token: {},\r\n  };\r\n  let sessionToken;\r\n  const createSession = async (APIURL: string) => {\r\n    sessionObj.baseURL = new URL(APIURL);\r\n    var formdata = new FormData();\r\n    let existingSession = \"\";\r\n    if (isBroswer()) {\r\n      existingSession = localStorage.getItem(\"currentAccessToken\") ?? \"\";\r\n    }\r\n    formdata.append(\"tokenId\", existingSession);\r\n    var requestOptions = {\r\n      method: \"POST\",\r\n      body: formdata,\r\n      redirect: \"follow\",\r\n    };\r\n    const url = new URL(\"./Login\", sessionObj.baseURL);\r\n    sessionToken = fetch(\r\n      url.href,\r\n      //@ts-ignore\r\n      requestOptions\r\n    );\r\n    sessionToken\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        verifyRequest(result);\r\n      });\r\n    sessionToken.catch((error) => {\r\n      verifyRequest(error);\r\n    });\r\n  };\r\n  const verifyRequest = (data) => {\r\n    if (data[\"access_token\"] && data[\"refresh_token\"]) {\r\n      sessionObj.loginStatus = true;\r\n      sessionObj.token = data;\r\n      if (isBroswer()) {\r\n        localStorage.setItem(\r\n          \"currentAccessToken\",\r\n          sessionObj?.token?.access_token ?? \"\"\r\n        );\r\n      }\r\n    } else {\r\n      sessionObj.loginStatus = false;\r\n    }\r\n  };\r\n  const loginStatus = () => {\r\n    return sessionObj.loginStatus;\r\n  };\r\n\r\n  const externalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<ExternalResponse> => {\r\n    try {\r\n      let response = await fetch(url, payload);\r\n      let data = await response.json();\r\n      return data;\r\n    } catch (e) {\r\n      return new Error(`Error fetching data-${e.message}`);\r\n    }\r\n  };\r\n  const getPincode = async (\r\n    pincode: string\r\n  ): Promise<{ options: OptionsProps[]; others: any }> => {\r\n    const data = await externalFetcher(\r\n      `https://api.postalpincode.in/pincode/${pincode}`,\r\n      {\r\n        method: \"GET\",\r\n        redirect: \"follow\",\r\n      }\r\n    );\r\n    if (Array.isArray(data) && data.length === 1) {\r\n      let result = data[0];\r\n      if (String(result.Status).toLowerCase() === \"success\") {\r\n        let areaArray = result.PostOffice.map((dtl) => ({\r\n          value: dtl?.Name,\r\n          label: dtl?.Name,\r\n        }));\r\n        areaArray = [{ label: \"Select option\", value: \"00\" }, ...areaArray];\r\n        const otherValues = result.PostOffice.reduce((accumlator, current) => {\r\n          const val = {\r\n            city: current.Block,\r\n            district: current.District,\r\n            state: current.State,\r\n            country: current.Country,\r\n          };\r\n          accumlator[current.Name] = val;\r\n          return accumlator;\r\n        }, {});\r\n        return { options: areaArray, others: otherValues };\r\n      }\r\n    }\r\n    return {\r\n      options: [{ label: \"Error fetching pincode\", value: \"0\" }],\r\n      others: null,\r\n    };\r\n  };\r\n\r\n  const internalFetcher = async (\r\n    url: string,\r\n    payload: any\r\n  ): Promise<CommonFetcherResponse> => {\r\n    try {\r\n      await sessionToken;\r\n      await wait(); //wait of 1ms to execute code in next event loop cycle to make sure sessionToken has time to update sessionObj\r\n      if (sessionObj.loginStatus === false) {\r\n        return {\r\n          status: \"failure\",\r\n          data: new Error(\"session expired\"),\r\n        };\r\n      }\r\n      let response = await fetch(new URL(url, sessionObj.baseURL).href, {\r\n        method: \"POST\",\r\n        ...payload,\r\n        headers: new Headers({\r\n          Authorization: `Bearer ${sessionObj?.token?.access_token}`,\r\n        }),\r\n      });\r\n      if (String(response.status) === \"200\") {\r\n        let data = await response.json();\r\n        return {\r\n          status: String(data.status) === \"0\" ? \"success\" : \"failure\",\r\n          data: data,\r\n        };\r\n      } else {\r\n        return {\r\n          status: \"failure\",\r\n          data: \"\",\r\n        };\r\n      }\r\n    } catch (e) {\r\n      return {\r\n        status: \"failure\",\r\n        data: e,\r\n      };\r\n    }\r\n  };\r\n\r\n  const getProductType = async (\r\n    _: any,\r\n    productCode: string\r\n  ): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/get_sub_product\", {\r\n      body: JSON.stringify({\r\n        action: \"get_sub_product\",\r\n        request_data: {\r\n          code: productCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.sub_prod_code,\r\n        label: one?.sub_prod_desc,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getPropertyCity = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\r\n      \"./users/get_property_city\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_property_city\",\r\n          request_data: {\r\n            property_city: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n  const getBankList = async (): Promise<OptionsProps[]> => {\r\n    const { status, data } = await internalFetcher(\"./users/getBankList\", {\r\n      body: JSON.stringify({\r\n        action: \"get_bank_list\",\r\n        request_data: {\r\n          get_bank_list: \"\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.bank_cd,\r\n        label: one?.bank_name,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const getMiscVal = (categCode: string) => async (): Promise<\r\n    OptionsProps[]\r\n  > => {\r\n    const { status, data } = await internalFetcher(\"./users/getmiscval\", {\r\n      body: JSON.stringify({\r\n        action: \"get_misc_val\",\r\n        request_data: {\r\n          category_nm: categCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\" && Array.isArray(data.response_data)) {\r\n      const newArray = data.response_data.map((one) => ({\r\n        value: one?.data_val,\r\n        label: one?.display_val,\r\n      }));\r\n      return newArray;\r\n    }\r\n    return [\r\n      {\r\n        label: \"oops error loading..\",\r\n        value: 1,\r\n      },\r\n    ];\r\n  };\r\n\r\n  const requestOTP = async (refID: number | string) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPRequest\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPRequest\",\r\n        request_data: {\r\n          refID: refID,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const verifyOTP = async (\r\n    refID: string,\r\n    transactionID: string,\r\n    otp: string\r\n  ) => {\r\n    const { data, status } = await internalFetcher(\"./users/OTPVerify\", {\r\n      body: JSON.stringify({\r\n        action: \"OTPVerify\",\r\n        request_data: {\r\n          refID: refID,\r\n          transaction_id: transactionID,\r\n          otp: otp,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const handleverifyPwd = async (password: string, phoneNumber: string) => {\r\n    const { data, status } = await internalFetcher(\"./users/customer_login\", {\r\n      body: JSON.stringify({\r\n        action: \"customer_login\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: password,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getMetaData = async (state) => {\r\n    const { action, ...others } = state;\r\n\r\n    const { data, status } = await internalFetcher(\"./users/getMetaData\", {\r\n      body: JSON.stringify({\r\n        action: action,\r\n        request_data: others,\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return data?.response_data ?? {};\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n  const pushFormData = async (\r\n    submitAction?: string,\r\n    formData?: any,\r\n    navigationProps?: any,\r\n    refID?: any\r\n  ) => {\r\n    //rename prodCode to formCode since backend uses prodCode as FormCode\r\n    const { data, status } = await internalFetcher(\"./users/inquiry\", {\r\n      body: JSON.stringify({\r\n        action: submitAction,\r\n        request_data: { refID: refID, ...formData, ...navigationProps },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n  //remove this function after migration\r\n  const getAccessToken = async () => {\r\n    await sessionToken;\r\n    if (sessionObj?.token[\"access_token\"]) {\r\n      return `Bearer ${sessionObj?.token[\"access_token\"]}`;\r\n    }\r\n    return \"Bearer not_valid_token\";\r\n  };\r\n\r\n  const getsubProductDtl = async (fieldData) => {\r\n    if (fieldData.value.length !== 0) {\r\n      let codes = await getProductType(null, fieldData.value);\r\n      return {\r\n        subProductType: {\r\n          options: codes,\r\n          value: \"00\",\r\n        },\r\n      };\r\n    } else if (fieldData.value === \"\") {\r\n      return {\r\n        subProductType: {\r\n          options: [],\r\n          value: \"\",\r\n        },\r\n      };\r\n    }\r\n  };\r\n  const getDashboardEmployeeDataList = async () => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"get_inquiry_data\",\r\n        request_data: {\r\n          status: \"P\",\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const getDashdoardDisplayEmpDetails = async (inquiryCode: string) => {\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/getInquiryDetails\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"get_inquiry_details\",\r\n          request_data: {\r\n            inquiry_code: inquiryCode,\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const submitBecomePartnerData = async (submitAction, formData?: any) => {\r\n    const { data, status } = await internalFetcher(\"./users/become_partner\", {\r\n      body: JSON.stringify({\r\n        action: \"become_partner\",\r\n        request_data: { ...formData },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.response_data };\r\n    }\r\n  };\r\n\r\n  const validatePanNumber = async (currentField) => {\r\n    const { data, status } = await internalFetcher(\"./users/panvalidator\", {\r\n      body: JSON.stringify({\r\n        action: \"panvalidator\",\r\n        request_data: { doc_number: currentField?.value ?? \"INVALID_PAN\" },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return \"\";\r\n    } else {\r\n      return \"invalid pan number\";\r\n    }\r\n  };\r\n\r\n  const checkPhoneNumberExists = async (phoneNumber) => {\r\n    const { data, status } = await internalFetcher(\"./users/verify_user\", {\r\n      body: JSON.stringify({\r\n        action: \"verify_user\",\r\n        request_data: { mobile: phoneNumber },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const updateUserPassword = async (\r\n    confirmPassword: string,\r\n    phoneNumber: string\r\n  ) => {\r\n    const { data, status } = await internalFetcher(\"./users/set_password\", {\r\n      body: JSON.stringify({\r\n        action: \"set_password\",\r\n        request_data: {\r\n          mobile: phoneNumber,\r\n          password: confirmPassword,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const initiateAadharValidation = async (refID) => {\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/initiateaadharreq\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"initiateaadharreq\",\r\n          request_data: { refID: refID, sms: \"0\" },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatus = async (aadharRequestID) => {\r\n    //console.log(refIdForAadhar);\r\n    const { data, status } = await internalFetcher(\r\n      \"./users/fetchaadharstatus\",\r\n      {\r\n        body: JSON.stringify({\r\n          action: \"aadharstatus\",\r\n          request_data: {\r\n            transactionID: aadharRequestID,\r\n            updateStatus: \"\",\r\n          },\r\n          channel: \"W\",\r\n        }),\r\n      }\r\n    );\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridMetaData = async (gridCode) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"grid_form_data\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n        },\r\n        channel: \"W\",\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridData = async (gridCode, fromNo, toNo, sortBy, filterBy) => {\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"inquiry_data_pagewise\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n          from_row: fromNo,\r\n          to_row: toNo,\r\n          orderby_columns: sortBy,\r\n          filter_conditions: filterBy,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n  const fetchGridColumnFilterProps = async (gridCode, options) => {\r\n    /*\r\n    ...options = {accessor:'column_id',result_type:'getGroups|getRange',filter_conditions:[]}\r\n    */\r\n    const { data, status } = await internalFetcher(\"./users/getInquiryData\", {\r\n      body: JSON.stringify({\r\n        action: \"grid_column_options\",\r\n        request_data: {\r\n          grid_code: gridCode,\r\n          ...options,\r\n        },\r\n      }),\r\n    });\r\n    if (status === \"success\") {\r\n      return { status, data: data?.response_data };\r\n    } else {\r\n      return { status, data: data?.error_data };\r\n    }\r\n  };\r\n\r\n  const fetchAadharRequestStatusEventSource = async (\r\n    aadharRequestID\r\n  ): Promise<CommonFetcherResponse> => {\r\n    var urlEndPoint = `https://digix.aiplsolution.in/ratnaafin/users/getaadharstatus?transactionId=${aadharRequestID}`;\r\n    var eventSource = new EventSource(urlEndPoint);\r\n    return new Promise((res) => {\r\n      //@ts-ignore\r\n      eventSource.addEventListener(\"transactionId\", ({ data: eventData }) => {\r\n        eventData = JSON.parse(eventData);\r\n        console.log(eventData);\r\n        let response: CommonFetcherResponse = { status: \"failure\", data: \"\" };\r\n        if (eventData.status === \"0\") {\r\n          response.status = \"success\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        } else {\r\n          response.status = \"failure\";\r\n          response.data = eventData?.response_data ?? {};\r\n          res(response);\r\n        }\r\n        eventSource.close();\r\n      });\r\n    });\r\n  };\r\n\r\n  return {\r\n    createSession,\r\n    loginStatus,\r\n    getPincode,\r\n    getProductType,\r\n    getPropertyCity,\r\n    getBankList,\r\n    getMiscVal,\r\n    getAccessToken,\r\n    getMetaData,\r\n    pushFormData,\r\n    handleverifyPwd,\r\n    getsubProductDtl,\r\n    getDashboardEmployeeDataList,\r\n    getDashdoardDisplayEmpDetails,\r\n    submitBecomePartnerData,\r\n    validatePanNumber,\r\n    checkPhoneNumberExists,\r\n    updateUserPassword,\r\n    initiateAadharValidation,\r\n    fetchAadharRequestStatus,\r\n    fetchAadharRequestStatusEventSource,\r\n    fetchGridMetaData,\r\n    fetchGridColumnFilterProps,\r\n    fetchGridData,\r\n    requestOTP,\r\n    verifyOTP,\r\n  };\r\n};\r\n\r\nexport const APISDK = RaatnaFinAPI();\r\n\r\nexport const wait = () => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => res(true), 1);\r\n  });\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\registry\\yup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\index.tsx",["920"],"import { useState, Fragment } from \"react\";\r\nimport { Routes, Route, useParams } from \"react-router-dom\";\r\nimport { AppBar } from \"./appBar\";\r\nimport { MySideBar } from \"./sideBar\";\r\nimport { Drawer } from \"./drawer\";\r\nimport { Content } from \"./content\";\r\nimport Dashboard from \"./pages/dashboard\";\r\nimport Lead from \"./pages/lead\";\r\nimport { Profile } from \"./pages/profile\";\r\nimport Iframe from \"./pages/iframe\";\r\nimport { ParentGridWrapper } from \"components/dataTable\";\r\nimport { APITest } from \"./pages/api\";\r\nimport Login from \"./pages/login\";\r\nimport DynamicLead from \"./pages/leads\";\r\nimport LeadAction from \"./pages/leadaction\";\r\nimport View from \"./pages/tabView\";\r\nimport { useStyles } from \"./style\";\r\nimport { CC_ODFormWrapper } from \"./pages/CAM/SMELoans/CC_OD/CC_ODFormWrapper\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\n\r\nconst DashbordPages = () => {\r\n  const classes = useStyles();\r\n  const [drawerOpen, setDrawerState] = useState(true);\r\n  const handleDrawerOpen = () => setDrawerState(true);\r\n  const handleDrawerClose = () => setDrawerState(false);\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.root}>\r\n        <AppBar open={drawerOpen} handleDrawerOpen={handleDrawerOpen} />\r\n        <Drawer open={drawerOpen} handleDrawerClose={handleDrawerClose}>\r\n          <MySideBar handleDrawerOpen={handleDrawerOpen} open={drawerOpen} />\r\n        </Drawer>\r\n        <Content>\r\n          <Routes>\r\n            <Route path=\"/dashboard\" element={<Dashboard />} />\r\n            <Route path=\"/leads\" element={<Lead />} />\r\n            <Route path=\"/profile\" element={<Profile />} />\r\n            <Route path=\"/iframe\" element={<Iframe />} />\r\n            <Route path=\"/dgrid\" element={<ParentGridWrapper />} />\r\n            <Route path=\"/cam\" element={<CC_ODFormWrapper />} />\r\n            <Route path=\"/api\" element={<APITest />} />\r\n            <Route path=\"/cam\" element={<DynamicLead />} />\r\n            <Route path=\"/pages/:id\" element={<Dummy />} />\r\n            <Route path=\"/leadAction\" element={<LeadAction />} />\r\n            <Route path=\"/view\" element={<View />} />\r\n          </Routes>\r\n        </Content>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst IndexPage = () => {\r\n  return (\r\n    <Fragment>\r\n      <Routes>\r\n        <Route path=\"/*\" element={<DashbordPages />} />\r\n        <Route path=\"/auth\" element={<Login />} />\r\n      </Routes>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nfunction Dummy() {\r\n  // We can use the `useParams` hook here to access\r\n  // the dynamic pieces of the URL.\r\n  let { id } = useParams();\r\n\r\n  return (\r\n    <div>\r\n      <h3>ID: {id}</h3>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\api.js",[],["921","922"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\lead.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\fns\\others.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\iframe.tsx",["923"],"import { Fragment, useEffect, useRef, useReducer } from \"react\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nexport default function EmployeeDashboard() {\r\n  const timeoutDuration = 5 * 60 * 1000;\r\n  const poolingInterval = 10 * 1000;\r\n  let timeout, interval;\r\n\r\n  const initialState = {\r\n    currentScreen: \"inititateAadharValidation\",\r\n    loading: false,\r\n    apiResult: \"\",\r\n    apiResultStatus: \"\",\r\n    aadharTransactionID: \"\",\r\n    aadharAuthenticationURL: \"\",\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"startInititateAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"inititateAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          currentScreen: \"aadharValidation\",\r\n          apiResult: action.payload.status,\r\n          apiResultStatus: action.payload.status,\r\n          aadharTransactionID: action.payload.data.transactionId,\r\n          aadharAuthenticationURL: action.payload.data.url,\r\n        };\r\n      case \"endAadharValidation\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n          currentScreen: \"aadharValidationResult\",\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const handleAadharInitiation = async (transCode) => {\r\n    dispatch({\r\n      type: \"startInititateAadharValidation\",\r\n    });\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(1001);\r\n      if (result.status === \"success\") {\r\n        const { aadharTransactionID, aadharAuthenticationURL } = result.data;\r\n        dispatch({\r\n          type: \"inititateAadharValidation\",\r\n          payload: result,\r\n        });\r\n        startPooling({\r\n          aadharTransactionID: aadharTransactionID,\r\n          aadharAuthenticationURL: aadharAuthenticationURL,\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"endAadharValidation\",\r\n        apiResult: \"error\",\r\n        apiResultStatus: err,\r\n      });\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const fetchRequestID = useRef(0);\r\n\r\n  const startPooling = (data) => {\r\n    interval = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(data.aadharTransactionID).then((resp) => {\r\n        if (currentFetchRequestID === fetchRequestID.current) {\r\n          if (resp.status === \"success\") {\r\n            if (\r\n              resp.data.requestStatus === \"success\" ||\r\n              resp.data.requestStatus === \"failed\"\r\n            ) {\r\n              if (resp.data.requestStatus === \"failed\") {\r\n                dispatch({\r\n                  type: \"endAadharValidation\",\r\n                  apiResult: resp.status,\r\n                  apiResultStatus: resp.data.requestStatus,\r\n                });\r\n              }\r\n              dispatch({\r\n                type: \"endAadharValidation\",\r\n                apiResult: resp.status,\r\n                apiResultStatus: resp.data.requestStatus,\r\n              });\r\n              clearInterval(interval);\r\n              clearTimeout(timeout);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeout = setTimeout(() => {\r\n      dispatch({\r\n        type: \"endAadharValidation\",\r\n        apiResult: \"error\",\r\n        apiResultStatus: \"Request Time out\",\r\n      });\r\n      clearInterval(interval);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeout);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <Fragment>\r\n      {state.currentScreen === \"inititateAadharValidation\" ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ??</span>\r\n          <button\r\n            disabled={state.loading ? true : false}\r\n            onClick={() => {\r\n              handleAadharInitiation(1001);\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button>No</button>\r\n        </div>\r\n      ) : state.currentScreen === \"aadharValidation\" ? (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={state.aadharAuthenticationURL}\r\n          width=\"100%\"\r\n          height=\"700px\"\r\n        />\r\n      ) : state.currentScreen === \"aadharValidationResult\" ? (\r\n        <Alert severity={state.apiResult ? \"error\" : \"success\"}>\r\n          {state.apiResultStatus}\r\n        </Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n}\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\index.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\filterOptions.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\index.tsx",[],["924","925"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\lead.js",["926"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Zoom from \"@material-ui/core/Zoom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\n\r\nimport { DisplayData } from \"./displayData\";\r\nimport { Tooltip as LightTooltip } from \"components/styledComponent/tooltip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  actions: {\r\n    color: \"#26A456\",\r\n    cursor: \"pointer\",\r\n    marginRight: \"10px\",\r\n  },\r\n}));\r\n\r\nconst StyledButton = withStyles({\r\n  root: {\r\n    background:\r\n      \"linear-gradient(-90deg, rgba(94,231,131,1) 0%, rgba(74,205,159,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    border: 0,\r\n    color: \"white\",\r\n    height: 36,\r\n    padding: \"0 1rem\",\r\n    fontSize: \"1.2rem\",\r\n    \"&:hover\": {\r\n      background:\r\n        \"linear-gradient(90deg, rgba(94,231,131,1) 0%, rgba(74,204,160,1) 35%, rgba(33,150,218,1) 100%)\",\r\n    },\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n})(Button);\r\n\r\nexport const EmployeeLead = () => {\r\n  const classes = useStyles();\r\n  const [InquiryDetailsList, setInquiryDetailsList] = useState([]);\r\n  const [openDetails, setOpenDetails] = useState(false);\r\n  const currentInqCode = useRef(\"\");\r\n  const [currentRow, setCurrentRow] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleClickOpen = (event, currenIndex) => {\r\n    event.preventDefault();\r\n    setCurrentRow(InquiryDetailsList[currenIndex]);\r\n    currentInqCode.current = InquiryDetailsList[currenIndex][0];\r\n    setOpenDetails(true);\r\n  };\r\n\r\n  const handleCloseDetails = () => {\r\n    setOpenDetails(false);\r\n  };\r\n\r\n  //get user inquiry details\r\n\r\n  useEffect(() => {\r\n    const fetcher = async () => {\r\n      const result = await APISDK.getDashboardEmployeeDataList();\r\n      // console.log(\"result\", result);\r\n      try {\r\n        setLoading(true);\r\n        if (result.status === \"success\") {\r\n          let dataNew = result.data.map((x) => {\r\n            return [\r\n              x.inquiry_code,\r\n              x.inquiry_date,\r\n              x.product_type,\r\n              x.customer_name,\r\n              x.mobile_no,\r\n              x.email_id,\r\n              x.inquiry_status,\r\n              x.lead_generaate,\r\n              x.questionaaries + \"/\" + x.health_score,\r\n            ];\r\n          });\r\n          setInquiryDetailsList(dataNew);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    };\r\n    fetcher();\r\n  }, [InquiryDetailsList]);\r\n\r\n  const columns = [\r\n    {\r\n      label: \"Inquiry ID\",\r\n      name: \"InquiryId\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Date\",\r\n      name: \"InquiryDate\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Product Type\",\r\n      name: \"ProductType\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Customer Name\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Mobile No.\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Email\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Inquiry Status\",\r\n      name: \"\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Lead Generated\",\r\n      name: \"Generate_lead\",\r\n      options: {\r\n        filter: true,\r\n      },\r\n    },\r\n    {\r\n      label: \"Questionaries / Health Check Score\",\r\n      name: \"\",\r\n      options: {\r\n        filter: false,\r\n      },\r\n    },\r\n    {\r\n      label: \"Action\",\r\n      name: \"Action\",\r\n      options: {\r\n        filter: false,\r\n        sort: false,\r\n        empty: true,\r\n        download: false,\r\n        customBodyRenderLite: (dataIndex, rowIndex) => {\r\n          return (\r\n            <div>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"View\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={handleClickOpen}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <VisibilityIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Edit\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n                onClick={(e) => handleClickOpen(e, dataIndex)}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <EditIcon />\r\n                </span>\r\n              </LightTooltip>\r\n              <LightTooltip\r\n                disableFocusListener\r\n                title=\"Delete\"\r\n                arrow\r\n                placement=\"bottom\"\r\n                TransitionComponent={Zoom}\r\n              >\r\n                <span className={classes.actions}>\r\n                  <DeleteIcon />\r\n                </span>\r\n              </LightTooltip>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box display=\"flex\" justifyContent=\"flex-end\" mb={2}>\r\n        <StyledButton>Generate New Lead</StyledButton>\r\n      </Box>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={12} md={12} className=\"table-cover\">\r\n          {loading ? <CircularProgress size={20} /> : null}\r\n          <MUIDataTable\r\n            title=\"Lead Management\"\r\n            data={InquiryDetailsList}\r\n            columns={columns}\r\n            options={{\r\n              filterType: \"checkbox\",\r\n              filter: false,\r\n              viewColumns: false,\r\n            }}\r\n          />\r\n        </Grid>\r\n\r\n        {openDetails ? (\r\n          <DisplayData\r\n            onClose={handleCloseDetails}\r\n            open={openDetails}\r\n            row={currentInqCode.current}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\footer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\icons.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\content\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\drawer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\dashboard.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\profile.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\changePassword.tsx",["927","928"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport { useStyles } from \"./style\";\r\n\r\nexport const ChangePassword = () => {\r\n  const classes = useStyles();\r\n  const [OpenDialog, setOpenDialog] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  return (\r\n    <>\r\n      <DialogTitle id=\"form-dialog-title\">\r\n        Change Password fsdfdsffs\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Password must be 8-16 characters and include both numbers and letters.\r\n        </DialogContentText>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Current Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Current Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"New Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"New Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={12}>\r\n            <TextField\r\n              label=\"Confirm Password\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              autoComplete=\"off\"\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </DialogContent>\r\n      <DialogActions className=\"mb-30\">\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.backBtn}\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={handleCloseDialog}\r\n          color=\"primary\"\r\n          className={classes.submit}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </DialogActions>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\leadaction.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\login.tsx",["929","930"],"import React, { useState } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport logoImg from \"assets/images/logo.svg\";\r\n\r\nimport { useStyles } from \"./style\";\r\n\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [phoneNumber, setphoneNumber] = useState(\"\");\r\n  const [otp, setotp] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  const [otpVerifydivShowing, setotpVerifydivShowing] = useState(false);\r\n  const [showPwddiv, setshowPwddiv] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const [id, setid] = useState(\"\");\r\n  const [expiryOtpTime, setexpiryOtpTime] = useState(\"\");\r\n\r\n  const requestOtp = async () => {\r\n    if (phoneNumber !== \"\" && phoneNumber.length === 10) {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.requestOTP(phoneNumber);\r\n        // console.log(\"result\", result);\r\n        if (result.status === \"success\") {\r\n          setid(result?.data?.id);\r\n          setexpiryOtpTime(result?.data?.sdatetime);\r\n          setotpVerifydivShowing(true);\r\n          setLoading(false);\r\n        } else {\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setError(\"mobile number should be 10 digits\");\r\n    }\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const result = await APISDK.verifyOTP(phoneNumber, \"\", otp);\r\n      if (result.status === \"success\") {\r\n        setLoading(false);\r\n        navigate(\"/dashboard\");\r\n      } else {\r\n        setError(result?.data?.error_msg);\r\n        setLoading(false);\r\n      }\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.log(\"in catch\");\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const verifyPwd = async () => {\r\n    if (password.length !== 0 || password !== \"\") {\r\n      try {\r\n        setLoading(true);\r\n        const result = await APISDK.handleverifyPwd(password, phoneNumber);\r\n        // console.log(\"result for password\", result);\r\n        if (result.status === \"success\") {\r\n          setLoading(false);\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          // console.log(\"in else\", result?.data?.error_msg);\r\n          setError(result?.data?.error_msg);\r\n          setLoading(false);\r\n        }\r\n      } catch (e) {\r\n        setLoading(false);\r\n        console.log(\"in catch\");\r\n      }\r\n    } else {\r\n      setLoading(false);\r\n      console.log(\"Password should not be empty\");\r\n    }\r\n  };\r\n\r\n  const showPassDiv = () => {\r\n    if (error === \"\") {\r\n      setshowPwddiv(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        width={1 / 2}\r\n        className={classes.loginEmp}\r\n      >\r\n        <img src={logoImg} alt=\"Ratnaafin\" className={classes.logo} />\r\n        <h2>Employee Login</h2>\r\n        <div className=\"text\">\r\n          Login with your registered mobile number to access your Ratnaafin\r\n          account.\r\n        </div>\r\n\r\n        {showPwddiv === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Password\"\r\n              placeholder=\"Password for verification\"\r\n              autoComplete=\"off\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setpassword(e.target.value)}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n\r\n            <Button\r\n              onClick={verifyPwd}\r\n              disabled={password !== \"\" ? false : true}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : otpVerifydivShowing === true ? (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"OTP\"\r\n              placeholder=\"OTP for verification\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              fullWidth\r\n              type=\"number\"\r\n              name=\"otp\"\r\n              value={otp}\r\n              onChange={(e) => setotp(e.target.value)}\r\n              autoComplete=\"off\"\r\n              inputProps={{ maxLength: 6 }}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              disabled={otp.length !== 6 ? true : false}\r\n              onClick={verifyOtp}\r\n              className={classes.loginBtn}\r\n            >\r\n              VERIFY & LOGIN\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className={classes.formWrap}>\r\n            <TextField\r\n              label=\"Mobile Number\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">+91</InputAdornment>\r\n                ),\r\n              }}\r\n              placeholder=\"Enter mobile number\"\r\n              fullWidth\r\n              className=\"mobileNumber\"\r\n              type=\"number\"\r\n              name=\"phoneNumber\"\r\n              autoComplete=\"off\"\r\n              value={phoneNumber}\r\n              onChange={(e) => setphoneNumber(e.target.value)}\r\n              helperText={error ? error : \"\"}\r\n              error={error ? true : false}\r\n              onBlur={() => setError(\"\")}\r\n            />\r\n            <Button\r\n              onClick={requestOtp}\r\n              endIcon={loading ? <CircularProgress size={20} /> : null}\r\n              className={classes.loginBtn}\r\n            >\r\n              Login With OTP\r\n            </Button>\r\n\r\n            <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n              <div className=\"text\">\r\n                <b>Or</b>\r\n              </div>\r\n            </Box>\r\n\r\n            <Button onClick={showPassDiv} className={classes.loginBtn}>\r\n              Login With Password\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\appBar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\header.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\sideBar\\renderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\home.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\index.tsx",["931"],"import { FC, useEffect, useState } from \"react\";\r\nimport { GridMetaDataType } from \"./types\";\r\nimport {\r\n  attachComponentsToMetaData,\r\n  attachFilterComponentToMetaData,\r\n  attachAlignmentProps,\r\n  extractHiddenColumns,\r\n  sortColumnsBySequence,\r\n  transformHeaderFilters,\r\n  transformHeaderFiltersNew,\r\n} from \"./utils\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { GirdController } from \"./gridController\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\n\r\nexport const ParentGridWrapper = () => {\r\n  const gridCode = \"trn/001\";\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const [metaData, setMetaData] = useState({});\r\n\r\n  useEffect(() => {\r\n    APISDK.fetchGridMetaData(gridCode)\r\n      .then((result) => {\r\n        if (result.status === \"success\") {\r\n          let finalData = transformMetaData(result.data, gridCode);\r\n          Promise.resolve(finalData.headerFilters).then((filtersResult) => {\r\n            finalData.headerFilters = filtersResult;\r\n            setMetaData(finalData);\r\n            setError(false);\r\n            setLoading(false);\r\n          });\r\n        } else {\r\n          setMetaData(result.data);\r\n          setError(true);\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        setError(true);\r\n        setMetaData(err);\r\n      });\r\n  }, []);\r\n  return loading ? (\r\n    <span>{\"loading...\"}</span>\r\n  ) : error ? (\r\n    <span>{\"error loading grid\"}</span>\r\n  ) : (\r\n    <DndProvider backend={HTML5Backend}>\r\n      <GirdController\r\n        metaData={metaData as GridMetaDataType}\r\n        gridCode={gridCode}\r\n      />\r\n    </DndProvider>\r\n  );\r\n};\r\n\r\nconst transformMetaData = (\r\n  metaData: GridMetaDataType,\r\n  gridCode: string\r\n): GridMetaDataType => {\r\n  let columns = metaData.columns as any;\r\n\r\n  //make sure extract functions are called before attach and lastly sort\r\n  const hiddenColumns = extractHiddenColumns(columns);\r\n  columns = attachComponentsToMetaData(columns);\r\n  columns = attachFilterComponentToMetaData(columns);\r\n  columns = attachAlignmentProps(columns);\r\n  columns = sortColumnsBySequence(columns);\r\n  const transformedHeaderFilters = transformHeaderFilters(\r\n    gridCode,\r\n    metaData.headerFilters\r\n  );\r\n  if (metaData.headerFilters !== undefined) {\r\n    const filters = transformHeaderFiltersNew(metaData.headerFilters);\r\n    console.log(filters);\r\n  }\r\n\r\n  return {\r\n    columns: columns,\r\n    gridConfig: metaData.gridConfig,\r\n    hiddenColumns: hiddenColumns,\r\n    headerFilters: transformedHeaderFilters,\r\n  };\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODFormWrapper.tsx",["932","933","934","935","936","937","938","939","940","941"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\drawer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\footer\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\profile\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\appBar\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\variants.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachMethodsToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\validateMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\functionRegistry.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\CC_ODMetaData.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\viewWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\formWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\gridController.tsx",["942","943","944"],"import { FC, useEffect, useState, useMemo, useCallback, useRef } from \"react\";\nimport { GridMetaDataType } from \"./types\";\nimport {\n  formatSortBy,\n  formatFilterBy,\n  useFilterState,\n  useLocalFilterState,\n} from \"./utils\";\nimport { APISDK } from \"registry/fns/sdk\";\n\nimport { DefaultHeaderColumnRenderer } from \"./components\";\nimport { DataGrid } from \"./grid\";\nimport { filtersRegistration } from \"./components/filters\";\n\nexport const GirdController: FC<{\n  metaData: GridMetaDataType;\n  gridCode: string;\n}> = ({ metaData, gridCode }) => {\n  const columns = useMemo(() => metaData.columns, []);\n  const defaultColumn = useMemo(\n    () => ({\n      width: 150,\n      maxWidth: 400,\n      minWidth: 50,\n      Header: DefaultHeaderColumnRenderer,\n    }),\n    []\n  );\n  const getRowId = useCallback(\n    (row) => row[metaData.gridConfig.rowIdColumn],\n    []\n  );\n  const filterTypes = useMemo(() => filtersRegistration, []);\n\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [totalRecords, setTotalRecords] = useState(0);\n  const [pageCount, setPageCount] = useState(0);\n  const fetchIdCounterRef = useRef(0);\n  const lastAppliedFilterRef = useRef(null);\n  const resetPaginationAndSorting = useRef(false);\n  const resetTableFilters = useRef(false);\n  const headerFilterManager = useFilterState();\n  const localFilterManager = useLocalFilterState();\n  const { state: headerFilterState } = headerFilterManager;\n\n  useEffect(() => {\n    resetPaginationAndSorting.current = false;\n    resetTableFilters.current = false;\n  }, [data]);\n\n  const fetchData = useCallback(\n    ({ pageSize, pageIndex, sortBy, filters }) => {\n      if (lastAppliedFilterRef.current !== filters) {\n        resetPaginationAndSorting.current = true;\n      }\n      const currentFetchId = ++fetchIdCounterRef.current;\n      setLoading(true);\n      const startRow = Number(pageSize) * Number(pageIndex) + 1;\n      const endRow = Number(startRow) + Number(pageSize) - 1;\n      let localFilters = formatFilterBy(filters);\n      let headerFilters: any[] = [];\n      if (headerFilterState !== null) {\n        headerFilters = Object.values(headerFilterState);\n      }\n      let combinedFilters = [...headerFilters, ...localFilters];\n\n      APISDK.fetchGridData(\n        gridCode,\n        startRow,\n        endRow,\n        formatSortBy(sortBy),\n        combinedFilters\n      ).then((result) => {\n        if (currentFetchId === fetchIdCounterRef.current) {\n          if (result.status === \"success\") {\n            setData(result?.data?.rows ?? []);\n            setPageCount(\n              Math.ceil(\n                Number(result?.data?.total_count ?? 1) / Number(pageSize)\n              )\n            );\n            setTotalRecords(Number(result?.data?.total_count ?? 1));\n            setLoading(false);\n            lastAppliedFilterRef.current = filters;\n          } else {\n            setLoading(false);\n          }\n        }\n      });\n    },\n    [setTotalRecords, setLoading, setData, headerFilterState]\n  );\n\n  return (\n    <DataGrid\n      gridCode={gridCode}\n      label={metaData.gridConfig?.gridLabel ?? \"NO_NAME\"}\n      dense={true}\n      headerFilters={metaData.headerFilters ?? []}\n      headerFilterManager={headerFilterManager}\n      localFilterManager={localFilterManager}\n      getRowId={getRowId}\n      columns={columns}\n      filterTypes={filterTypes}\n      defaultColumn={defaultColumn}\n      defaultHiddenColumns={metaData.hiddenColumns}\n      loading={loading}\n      data={data}\n      onFetchData={fetchData}\n      resetPaginationAndSorting={resetPaginationAndSorting.current}\n      resetFilters={resetTableFilters.current}\n      pageCount={pageCount}\n      totalRecords={totalRecords}\n      pageSizes={metaData.gridConfig?.pageSize}\n      defaultPageSize={metaData.gridConfig?.defaultPageSize}\n    />\n  );\n};\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerForm.tsx",["945"],"import { memo, Fragment, FC } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport FormWrapper, {\r\n  isMetaDataValid,\r\n  MetaDataType,\r\n} from \"components/dyanmicForm\";\r\nimport { InitialValuesType } from \"packages/form\";\r\nimport { becomePartnerMetaData } from \"./metaData\";\r\n\r\nconst MemoizedFormWrapper = memo(FormWrapper);\r\n\r\ninterface BecomePartnerFormProps {\r\n  metaData: MetaDataType;\r\n  initialValues?: InitialValuesType;\r\n}\r\n\r\nconst BecomePartnerForm: FC<BecomePartnerFormProps> = ({\r\n  metaData,\r\n  initialValues,\r\n}) => {\r\n  const navigate = useNavigate();\r\n\r\n  const onSubmitHandler = async (values, submitEnd) => {\r\n    const data = await APISDK.submitBecomePartnerData(\r\n      metaData.form.submitAction ?? \"\",\r\n      values\r\n    );\r\n    if (data.status === \"success\") {\r\n      submitEnd(true);\r\n      navigate(\"/thankyou\");\r\n    } else {\r\n      //Todo: Need to set server error received in API\r\n      submitEnd(false, \"Error submitting form\");\r\n    }\r\n  };\r\n  const result = /*!isMetaDataValid(metaData)*/ !true ? (\r\n    <span>Error loading form</span>\r\n  ) : (\r\n    <Fragment>\r\n      <MemoizedFormWrapper\r\n        metaData={metaData}\r\n        initialValues={initialValues}\r\n        onSubmitHandler={onSubmitHandler}\r\n      />\r\n    </Fragment>\r\n  );\r\n\r\n  return result;\r\n};\r\n\r\nexport const BecomePartnerFormWrapper = () => {\r\n  return <BecomePartnerForm metaData={becomePartnerMetaData} />;\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\becomePartnerPage.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\notFound.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\jsonRuleEngine.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\inquieryForms.tsx",["946"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\thankyou.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\login.tsx",["947"],"import React, { useState, useReducer, Fragment } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport { TextField } from \"components/styledComponent/textfield\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport loginImg from \"assets/images/login.svg\";\r\nimport { InputMaskCustom } from \"components/derived/inputMask\";\r\nimport { useStyles } from \"./style\";\r\nexport interface FormDialogProps {\r\n  submitProps: any;\r\n}\r\n\r\nexport const Login = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const [time, setTime] = useState(0);\r\n  const [userPhoneNumberVerified, setUserPhoneNumberVerified] = useState(\"\");\r\n\r\n  const initialState = {\r\n    currentScreen: \"initiateLoginProcessWithPasswordAndOtp\",\r\n    apiOTPId: \"\",\r\n    loading: false,\r\n    apiResult: \"\",\r\n    apiResultStatus: \"\",\r\n    phoneNumber: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"fields\":\r\n        return {\r\n          ...state,\r\n          [action.fieldName]: action.payload,\r\n        };\r\n      case \"startInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: true,\r\n        };\r\n      case \"initiateLoginProcessWithOtp\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"verifyOtp\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n          apiOTPId: action.apiOTPId,\r\n        };\r\n      case \"initiateLoginWithPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"loginWithPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"InitiateCreateNewPassword\":\r\n        return {\r\n          ...state,\r\n          currentScreen: \"createNewPassword\",\r\n          loading: false,\r\n          apiResult: action.apiResult,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      case \"endInitiateLoginProcessWithPasswordAndOtp\":\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          apiResultStatus: action.apiResultStatus,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const expiryTime = 60;\r\n\r\n  const requestOtp = async () => {\r\n    if (state.phoneNumber !== \"\" && state.phoneNumber.length === 10) {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.requestOTP(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          dispatch({\r\n            type: \"initiateLoginProcessWithOtp\",\r\n            currentScreen: \"verifyOtp\",\r\n            apiOTPId: result?.data?.id,\r\n            apiResult: result?.status,\r\n          });\r\n          // setexpiryOtpTime(result?.data?.sdatetime);\r\n          displayIntervale();\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const displayIntervale = () => {\r\n    const timerId = setInterval(() => {\r\n      setTime((time) => {\r\n        if (time === expiryTime) {\r\n          clearInterval(timerId);\r\n          return time;\r\n        } else {\r\n          return time + 1;\r\n        }\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  const formatTime = (time) =>\r\n    `${String(Math.floor(time / 60)).padStart(2, \"0\")}:${String(\r\n      time % 60\r\n    ).padStart(2, \"0\")}`;\r\n\r\n  const Timer = ({ time }) => {\r\n    const timeRemain = expiryTime - (time % expiryTime);\r\n    return (\r\n      <>\r\n        <div className={classes.OTPTimer}>\r\n          {time === expiryTime ? (\r\n            <div onClick={requestOtp} className={classes.resendLink}>\r\n              Resend OTP\r\n            </div>\r\n          ) : (\r\n            formatTime(timeRemain)\r\n          )}\r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const verifyOtp = async () => {\r\n    try {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      let sdatetime = \"20200915110135\";\r\n      const result = await APISDK.verifyOTP(\r\n        state.apiOTPId,\r\n        state.otp,\r\n        sdatetime\r\n      );\r\n      if (result.status === \"success\") {\r\n        if (userPhoneNumberVerified === \"Yes\") {\r\n          dispatch({\r\n            type: \"InitiateCreateNewPassword\",\r\n            currentScreen: \"createNewPassword\",\r\n            apiResult: result.status,\r\n            apiResultStatus: result?.data?.message,\r\n          });\r\n        } else {\r\n          navigate(\"/dashboard\");\r\n        }\r\n      } else {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: result?.data?.error_msg,\r\n        });\r\n      }\r\n    } catch (e) {\r\n      dispatch({\r\n        type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n        apiResultStatus: e,\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    dispatch({\r\n      type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n    });\r\n    if (\r\n      state.newPassword !== \"\" &&\r\n      state.confirmNewPassword !== \"\" &&\r\n      state.newPassword === state.confirmNewPassword\r\n    ) {\r\n      try {\r\n        const result = await APISDK.updateUserPassword(\r\n          state.confirmNewPassword,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkUserNumberAndPasswordExist = async () => {\r\n    if (state.apiResultStatus === \"\" && state.phoneNumber.length === 10) {\r\n      try {\r\n        dispatch({\r\n          type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n        });\r\n        const result = await APISDK.checkPhoneNumberExists(state.phoneNumber);\r\n        if (result.status === \"success\") {\r\n          if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"N\"\r\n          ) {\r\n            setUserPhoneNumberVerified(\"Yes\");\r\n            requestOtp();\r\n          } else if (\r\n            result?.data?.user_mobile === \"Y\" &&\r\n            result?.data?.user_password === \"Y\"\r\n          ) {\r\n            dispatch({\r\n              type: \"initiateLoginWithPassword\",\r\n              currentScreen: \"loginWithPassword\",\r\n              apiResult: result.status,\r\n              apiResultStatus: result?.data?.message,\r\n            });\r\n          }\r\n        } else {\r\n          if (result?.data?.error_cd === \"-999\") {\r\n            dispatch({\r\n              type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n              apiResultStatus: result?.data?.error_msg,\r\n            });\r\n          }\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const verifyPwd = async () => {\r\n    if (state.password.length !== 0 || state.password !== \"\") {\r\n      dispatch({\r\n        type: \"startInitiateLoginProcessWithPasswordAndOtp\",\r\n      });\r\n      try {\r\n        const result = await APISDK.handleverifyPwd(\r\n          state.password,\r\n          state.phoneNumber\r\n        );\r\n        if (result.status === \"success\") {\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          dispatch({\r\n            type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n            apiResultStatus: result?.data?.error_msg,\r\n          });\r\n        }\r\n      } catch (e) {\r\n        dispatch({\r\n          type: \"endInitiateLoginProcessWithPasswordAndOtp\",\r\n          apiResultStatus: e,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  // password= \"superacute@1234\";\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" width={1} className={classes.wrapper}>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginLeft}\r\n        >\r\n          <img alt=\"\" src={loginImg} className={classes.loginImg} />\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          width={1 / 2}\r\n          className={classes.loginRight}\r\n        >\r\n          <h2>Cutomer Login</h2>\r\n          <div className=\"text\">\r\n            Login with your registered mobile number to access your Ratnaafin\r\n            account.\r\n          </div>\r\n\r\n          {state.currentScreen === \"initiateLoginProcessWithPasswordAndOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Mobile Number\"\r\n                placeholder=\"Enter mobile number\"\r\n                fullWidth\r\n                className=\"mobileNumber\"\r\n                type=\"text\"\r\n                name=\"phoneNumber\"\r\n                value={state.phoneNumber}\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"phoneNumber\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0000000000\",\r\n                    },\r\n                  },\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">+91</InputAdornment>\r\n                  ),\r\n                }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={requestOtp}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With OTP\r\n              </Button>\r\n              <Box display=\"flex\" justifyContent=\"center\" width={1}>\r\n                <div className=\"text text-center\">Or</div>\r\n              </Box>\r\n              <Button\r\n                onClick={checkUserNumberAndPasswordExist}\r\n                className={classes.loginBtn}\r\n              >\r\n                Login With Password\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"verifyOtp\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"OTP\"\r\n                placeholder=\"OTP for verification\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                type=\"email\"\r\n                name=\"otp\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"otp\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.otp}\r\n                inputProps={{ maxLength: 6 }}\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n                InputProps={{\r\n                  inputComponent: InputMaskCustom,\r\n                  inputProps: {\r\n                    MaskProps: {\r\n                      mask: \"0 0 0 0 0 0\",\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n              <Timer time={time} />\r\n              <Button\r\n                disabled={state.otp.length !== 6 ? true : false}\r\n                onClick={verifyOtp}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"createNewPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Create Password\"\r\n                placeholder=\"Create password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"newPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"newPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.newPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <TextField\r\n                label=\"Confirm Password\"\r\n                placeholder=\"Confirm password\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"confirmNewPassword\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"confirmNewPassword\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.confirmNewPassword}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={updateNewPassword}\r\n                disabled={\r\n                  state.newPassword !== \"\" || state.confirmNewPassword !== \"\"\r\n                    ? false\r\n                    : true\r\n                }\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : state.currentScreen === \"loginWithPassword\" ? (\r\n            <div className={classes.formWrap}>\r\n              <TextField\r\n                label=\"Password\"\r\n                placeholder=\"Password for verification\"\r\n                autoComplete=\"off\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={(e) =>\r\n                  dispatch({\r\n                    type: \"fields\",\r\n                    fieldName: \"password\",\r\n                    payload: e.target.value,\r\n                  })\r\n                }\r\n                value={state.password}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                error={Boolean(state.apiResultStatus)}\r\n                helperText={state.apiResultStatus}\r\n              />\r\n\r\n              <Button\r\n                onClick={verifyPwd}\r\n                disabled={state.password !== \"\" ? false : true}\r\n                endIcon={state.loading ? <CircularProgress size={20} /> : null}\r\n                className={classes.loginBtn}\r\n              >\r\n                VERIFY & LOGIN\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\otpVerificationDialog.tsx",["948","949"],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\extendedTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\equifax.tsx",["950","951"],"import Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\nimport { useStyles } from \"./style\";\r\nimport ReactSpeedometer from \"react-d3-speedometer\";\r\n\r\nexport const Equifax = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n\r\n  let score = 750;\r\n  return (\r\n    <Box\r\n      className={classes.wrapper}\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box className={classes.center} mt={3} mb={3}>\r\n        <h3 className=\"theme-color2\">\r\n          <b>Your Current EQUIFAX Score is</b>\r\n        </h3>\r\n        <ReactSpeedometer\r\n          value={score}\r\n          minValue={300}\r\n          maxValue={900}\r\n          segments={4}\r\n          currentValueText={`${score}`}\r\n          customSegmentLabels={[\r\n            {\r\n              text: \"Poor\",\r\n              color: \"#e53834\",\r\n            },\r\n            {\r\n              text: \"Average\",\r\n              color: \"#ef6c00\",\r\n            },\r\n            {\r\n              text: \"Good\",\r\n              color: \"#cddc39\",\r\n            },\r\n            {\r\n              text: \"Excellent\",\r\n              color: \"#8cc24a\",\r\n            },\r\n          ]}\r\n        />\r\n      </Box>\r\n      <Box\r\n        className=\"links\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"row\"\r\n        mb={3}\r\n      >\r\n        <Button\r\n          className={classes.continueBtn}\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fixSequenceInMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\aadharVerification\\aadharVerificationIFrame.tsx",["952","953","954"],"import { Fragment, useEffect, useRef, useReducer } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { APISDK } from \"registry/fns/sdk\";\r\nimport { useNavigationFlow } from \"../utils/navHelpers\";\r\n\r\nconst initialState = {\r\n  currentScreen: \"welcomeView\",\r\n  loading: false,\r\n  error: \"\",\r\n  verificationSuccessful: false,\r\n  aadharTransactionID: \"\",\r\n  aadharAuthenticationURL: \"\",\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"startAadharRequest\":\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        error: \"\",\r\n        loading: true,\r\n      };\r\n    case \"endAadharRequestFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"welcomeView\",\r\n        loading: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"endAadharRequestSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"addharIFrameView\",\r\n        aadharTransactionID: action?.payload?.transactionId,\r\n        aadharAuthenticationURL: action?.payload?.url,\r\n        loading: false,\r\n        error: \"\",\r\n      };\r\n    }\r\n    case \"aadharValidationSuccess\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: true,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    case \"aadharValidationFailure\": {\r\n      return {\r\n        ...state,\r\n        currentScreen: \"resultView\",\r\n        verificationSuccessful: false,\r\n        error: action?.payload?.error,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst timeoutDuration = 5 * 60 * 1000;\r\nconst poolingInterval = 10 * 1000;\r\n\r\nexport const AadharVerification = () => {\r\n  //if needed move this variables to REf state (needs investigation)\r\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\r\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const fetchRequestID = useRef(0);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [\r\n    flowExist,\r\n    refID,\r\n    nextURL,\r\n    nextFlowNavigationProps,\r\n    fallbackURL,\r\n  ] = useNavigationFlow(location, \"/thankyou\");\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    };\r\n  }, []);\r\n\r\n  const handleStartAadharRequest = async () => {\r\n    dispatch({\r\n      type: \"startAadharRequest\",\r\n    });\r\n    try {\r\n      const result = await APISDK.initiateAadharValidation(refID);\r\n      if (result.status === \"success\") {\r\n        const { transactionId, url } = result.data;\r\n        dispatch({\r\n          type: \"endAadharRequestSuccess\",\r\n          payload: {\r\n            transactionId,\r\n            url,\r\n          },\r\n        });\r\n        startPooling(transactionId);\r\n      } else {\r\n        dispatch({\r\n          type: \"endAadharRequestFailure\",\r\n          payload: {\r\n            error: \"Couldnt Initiate Aadhar Request an internal error occured\",\r\n          },\r\n        });\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: \"endAadharRequestFailure\",\r\n        payload: {\r\n          error:\r\n            err?.message?.() ??\r\n            \"Couldnt Initiate Aadhar Request an internal error occured \",\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const startPooling = (aadharTransactionID) => {\r\n    intervalRef.current = setInterval(() => {\r\n      const currentFetchRequestID = fetchRequestID.current++;\r\n      APISDK.fetchAadharRequestStatus(aadharTransactionID).then((resp) => {\r\n        console.log(resp);\r\n        if (resp.status === \"success\") {\r\n          if (resp.data.requestStatus === \"failed\") {\r\n            dispatch({\r\n              type: \"aadharValidationFailure\",\r\n              payload: {\r\n                error: \"Failed to validate aadhar\",\r\n              },\r\n            });\r\n          } else if (resp.data.requestStatus === \"success\") {\r\n            dispatch({\r\n              type: \"aadharValidationSuccess\",\r\n              payload: {\r\n                error:\r\n                  \"Congratulations youve successfully verified your aadhar\",\r\n              },\r\n            });\r\n            clearInterval(intervalRef.current as NodeJS.Timeout);\r\n            clearTimeout(timeoutRef.current as NodeJS.Timeout);\r\n            navigate(nextURL, nextFlowNavigationProps);\r\n          }\r\n        }\r\n      });\r\n    }, poolingInterval);\r\n    timeoutRef.current = setTimeout(() => {\r\n      dispatch({\r\n        type: \"aadharValidationFailure\",\r\n        payload: {\r\n          error: \"Validation timed out\",\r\n        },\r\n      });\r\n      clearInterval(intervalRef.current as NodeJS.Timeout);\r\n    }, timeoutDuration);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {state.currentScreen === \"welcomeView\" ? (\r\n        <div>\r\n          <span>Do you want to go for aadhar verification ?</span>\r\n          <button\r\n            disabled={state.loading ? true : false}\r\n            onClick={() => {\r\n              handleStartAadharRequest();\r\n            }}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              navigate(nextURL, nextFlowNavigationProps);\r\n            }}\r\n          >\r\n            No\r\n          </button>\r\n          {Boolean(state.error) ? (\r\n            <Alert severity={\"error\"}>{state.error}</Alert>\r\n          ) : null}\r\n        </div>\r\n      ) : state.currentScreen === \"addharIFrameView\" ? (\r\n        <iframe\r\n          title=\"AADHAR\"\r\n          src={state.aadharAuthenticationURL}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n        />\r\n      ) : state.currentScreen === \"resultView\" ? (\r\n        <Alert severity={state.verificationSuccessful ? \"success\" : \"error\"}>\r\n          {state.error}\r\n        </Alert>\r\n      ) : null}\r\n    </Fragment>\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\extendedFieldTypes.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructYupSchema.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\constructINITValues.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\simpleForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\groupedForms.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\utils\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\attachValuesToMetaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\groupWiserenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\grid.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\header\\renderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\becomePartner\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\notFound\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\inquiryForms\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\login\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\otpVerificationDialog\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\utils\\navHelpers.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\equifax\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\tooltip\\tooltip.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\valueRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dyanmicForm\\utils\\fieldRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\rowCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\headerCellWrapper.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\backdrop.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\linerProgressBarSpacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tablePaginationToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\stickyTableHead.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\focusableTableRow.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderFilterToolbar.tsx",["955"],"import { useEffect, useState } from \"react\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n  },\n}));\n\nexport const TableHeaderFilterToolbar = ({\n  dense,\n  filters,\n  headerFilterManager,\n  handleResetGridState,\n}) => {\n  const classes = useStyles();\n  const renderFilters = filters.map((one, index) => {\n    const { filterComponentType, filterComponentProps } = one;\n    switch (filterComponentType) {\n      case \"groupByFilter\":\n        return (\n          <GroupByFilter\n            key={one?.filterComponentProps?.accessor ?? index}\n            headerFilterManager={headerFilterManager}\n            handleResetGridState={handleResetGridState}\n            {...filterComponentProps}\n          />\n        );\n      default:\n        return null;\n    }\n  });\n  return (\n    <Toolbar\n      className={clsx(classes.root)}\n      variant={dense ? \"dense\" : \"regular\"}\n    >\n      <Grid container spacing={3}>\n        {renderFilters}\n      </Grid>\n    </Toolbar>\n  );\n};\n\nexport const GroupByFilter = ({\n  accessor,\n  columnName,\n  selectType,\n  groups,\n  headerFilterManager,\n  handleResetGridState,\n}) => {\n  const isSingle = selectType === \"single\" ? true : false;\n  const [value, setValue] = useState<any | any[] | null>(null);\n  const [clearAllSelected, setClearAllSelected] = useState(false);\n  useEffect(() => {\n    if (\n      (Array.isArray(value) && value.length > 0) ||\n      (!Array.isArray(value) && Boolean(value))\n    ) {\n      headerFilterManager.addHeaderFilter(accessor, {\n        accessor,\n        condition: isSingle ? \"equal\" : \"in\",\n        value,\n      });\n      handleResetGridState();\n    } else {\n      headerFilterManager.removeHeaderFilter(accessor);\n      handleResetGridState();\n    }\n  }, [value]);\n  if (!Array.isArray(groups)) {\n    return null;\n  }\n  const buttons = groups.map((one) => {\n    return (\n      <ToggleButton key={one.value} value={one.value}>\n        {one.label} ({one.count})\n      </ToggleButton>\n    );\n  });\n  return (\n    <Grid item xs>\n      <Typography style={{ display: \"inline-flex\" }}>{columnName}</Typography>\n      <ToggleButtonGroup\n        size=\"small\"\n        value={value}\n        onChange={(event, value) => {\n          setValue(value);\n          setClearAllSelected(false);\n        }}\n        exclusive={isSingle ? true : false}\n      >\n        {buttons}\n        {isSingle ? (\n          <ToggleButton key={`${accessor}-all-single`} value={\"\"}>\n            Clear\n          </ToggleButton>\n        ) : (\n          <ToggleButton\n            selected={clearAllSelected}\n            key={`${accessor}-all-multiple`}\n            onClick={(e) => {\n              e.preventDefault();\n              setValue([]);\n              setClearAllSelected(true);\n            }}\n            value=\"\"\n          >\n            Clear\n          </ToggleButton>\n        )}\n      </ToggleButtonGroup>\n    </Grid>\n  );\n};\n","D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\tableHeaderToolbar.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\coreProducts.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\registration.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\valueFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useSequence.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\optionsFilter.tsx",["956"],"import { useEffect, useState } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport { FilterContainer } from \"./filterContainer\";\nimport { StyledTextField, StyledMenuItem } from \"./styledComponents\";\nimport { APISDK } from \"registry/fns/sdk\";\n\n// const ITEM_HEIGHT = 48;\n// const ITEM_PADDING_TOP = 8;\n\nexport const OptionsFilter = (props) => {\n  const {\n    column: {\n      filterValue,\n      setFilter,\n      filterComponentProps: { selectType },\n      id,\n    },\n    headerFilterState,\n    localFilterManager,\n    gridCode,\n    handleClose,\n  } = props;\n  const isMultiple = selectType === \"multiple\" ? true : false;\n  const [loading, setLoading] = useState(false);\n  const [_options, setOptions] = useState(\n    localFilterManager.getFilterState(id)?.options ?? []\n  );\n  const defaultValue = Boolean(filterValue?.value)\n    ? filterValue?.value\n    : isMultiple\n    ? []\n    : \"\";\n\n  const [value, setValue] = useState<string | string[]>(defaultValue);\n  useEffect(() => {\n    if (!Boolean(localFilterManager.getFilterState(id))) {\n      setLoading(true);\n      const verifiedHeaderFilter =\n        typeof headerFilterState === \"object\" && headerFilterState !== null\n          ? Object.values(headerFilterState)\n          : [];\n      APISDK.fetchGridColumnFilterProps(gridCode, {\n        accessor: id,\n        result_type: \"getGroups\",\n        filter_conditions: verifiedHeaderFilter,\n      }).then((result) => {\n        if (result.status === \"success\") {\n          localFilterManager.addFilterState(id, {\n            options: result.data?.groups,\n          });\n          setOptions(result.data?.groups ?? []);\n          setLoading(false);\n        } else {\n          setLoading(false);\n          setOptions([{ label: \"Couldnt load data\", value: \"\" }]);\n        }\n      });\n    }\n  }, []);\n\n  const handleSelectChange = (event: React.ChangeEvent<any>) => {\n    setValue(event.target.value);\n  };\n\n  const applyFilter = () => {\n    setFilter({\n      condition: isMultiple ? \"in\" : \"equal\",\n      value,\n    });\n    handleClose();\n  };\n  const clearFilter = () => {\n    setFilter(\"\");\n    handleClose();\n  };\n\n  const menuItems = _options.map((menuItem, index) => {\n    return (\n      <StyledMenuItem\n        //keep button value to true else keyboard navigation for select will stop working\n        button={true}\n        key={menuItem.value ?? index}\n        value={menuItem.value}\n      >\n        {isMultiple ? (\n          <Checkbox\n            checked={\n              Boolean(isMultiple)\n                ? Array.isArray(value) && value.indexOf(menuItem.value) >= 0\n                : value === menuItem.value\n            }\n          />\n        ) : null}\n        {menuItem.label}\n      </StyledMenuItem>\n    );\n  });\n\n  return (\n    <FilterContainer applyFilter={applyFilter} clearFilter={clearFilter}>\n      {(classes) => (\n        <Box\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          px={2}\n          mt={2}\n        >\n          <FormControl fullWidth>\n            <StyledTextField\n              fullWidth\n              select={true}\n              value={value}\n              SelectProps={{\n                multiple: isMultiple ? true : false,\n                native: false,\n                renderValue: isMultiple\n                  ? (values: any[] | any) => {\n                      if (!Array.isArray(values)) {\n                        values = [values];\n                      }\n                      if (Array.isArray(_options)) {\n                        return _options.reduce((acc, current) => {\n                          if (values.indexOf(current.value) >= 0) {\n                            if (acc === \"\") {\n                              return current.label;\n                            } else {\n                              return `${acc},${current.label}`;\n                            }\n                          }\n                          return acc;\n                        }, \"\");\n                      }\n                      return \"\";\n                    }\n                  : undefined,\n              }}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              InputProps={{\n                endAdornment: loading ? (\n                  <InputAdornment position=\"end\">\n                    <CircularProgress color=\"primary\" variant=\"indeterminate\" />\n                  </InputAdornment>\n                ) : null,\n              }}\n              onChange={handleSelectChange}\n              className={classes.multipleSelect}\n            >\n              {menuItems}\n            </StyledTextField>\n          </FormControl>\n        </Box>\n      )}\n    </FilterContainer>\n  );\n};\n\n/*\nMenuProps={{\n                PaperProps: {\n                  style: {\n                    maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n                  },\n                },\n              }}\n*/\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\rangeFilter.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\useCheckbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultRowCellRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\defaultHeaderColumnRenderer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\registry\\rulesEngine\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leadaction\\tabs\\editor.tsx",["957"],"import { Editor } from \"@tinymce/tinymce-react\";\r\n\r\nexport const TextEditor = () => {\r\n  const handleEditorChange = (content, editor) => {};\r\n\r\n  return (\r\n    <Editor\r\n      initialValue=\"<p>This is the initial content of the editor</p>\"\r\n      apiKey=\"pc8b933js2e6hly9nkp1ha2nuyak0anqgq47c31y2kontd64\"\r\n      init={{\r\n        height: 300,\r\n        menubar: false,\r\n        plugins: [\r\n          \"advlist autolink lists link image charmap print preview anchor\",\r\n          \"searchreplace visualblocks code fullscreen\",\r\n          \"insertdatetime media table paste code help wordcount\",\r\n        ],\r\n        toolbar:\r\n          \"undo redo | formatselect | bold italic backcolor | \\\r\n             alignleft aligncenter alignright alignjustify | \\\r\n             bullist numlist outdent indent | removeformat | insertdatetime | table | help\",\r\n      }}\r\n      onEditorChange={handleEditorChange}\r\n    />\r\n  );\r\n};\r\n","D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\context.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\types.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\util.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\fieldArray.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\observer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\form.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\field.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\columnVisibility.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\packages\\form\\src\\atoms.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\metaData.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\coreProducts\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\styledComponents.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\filterContainer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\textfield\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\inputMask\\maskInputField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\dataTable\\components\\filters\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\index.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\assets\\icons\\productIcons.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\spacer\\spacer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\autocomplete\\autocomplete.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datetimePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\timePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\select\\select.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\datetime\\datePicker.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switchGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\switch\\switch.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\rating\\rating.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\textField\\textField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\radio\\radio.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkboxGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\checkbox\\checkbox.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\slider\\slider.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\toggleButtonGroup\\toggleButtonGroup.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\passwordField\\passwordField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\derived\\numberFormat\\numberFormat.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\common\\valueField\\valueField.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_crm\\pages\\thankyou\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\checkbox\\checkbox.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\dashboard\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\detailsTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\gridTabPanel.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\leads\\displayData.js",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\dateTimePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\datePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\timePicker.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\toggleButtonGroup\\toggleButtonGroup.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\index.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\components\\styledComponent\\datetime\\styles.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabs.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabCustomer.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\tabInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadForm.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\customerInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\leadInformation.tsx",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\style.ts",[],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\tabView\\tabPanelContent\\detailsTabs\\editor.tsx",["958"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\formPreview.tsx",["959","960"],"D:\\Ratnaafin\\Ratnafin\\src\\pages_los\\pages\\CAM\\SMELoans\\CC_OD\\style.ts",[],{"ruleId":"961","replacedBy":"962"},{"ruleId":"963","replacedBy":"964"},{"ruleId":"965","severity":1,"message":"966","line":15,"column":19,"nodeType":"967","messageId":"968","endLine":17,"endColumn":2},{"ruleId":"969","severity":1,"message":"970","line":441,"column":13,"nodeType":"971","messageId":"972","endLine":441,"endColumn":17},{"ruleId":"973","severity":1,"message":"974","line":40,"column":41,"nodeType":"975","endLine":40,"endColumn":61},{"ruleId":"961","replacedBy":"962"},{"ruleId":"963","replacedBy":"964"},{"ruleId":"976","severity":1,"message":"977","line":122,"column":6,"nodeType":"978","endLine":122,"endColumn":8,"suggestions":"979"},{"ruleId":"961","replacedBy":"980"},{"ruleId":"963","replacedBy":"981"},{"ruleId":"982","severity":1,"message":"983","line":49,"column":10,"nodeType":"971","messageId":"972","endLine":49,"endColumn":20},{"ruleId":"969","severity":1,"message":"984","line":13,"column":10,"nodeType":"971","messageId":"972","endLine":13,"endColumn":20},{"ruleId":"969","severity":1,"message":"985","line":15,"column":9,"nodeType":"971","messageId":"972","endLine":15,"endColumn":24},{"ruleId":"969","severity":1,"message":"986","line":31,"column":10,"nodeType":"971","messageId":"972","endLine":31,"endColumn":12},{"ruleId":"969","severity":1,"message":"987","line":32,"column":10,"nodeType":"971","messageId":"972","endLine":32,"endColumn":23},{"ruleId":"969","severity":1,"message":"988","line":1,"column":10,"nodeType":"971","messageId":"972","endLine":1,"endColumn":12},{"ruleId":"969","severity":1,"message":"989","line":1,"column":40,"nodeType":"971","messageId":"972","endLine":1,"endColumn":46},{"ruleId":"969","severity":1,"message":"990","line":3,"column":10,"nodeType":"971","messageId":"972","endLine":3,"endColumn":16},{"ruleId":"969","severity":1,"message":"991","line":5,"column":3,"nodeType":"971","messageId":"972","endLine":5,"endColumn":18},{"ruleId":"969","severity":1,"message":"992","line":6,"column":3,"nodeType":"971","messageId":"972","endLine":6,"endColumn":18},{"ruleId":"969","severity":1,"message":"993","line":21,"column":9,"nodeType":"971","messageId":"972","endLine":21,"endColumn":17},{"ruleId":"969","severity":1,"message":"994","line":22,"column":10,"nodeType":"971","messageId":"972","endLine":22,"endColumn":17},{"ruleId":"969","severity":1,"message":"995","line":22,"column":19,"nodeType":"971","messageId":"972","endLine":22,"endColumn":29},{"ruleId":"969","severity":1,"message":"996","line":25,"column":10,"nodeType":"971","messageId":"972","endLine":25,"endColumn":18},{"ruleId":"969","severity":1,"message":"997","line":27,"column":9,"nodeType":"971","messageId":"972","endLine":27,"endColumn":27},{"ruleId":"973","severity":1,"message":"998","line":71,"column":10,"nodeType":"975","endLine":71,"endColumn":48},{"ruleId":"976","severity":1,"message":"999","line":19,"column":51,"nodeType":"978","endLine":19,"endColumn":53,"suggestions":"1000"},{"ruleId":"976","severity":1,"message":"1001","line":31,"column":5,"nodeType":"978","endLine":31,"endColumn":7,"suggestions":"1002"},{"ruleId":"976","severity":1,"message":"1003","line":92,"column":5,"nodeType":"978","endLine":92,"endColumn":62,"suggestions":"1004"},{"ruleId":"969","severity":1,"message":"992","line":5,"column":3,"nodeType":"971","messageId":"972","endLine":5,"endColumn":18},{"ruleId":"969","severity":1,"message":"1005","line":31,"column":9,"nodeType":"971","messageId":"972","endLine":31,"endColumn":24},{"ruleId":"969","severity":1,"message":"1006","line":1,"column":39,"nodeType":"971","messageId":"972","endLine":1,"endColumn":47},{"ruleId":"1007","severity":1,"message":"1008","line":59,"column":37,"nodeType":"1009","messageId":"1010","endLine":59,"endColumn":39},{"ruleId":"976","severity":1,"message":"1011","line":99,"column":6,"nodeType":"978","endLine":99,"endColumn":8,"suggestions":"1012"},{"ruleId":"969","severity":1,"message":"1013","line":13,"column":5,"nodeType":"971","messageId":"972","endLine":13,"endColumn":14},{"ruleId":"969","severity":1,"message":"1014","line":14,"column":5,"nodeType":"971","messageId":"972","endLine":14,"endColumn":10},{"ruleId":"969","severity":1,"message":"1013","line":76,"column":5,"nodeType":"971","messageId":"972","endLine":76,"endColumn":14},{"ruleId":"969","severity":1,"message":"1015","line":80,"column":5,"nodeType":"971","messageId":"972","endLine":80,"endColumn":16},{"ruleId":"969","severity":1,"message":"1016","line":128,"column":13,"nodeType":"971","messageId":"972","endLine":128,"endColumn":34},{"ruleId":"976","severity":1,"message":"1017","line":78,"column":6,"nodeType":"978","endLine":78,"endColumn":13,"suggestions":"1018"},{"ruleId":"976","severity":1,"message":"1019","line":63,"column":6,"nodeType":"978","endLine":63,"endColumn":8,"suggestions":"1020"},{"ruleId":"1021","severity":1,"message":"1022","line":19,"column":11,"nodeType":"1023","messageId":"1024","endLine":21,"endColumn":92},{"ruleId":"1021","severity":1,"message":"1022","line":19,"column":11,"nodeType":"1023","messageId":"1024","endLine":21,"endColumn":92},{"ruleId":"969","severity":1,"message":"990","line":9,"column":10,"nodeType":"971","messageId":"972","endLine":9,"endColumn":16},{"ruleId":"976","severity":1,"message":"1025","line":58,"column":6,"nodeType":"978","endLine":58,"endColumn":8,"suggestions":"1026"},"no-native-reassign",["1027"],"no-negated-in-lhs",["1028"],"no-new-func","The Function constructor is eval.","NewExpression","noFunctionConstructor","@typescript-eslint/no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component CC_ODFormWrapper must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'interval' and 'timeout'. Either include them or remove the dependency array.","ArrayExpression",["1029"],["1027"],["1028"],"no-unused-vars","'currentRow' is assigned a value but never used.","'OpenDialog' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'id' is assigned a value but never used.","'expiryOtpTime' is assigned a value but never used.","'FC' is defined but never used.","'useRef' is defined but never used.","'APISDK' is defined but never used.","'ViewFormWrapper' is defined but never used.","'isMetaDataValid' is defined but never used.","'navigate' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'formData' is assigned a value but never used.","'onSubmitHandlerNew' is assigned a value but never used.","Imported JSX component CC_ODForm must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useMemo has a missing dependency: 'metaData.columns'. Either include it or remove the dependency array.",["1030"],"React Hook useCallback has a missing dependency: 'metaData.gridConfig.rowIdColumn'. Either include it or remove the dependency array.",["1031"],"React Hook useCallback has a missing dependency: 'gridCode'. Either include it or remove the dependency array.",["1032"],"'onSubmitHandler' is assigned a value but never used.","'Fragment' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","React Hook useEffect has missing dependencies: 'fallbackURL', 'flowExist', 'navigate', and 'refID'. Either include them or remove the dependency array.",["1033"],"'flowExist' is assigned a value but never used.","'refID' is assigned a value but never used.","'fallbackURL' is assigned a value but never used.","'currentFetchRequestID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'accessor', 'handleResetGridState', 'headerFilterManager', and 'isSingle'. Either include them or remove the dependency array. If 'handleResetGridState' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1034"],"React Hook useEffect has missing dependencies: 'gridCode', 'headerFilterState', 'id', and 'localFilterManager'. Either include them or remove the dependency array.",["1035"],"no-multi-str","Multiline support is limited to browsers supporting ES5 only.","Literal","multilineString","React Hook useEffect has missing dependencies: 'temp.acr', 'temp.addOffice', 'temp.age', 'temp.associateCompanies', 'temp.awardRecognitionreceived', 'temp.bankName', 'temp.chequeBounce', 'temp.companyHistory', 'temp.existingProducts', 'temp.externalCreditRating', 'temp.incorporationDate', 'temp.loanAmount', 'temp.loanDetails', 'temp.loanPurpose', 'temp.majorSuppliers', 'temp.msme', 'temp.natureOfFacility', 'temp.newTakeover', 'temp.outstandingAmount', 'temp.paymenttermSupplier', 'temp.presentProposedLoancomments', 'temp.productEndUse', 'temp.promotersDirectorsName', 'temp.proposedAmount', 'temp.proposedBusiness', 'temp.rateOfInterest', 'temp.requestedROI', and 'temp.udhyamAadharNumber'. Either include them or remove the dependency array.",["1036"],"no-global-assign","no-unsafe-negation",{"desc":"1037","fix":"1038"},{"desc":"1039","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},"Update the dependencies array to be: [interval, timeout]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [metaData.columns]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [metaData.gridConfig.rowIdColumn]",{"range":"1057","text":"1058"},"Update the dependencies array to be: [headerFilterState, gridCode]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [fallbackURL, flowExist, navigate, refID]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [accessor, handleResetGridState, headerFilterManager, isSingle, value]",{"range":"1063","text":"1064"},"Update the dependencies array to be: [gridCode, headerFilterState, id, localFilterManager]",{"range":"1065","text":"1066"},"Update the dependencies array to be: [temp.acr, temp.addOffice, temp.age, temp.associateCompanies, temp.awardRecognitionreceived, temp.bankName, temp.chequeBounce, temp.companyHistory, temp.existingProducts, temp.externalCreditRating, temp.incorporationDate, temp.loanAmount, temp.loanDetails, temp.loanPurpose, temp.majorSuppliers, temp.msme, temp.natureOfFacility, temp.newTakeover, temp.outstandingAmount, temp.paymenttermSupplier, temp.presentProposedLoancomments, temp.productEndUse, temp.promotersDirectorsName, temp.proposedAmount, temp.proposedBusiness, temp.rateOfInterest, temp.requestedROI, temp.udhyamAadharNumber]",{"range":"1067","text":"1068"},[3688,3690],"[interval, timeout]",[594,596],"[metaData.columns]",[854,856],"[metaData.gridConfig.rowIdColumn]",[2957,3014],"[headerFilterState, gridCode]",[2919,2921],"[fallbackURL, flowExist, navigate, refID]",[2143,2150],"[accessor, handleResetGridState, headerFilterManager, isSingle, value]",[2036,2038],"[gridCode, headerFilterState, id, localFilterManager]",[2414,2416],"[temp.acr, temp.addOffice, temp.age, temp.associateCompanies, temp.awardRecognitionreceived, temp.bankName, temp.chequeBounce, temp.companyHistory, temp.existingProducts, temp.externalCreditRating, temp.incorporationDate, temp.loanAmount, temp.loanDetails, temp.loanPurpose, temp.majorSuppliers, temp.msme, temp.natureOfFacility, temp.newTakeover, temp.outstandingAmount, temp.paymenttermSupplier, temp.presentProposedLoancomments, temp.productEndUse, temp.promotersDirectorsName, temp.proposedAmount, temp.proposedBusiness, temp.rateOfInterest, temp.requestedROI, temp.udhyamAadharNumber]"]